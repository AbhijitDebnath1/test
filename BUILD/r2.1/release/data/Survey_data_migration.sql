---TBL_SURVEY
UPDATE TCSIP_CPORTAL.TBL_SURVEY SUR
   SET SUR.SURVEYSUBTYPE       = 44,
       SUR.ISDELEGATIONALLOWED = '1',
       SUR.ISSTUDYSPECIFIC = (CASE
                               WHEN (SELECT COUNT(*)
                                       FROM TCSIP_CPORTAL.TBL_SURVEYSIPASSOCIATION SIP
                                      WHERE SIP.BELONGTO = SUR.SURVEYID
                                        AND SIP.STUDYID > 0) > 0 THEN
                                '1'
                               ELSE
                                '0'
                             END),
       SUR.MODIFIEDDT          = SYSDATE,
       SUR.MODIFIEDBY          = 'SYSTEM';
 --WHERE SUR.SURVEYCD IN ('S-1005', 'S-1001', 'S-1002', 'S-1003', 'S-1004'); --This is only for prod 

COMMIT;

prompt --TBL_SURVEYSIPASSOCIATION before Count
SELECT COUNT(1) SURVEYSIPASSOCIATION_COUNT FROM TCSIP_CPORTAL.TBL_SURVEYSIPASSOCIATION;
 
 --TBL_SURVEYSIPASSOCIATION
 UPDATE TCSIP_CPORTAL.TBL_SURVEYSIPASSOCIATION
    SET ISSTUDYSKIPPED = '0',
        MODIFIEDDT = SYSDATE,
        MODIFIEDBY = 'SYSTEM'
  WHERE BELONGTO IN (1, 2, 3, 4, 5);
  
COMMIT;  
  
prompt --TBL_SURVEYSIPASSOCIATION after Count
SELECT COUNT(1) SURVEYSIPASSOCIATION_COUNT FROM TCSIP_CPORTAL.TBL_SURVEYSIPASSOCIATION;  
  
 -- TBL_SURVEY_PROGRAMMAP
prompt --TBL_SURVEY_PROGRAMMAP before Count
SELECT COUNT(1) PROGRAMMAP_COUNT FROM TBL_SURVEY_PROGRAMMAP;

DECLARE
  CURSOR C1 IS
    SELECT SIP.BELONGTO   BELONGTO,
           SIP.ISTEMPLATE ISTEMPLATE,
           SIP.STUDYID,
           CASE
         WHEN SIP.STUDYID > 0 THEN
          NVL((SELECT STD.PROGID
             FROM TBL_STUDY STD
            WHERE STD.STUDYID = SIP.STUDYID),0)
         ELSE
          NVL(SIP.PROGRAMID,0)
       END PROGRAMID
      FROM TCSIP_CPORTAL.TBL_SURVEYSIPASSOCIATION SIP;

BEGIN
  FOR REC IN C1 LOOP
  
    INSERT INTO TCSIP_CPORTAL.TBL_SURVEY_PROGRAMMAP
      (MAPID,
       BELONGTO,
       ISTEMPLATE,
       PROGRAMID,
       CREATEDDT,
       CREATEDBY,
       MODIFIEDDT,
       MODIFIEDBY)
    VALUES
      (TCSIP_CPORTAL.SEQ_SURVEY_PROGRAMMAP.NEXTVAL,
       REC.BELONGTO,
       REC.ISTEMPLATE,
       REC.PROGRAMID,
       SYSDATE,
       'SYSTEM',
       NULL,
       NULL);
END LOOP;

COMMIT;

END ;
/
prompt --TBL_SURVEY_PROGRAMMAP after Count
SELECT COUNT(1) PROGRAMMAP_COUNT FROM TBL_SURVEY_PROGRAMMAP;

---TBL_SURVEY_COMPOUNDMAP
prompt --TBL_SURVEY_COMPOUNDMAP before Count
SELECT COUNT(1) COMPOUNDMAP_COUNT FROM TCSIP_CPORTAL.TBL_SURVEY_COMPOUNDMAP;

 DECLARE
  CURSOR C1 IS
    SELECT SIP.BELONGTO   BELONGTO,
           SIP.ISTEMPLATE ISTEMPLATE,
           SIP.STUDYID,
           --SIP.PROGRAMID  PROGRAMID,
           CASE
         WHEN SIP.STUDYID > 0 THEN
          (SELECT STD.Compoundid
             FROM TBL_STUDY STD
            WHERE STD.STUDYID = SIP.STUDYID)
         ELSE
          NVL(SIP.Compoundid,0)
       END Compoundid
      FROM TCSIP_CPORTAL.TBL_SURVEYSIPASSOCIATION SIP;

BEGIN
  FOR REC IN C1 LOOP
  
    INSERT INTO TCSIP_CPORTAL.TBL_SURVEY_COMPOUNDMAP
      (MAPID,
      BELONGTO,
      ISTEMPLATE,
      COMPOUNDID,
      CREATEDDT,
      CREATEDBY,
      MODIFIEDDT,
      MODIFIEDBY)
    VALUES
      (TCSIP_CPORTAL.seq_SURVEY_COMPOUNDMAP.NEXTVAL,
       REC.BELONGTO,
       REC.ISTEMPLATE,
       REC.Compoundid,
       SYSDATE,
       'SYSTEM',
       NULL,
       NULL);
END LOOP;

COMMIT;

END ;
/
prompt --TBL_SURVEY_COMPOUNDMAP After Count
SELECT COUNT(1) COMPOUNDMAP_COUNT FROM TCSIP_CPORTAL.TBL_SURVEY_COMPOUNDMAP;
	  
---TBL_SURVEYLOGICJUMPMAP

prompt --TBL_SURVEYLOGICJUMPMAP before Count
SELECT COUNT(1) SURVEYLOGICJUMPMAP_COUNT FROM TCSIP_CPORTAL.TBL_SURVEYLOGICJUMP;



MERGE INTO TCSIP_CPORTAL.TBL_SURVEYLOGICJUMP SURLOGJMP1
USING (SELECT SURANS.SURVEYANSID            SURVEYANSID,
              SURANS.SURVEYQUESID           SURVEYQUESID,
              SURANS.SURVEYANSTITLE         SURVEYANSTITLE,
              SURLOGJMP.ISVISIBLE           ISVISIBLE,
              SURLOGJMP.ISREQUIRED          ISREQUIRED,
              SURLOGJMP.LOGICTYPE           LOGICTYPE,
              SURLOGJMP.SURVEYELSESECTIONID SURVEYELSESECTIONID,
              SURLOGJMP.SURVEYLOGICID       SURVEYLOGICID,
              SURLOGJMP.SURVEYELSEQUESID    SURVEYELSEQUESID
         FROM TBL_SURVEYLOGICJUMP SURLOGJMP,
              TBL_SURVEYQUESTION  SURQSTN,
              TBL_SURVEYANSWER    SURANS
        WHERE SURQSTN.SURVEYLOGICID = SURLOGJMP.SURVEYLOGICID
          AND SURLOGJMP.SURVEYQUESID = SURANS.SURVEYQUESID
          AND SURQSTN.ISLOGICJUMP = 1) SURVEYLOGIC
ON (SURLOGJMP1.SURVEYLOGICID = SURVEYLOGIC.SURVEYLOGICID AND SURLOGJMP1.SURVEYANSID=SURVEYLOGIC.SURVEYANSID)
WHEN NOT MATCHED THEN
  INSERT
    (SURVEYLOGICID,
     SURVEYLOGICDESC,
     SURVEYQUESID,
     SURVEYANSID,
     ISVISIBLE,
     ISREQUIRED,
     CREATEDDT,
     CREATEDBY,
     MODIFIEDDT,
     MODIFIEDBY,
     SURVEYELSEQUESID,
     LOGICTYPE,
     SURVEYELSESECTIONID)
  VALUES
    (SEQ_SURVEYLOGICJUMP.NEXTVAL,
     'Logic Description',
     SURVEYLOGIC.SURVEYQUESID,
     SURVEYLOGIC.SURVEYANSID,
     SURVEYLOGIC.ISVISIBLE,
     SURVEYLOGIC.ISREQUIRED,
     SYSDATE,
     'SYSTEM',
     NULL,
     NULL,
     SURVEYLOGIC.SURVEYELSEQUESID,
     SURVEYLOGIC.LOGICTYPE,
     SURVEYLOGIC.SURVEYELSESECTIONID);
     
COMMIT;     
          
DECLARE
  CURSOR SURVEYLOG IS
    SELECT SURLOGJMP.SURVEYQUESID,
           SURLOGJMP.SURVEYANSID,
           SURLOGJMP.SURVEYLOGICID
      FROM TCSIP_CPORTAL.TBL_SURVEYLOGICJUMP SURLOGJMP;

BEGIN
  FOR SURLOGREC IN SURVEYLOG LOOP
    INSERT INTO TBL_SURVEYLOGICJUMPMAP
      (SURVEYLOGICMAPID,SURVEYQUESID,SURVEYANSID,SURVEYLOGICID,CREATEDDT,
       CREATEDBY,MODIFIEDDT,MODIFIEDBY)
    VALUES
      (SEQ_SURVEYLOGICJUMPMAP.NEXTVAL,
       SURLOGREC.SURVEYQUESID,
       SURLOGREC.SURVEYANSID,
       SURLOGREC.SURVEYLOGICID,
       SYSDATE,
       'SYSTEM',
       NULL,
       NULL);
  END LOOP;
  
COMMIT;
  
END;
/	 

prompt --TBL_SURVEYLOGICJUMPMAP after Count
SELECT COUNT(1) SURVEYLOGICJUMPMAP_COUNT FROM TCSIP_CPORTAL.TBL_SURVEYLOGICJUMP; 

---TBL_SURVEYUSERMAP
prompt --TBL_SURVEYUSERMAP before Count
SELECT COUNT(1) SURVEYUSERMAP_COUNT FROM TCSIP_CPORTAL.TBL_SURVEYUSERMAP;

UPDATE TCSIP_CPORTAL.TBL_SURVEYUSERMAP SMAP SET SMAP.ISSURVEYACCEPTED='Y' WHERE SMAP.SURVEYSTATUS IN (16,18) ;
COMMIT;
UPDATE TCSIP_CPORTAL.TBL_SURVEYUSERMAP SMAP SET SMAP.ISSURVEYACCEPTED='N' WHERE SMAP.SURVEYSTATUS NOT IN (16,18) ;
COMMIT;
UPDATE TCSIP_CPORTAL.TBL_SURVEYUSERMAP SMAP SET SMAP.SURVEYSTATUS=54 WHERE SMAP.SURVEYSTATUS IN (38,39) ;
COMMIT;

prompt --TBL_SURVEYUSERMAP after Count
SELECT COUNT(1) SURVEYUSERMAP_COUNT FROM TCSIP_CPORTAL.TBL_SURVEYUSERMAP;
--TBL_TASK
UPDATE TBL_TASK SET ISDELETED='Y' WHERE CATEGORYCODE IN ('SURVEY_DELEGATE','SURVEY_RECEIVED');
COMMIT;

---TBL_EXPORTPREF
UPDATE TCSIP_CPORTAL.TBL_EXPORTPREF SET ISFACILITYPROFILEDATAREQD='Y' WHERE ISPROFILEDATAREQD='Y' AND DELIVERYSTATUS='N';
COMMIT;
UPDATE TCSIP_CPORTAL.TBL_EXPORTPREF SET ISSURVEYRESPONSEDATAREQD='Y' WHERE ISPROFILEDATAREQD='Y' AND DELIVERYSTATUS='N';
COMMIT;

---SEQ_SURVEY_THERAPEUTICAREAMAP

prompt --SEQ_SURVEY_THERAPEUTICAREAMAP before Count
SELECT COUNT(1) THERAPEUTICAREAMAP_COUNT FROM TCSIP_CPORTAL.TBL_SURVEY_THERAPEUTICAREAMAP;

DECLARE

  CURSOR C1 IS
    SELECT SURTHERA.BELONGTO          BELONGTO,
           SURTHERA.THERAPEUTICAREAID THERAPEUTICAREAID,
           STD.STUDYID                STUDYID,
           SURTHERA.CREATEDDT,
           SURTHERA.CREATEDBY,
           SURTHERA.MODIFIEDDT,
           SURTHERA.MODIFIEDBY
      FROM TCSIP_CPORTAL.TBL_SURVEY_THERAPEUTICAREAMAP SURTHERA,
           TCSIP_CPORTAL.TBL_SURVEYSIPASSOCIATION      SIP,
           TBL_STUDY STD
     WHERE SURTHERA.BELONGTO = SIP.BELONGTO
       AND STD.Studyid       =SIP.Studyid
       AND SIP.STUDYID       > 0
       AND SURTHERA.Istemplate = '0';

BEGIN
  FOR REC IN C1 LOOP
    DELETE FROM TCSIP_CPORTAL.TBL_SURVEY_THERAPEUTICAREAMAP
     WHERE BELONGTO = REC.BELONGTO ;
  
    INSERT INTO TCSIP_CPORTAL.TBL_SURVEY_THERAPEUTICAREAMAP
      (MAPID,
       BELONGTO,
       ISTEMPLATE,
       THERAPEUTICAREAID,
       CREATEDDT,
       CREATEDBY,
       MODIFIEDDT,
       MODIFIEDBY)
    VALUES
      (TCSIP_CPORTAL.SEQ_SURVEY_THERAPEUTICAREAMAP.Nextval,
      REC.BELONGTO,
       '0',
       REC.STUDYID,
       REC.CREATEDDT,
       REC.CREATEDBY,
       REC.MODIFIEDDT,
       REC.MODIFIEDBY);
       
END LOOP;

COMMIT;

END ;
/

prompt --SEQ_SURVEY_THERAPEUTICAREAMAP after Count
SELECT COUNT(1) THERAPEUTICAREAMAP_COUNT FROM TCSIP_CPORTAL.TBL_SURVEY_THERAPEUTICAREAMAP;

prompt --TBL_SURVEYLOGICJUMP before Count
SELECT COUNT(1) SURVEYLOGICJUMP_COUNT FROM TCSIP_CPORTAL.TBL_SURVEYLOGICJUMP;

---TOSECTIONID in TBL_SURVEYLOGICJUMP
  DECLARE
          CURSOR C1 IS
            SELECT CASE
                     WHEN SURSEC.LOGICTYPE = 2 THEN
                      SURSEC.SURVEYQUESID
                     WHEN SURSEC.LOGICTYPE = 1 THEN
                      (SELECT SURQSTN.SURVEYSECTIONID
                         FROM TCSIP_CPORTAL.TBL_SURVEYQUESTION SURQSTN
                        WHERE SURQSTN.SURVEYQUESID = SURSEC.SURVEYQUESID)
                     ELSE
                      SURSEC.TOSECTIONID
                   END TOSECTIONID,
                   SURSEC.SURVEYLOGICID
              FROM TCSIP_CPORTAL.TBL_SURVEYLOGICJUMP SURSEC;
        
        BEGIN
          FOR REC IN C1 LOOP
            UPDATE TCSIP_CPORTAL.TBL_SURVEYLOGICJUMP SURSEC1
               SET SURSEC1.TOSECTIONID = REC.TOSECTIONID
             WHERE SURSEC1.SURVEYLOGICID = REC.SURVEYLOGICID;
          END LOOP;
          COMMIT;
        END;
/		
--TBL_SURVEYQUESTION 

prompt --TBL_SURVEYLOGICJUMP after Count
SELECT COUNT(1) SURVEYLOGICJUMP_COUNT FROM TCSIP_CPORTAL.TBL_SURVEYLOGICJUMP;

UPDATE TCSIP_CPORTAL.TBL_SURVEYQUESTION SURQSTN SET SURQSTN.SHOWINSURVEY='Y';	
		
COMMIT;