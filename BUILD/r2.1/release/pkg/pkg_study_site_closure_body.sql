create or replace PACKAGE BODY pkg_study_site_closure AS

-- Package Body for study Closure Activity

PROCEDURE  "PROC_STUDY_CLOSURE_ACTIVITY"(V_NEW_CNT OUT NUMBER)
  /*********************************************************************
  /**
  /** Procedure:   PROC_STUDY_CLOSURE_ACTIVITY
  /** Description: POPULATES STUDY SITE CLOSURE ACITIVITY
  /** Author:      Cognizant
  /** Out:
  /** In:
  /*********************************************************************/
AS

V_MSG  VARCHAR2(500);
V_CNT_SEQ NUMBER(38,0);

/*START*/
TYPE STUDYCLOSEACTIVITY_TYPE
IS
RECORD
(
  ACTIVITYID TBL_STUDYCLOSEACTIVITY.ACTIVITYID%TYPE ,
  ACTIVITYNAME TBL_STUDYCLOSEACTIVITY.ACTIVITYNAME%TYPE ,
  ACTIVITYDESC TBL_STUDYCLOSEACTIVITY.ACTIVITYDESC%TYPE,
  ISSPONSORACTIVITY TBL_STUDYCLOSEACTIVITY.ISSPONSORACTIVITY%TYPE,
  ISMANDATORY TBL_STUDYCLOSEACTIVITY.ISMANDATORY%TYPE
);

TYPE STUDYCLOSEACTIVITY_REC_TYPE
IS
TABLE OF STUDYCLOSEACTIVITY_TYPE;

STUDYCLOSEACTIVITY_REC STUDYCLOSEACTIVITY_REC_TYPE := STUDYCLOSEACTIVITY_REC_TYPE();
SITECLOSEACTIVITY_REC STUDYCLOSEACTIVITY_REC_TYPE := STUDYCLOSEACTIVITY_REC_TYPE();
/*END*/

/*START*/
TYPE STUDYCLOSUREMAP_TYPE
IS
RECORD
(
STUDYCLOSEID TBL_STUDYCLOSUREMAP.STUDYCLOSEID%TYPE ,
USERID TBL_STUDYCLOSUREMAP.USERID%TYPE ,
STUDYID TBL_STUDYCLOSUREMAP.STUDYID%TYPE ,
SITEID TBL_STUDYCLOSUREMAP.SITEID%TYPE
);

TYPE STUDYCLOSURE_REC_TYPE
IS
TABLE OF STUDYCLOSUREMAP_TYPE;

STUDYCLOSURE_REC STUDYCLOSURE_REC_TYPE := STUDYCLOSURE_REC_TYPE();
/*END*/

/*START*/
TYPE STUDYSITES_TYPE
IS
RECORD
(
SITEID TBL_SITE.SITEID%TYPE
);

TYPE STUDYSITES_REC_TYPE
IS
TABLE OF STUDYSITES_TYPE;

STUDYSITES_REC STUDYSITES_REC_TYPE := STUDYSITES_REC_TYPE();
/*END*/

BEGIN
  /*GET STUDY CLOSE ACTIVITY LIST*/
  SELECT
    tblSA.ACTIVITYID, tblSA.ACTIVITYNAME, tblSA.ACTIVITYDESC, tblSA.ISSPONSORACTIVITY, tblSA.ISMANDATORY
  BULK COLLECT INTO STUDYCLOSEACTIVITY_REC
  FROM TBL_STUDYCLOSEACTIVITY tblSA
    WHERE tblSA.ISSPONSORACTIVITY = 'Y';

  /*GET STUDY SITE CLOSE ACTIVITY LIST*/
  SELECT
    tblA.ACTIVITYID, tblA.ACTIVITYNAME, tblA.ACTIVITYDESC, tblA.ISSPONSORACTIVITY, tblA.ISMANDATORY
  BULK COLLECT INTO SITECLOSEACTIVITY_REC
  FROM TBL_STUDYCLOSEACTIVITY tblA
  WHERE tblA.ISSPONSORACTIVITY = 'N';

  /*GET STUDYCLOSURE LIST HAVING STATUS INITIATED*/
  SELECT
    STUDYCLOSEID, USERID, STUDYID, SITEID
  BULK COLLECT INTO STUDYCLOSURE_REC
  FROM TBL_STUDYCLOSUREMAP tblSC
  WHERE UPPER(tblSC.OVERALLSTATUS) = 'INITIATED' AND ISSTUDYCLOSE = 'Y' AND ISTASKSKIPPED = 'N' AND MODIFIEDDT IS NULL;

  /*STUDYCLOSURE LIST FOR LOOP*/
  FOR I IN 1..STUDYCLOSURE_REC.COUNT LOOP
    /*GET SITE LIST FOR STUDY*/
    SELECT
      tblSt.SITEID
    BULK COLLECT INTO STUDYSITES_REC
    FROM TBL_SITE tblSt
    WHERE tblSt.STUDYID = STUDYCLOSURE_REC(I).STUDYID;
    /*STUDY SITE LIST FOR LOOP*/
    FOR J IN 1..STUDYSITES_REC.COUNT LOOP
      /*STUDY SITE CLOSE ACTIVITY LIST FOR LOOP*/
      FOR K IN 1..SITECLOSEACTIVITY_REC.COUNT LOOP
        /*INSERT INTO STUDY CLOSE ACTIVITY MAP FOR SITE*/
        INSERT
        INTO TBL_STUDYCLOSEACTIVITYMAP
          (
          STUDYCLOSEACTIVITYID, STUDYID, USERID, ACTIVITYID, SITEID, ISCOMPLETED, CREATEDDT, CREATEDBY
          )
          VALUES
          (
          SEQ_STUDYCLOSEACTIVITYMAP.NEXTVAL,
          STUDYCLOSURE_REC(I).STUDYID,
          STUDYCLOSURE_REC(I).USERID,
          SITECLOSEACTIVITY_REC(K).ACTIVITYID,
          STUDYSITES_REC(J).SITEID,
          'N',
          SYSDATE,
          STUDYCLOSURE_REC(I).USERID
          );
      END LOOP;
    END LOOP;

    /*STUDY CLOSE ACTIVITY LIST FOR LOOP*/
    FOR T IN 1..STUDYCLOSEACTIVITY_REC.COUNT LOOP
      /*INSERT INTO STUDY CLOSE ACTIVITY MAP FOR STUDY*/
      INSERT
        INTO TBL_STUDYCLOSEACTIVITYMAP
          (
          STUDYCLOSEACTIVITYID, STUDYID, USERID, ACTIVITYID, SITEID, ISCOMPLETED, CREATEDDT, CREATEDBY
          )
          VALUES
          (
          SEQ_STUDYCLOSEACTIVITYMAP.NEXTVAL,
          STUDYCLOSURE_REC(I).STUDYID,
          STUDYCLOSURE_REC(I).USERID,
          STUDYCLOSEACTIVITY_REC(T).ACTIVITYID,
          STUDYCLOSURE_REC(I).SITEID,
          'N',
          SYSDATE,
          STUDYCLOSURE_REC(I).USERID
          );
    END LOOP;

    UPDATE TBL_STUDYCLOSUREMAP SET MODIFIEDBY='Scheduler', MODIFIEDDT=SYSDATE WHERE STUDYCLOSEID = STUDYCLOSURE_REC(I).STUDYCLOSEID;
  END LOOP;

  COMMIT;
  V_NEW_CNT := V_CNT_SEQ;

EXCEPTION
  /*when no data found then log exception*/
WHEN NO_DATA_FOUND THEN
  V_MSG := 'NO DATA FOUND';
  DBMS_OUTPUT.PUT_LINE(V_MSG);
  ROLLBACK;
  RETURN;
  /*if Primary key violation then log exception*/
WHEN DUP_VAL_ON_INDEX THEN
  V_MSG := SQLERRM;
  DBMS_OUTPUT.PUT_LINE(V_MSG);
  ROLLBACK;
  RETURN;
  /*if other exception then log exception*/
WHEN OTHERS THEN
  V_MSG := SQLERRM;
  DBMS_OUTPUT.PUT_LINE(V_MSG);
  ROLLBACK;
  RETURN;
END PROC_STUDY_CLOSURE_ACTIVITY;

--- Procedure for Site Closure Activity

 PROCEDURE  "PROC_SITE_CLOSURE_ACTIVITY" (V_NEW_CNT OUT NUMBER)
  /*********************************************************************
  /**
  /** Procedure:   PROC_SITE_CLOSURE_ACTIVITY
  /** Description: POPULATES SITE CLOSURE ACITIVITY
  /** Author:      Cognizant
  /** Out:
  /** In:
  /*********************************************************************/
AS

V_MSG  VARCHAR2(500);
V_CNT_SEQ NUMBER(38,0);

/*START*/
TYPE STUDYCLOSEACTIVITY_TYPE
IS
RECORD
(
  ACTIVITYID TBL_STUDYCLOSEACTIVITY.ACTIVITYID%TYPE ,
  ACTIVITYNAME TBL_STUDYCLOSEACTIVITY.ACTIVITYNAME%TYPE ,
  ACTIVITYDESC TBL_STUDYCLOSEACTIVITY.ACTIVITYDESC%TYPE,
  ISSPONSORACTIVITY TBL_STUDYCLOSEACTIVITY.ISSPONSORACTIVITY%TYPE,
  ISMANDATORY TBL_STUDYCLOSEACTIVITY.ISMANDATORY%TYPE
);

TYPE STUDYCLOSEACTIVITY_REC_TYPE
IS
TABLE OF STUDYCLOSEACTIVITY_TYPE;

SITECLOSEACTIVITY_REC STUDYCLOSEACTIVITY_REC_TYPE := STUDYCLOSEACTIVITY_REC_TYPE();
/*END*/

/*START*/
TYPE STUDYCLOSUREMAP_TYPE
IS
RECORD
(
STUDYCLOSEID TBL_STUDYCLOSUREMAP.STUDYCLOSEID%TYPE ,
USERID TBL_STUDYCLOSUREMAP.USERID%TYPE ,
STUDYID TBL_STUDYCLOSUREMAP.STUDYID%TYPE ,
SITEID TBL_STUDYCLOSUREMAP.SITEID%TYPE
);

TYPE STUDYCLOSURE_REC_TYPE
IS
TABLE OF STUDYCLOSUREMAP_TYPE;

STUDYCLOSURE_REC STUDYCLOSURE_REC_TYPE := STUDYCLOSURE_REC_TYPE();
/*END*/

BEGIN


  /*GET STUDY SITE CLOSE ACTIVITY LIST*/
  SELECT
    tblA.ACTIVITYID, tblA.ACTIVITYNAME, tblA.ACTIVITYDESC, tblA.ISSPONSORACTIVITY, tblA.ISMANDATORY
  BULK COLLECT INTO SITECLOSEACTIVITY_REC
  FROM TBL_STUDYCLOSEACTIVITY tblA
  WHERE tblA.ISSPONSORACTIVITY = 'N';

  /*GET STUDYCLOSURE LIST HAVING STATUS INITIATED*/
  SELECT
    STUDYCLOSEID, USERID, STUDYID, SITEID
  BULK COLLECT INTO STUDYCLOSURE_REC
  FROM TBL_STUDYCLOSUREMAP tblSC
  WHERE UPPER(tblSC.OVERALLSTATUS) = 'INITIATED' AND ISSTUDYCLOSE = 'N' AND ISTASKSKIPPED = 'N' AND MODIFIEDDT IS NULL;


  /*STUDYCLOSURE LIST FOR LOOP*/
  FOR I IN 1..STUDYCLOSURE_REC.COUNT LOOP


    /*STUDY SITE CLOSE ACTIVITY LIST FOR LOOP*/
    FOR K IN 1..SITECLOSEACTIVITY_REC.COUNT LOOP
      /*INSERT INTO STUDY CLOSE ACTIVITY MAP FOR SITE*/
      INSERT
      INTO TBL_STUDYCLOSEACTIVITYMAP
        (
        STUDYCLOSEACTIVITYID, STUDYID, USERID, ACTIVITYID, SITEID, ISCOMPLETED, CREATEDDT, CREATEDBY
        )
        VALUES
        (
        SEQ_STUDYCLOSEACTIVITYMAP.NEXTVAL,
        STUDYCLOSURE_REC(I).STUDYID,
        STUDYCLOSURE_REC(I).USERID,
        SITECLOSEACTIVITY_REC(K).ACTIVITYID,
        STUDYCLOSURE_REC(I).SITEID,
        'N',
        SYSDATE,
        STUDYCLOSURE_REC(I).USERID
        );
    END LOOP;

    UPDATE TBL_STUDYCLOSUREMAP SET MODIFIEDBY='Scheduler', MODIFIEDDT=SYSDATE WHERE STUDYCLOSEID = STUDYCLOSURE_REC(I).STUDYCLOSEID;
  END LOOP;

  COMMIT;
  V_NEW_CNT := V_CNT_SEQ;

EXCEPTION
  /*when no data found then log exception*/
WHEN NO_DATA_FOUND THEN
  V_MSG := 'NO DATA FOUND';
  DBMS_OUTPUT.PUT_LINE(V_MSG);
  ROLLBACK;
  RETURN;
  /*if Primary key violation then log exception*/
WHEN DUP_VAL_ON_INDEX THEN
  V_MSG := SQLERRM;
  DBMS_OUTPUT.PUT_LINE(V_MSG);
  ROLLBACK;
  RETURN;
  /*if other exception then log exception*/
WHEN OTHERS THEN
  V_MSG := SQLERRM;
  DBMS_OUTPUT.PUT_LINE(V_MSG);
  ROLLBACK;
  RETURN;
END PROC_SITE_CLOSURE_ACTIVITY;


---Procedure for immediate study close

 PROCEDURE  "PROC_IMMEDIATE_STUDY_CLOSE" (
  p_sponsorid         IN NUMBER,
    p_studyid           IN NUMBER,
  p_closedate      IN DATE,
  v_status OUT VARCHAR2
 )
  /*********************************************************************
  /**
  /** Procedure:   PROC_IMMEDIATE_STUDY_CLOSE
  /** Description: IMMEDIATE STUDY CLOSE
  /** Author:      Cognizant
  /** Out:
  /** In:
  /*********************************************************************/
AS

v_msg  VARCHAR2(500);
v_actsite_cnt  NUMBER(4,0);
v_actsitedt_cnt  NUMBER(4,0);
v_closestudydt_cnt  NUMBER(4,0);
v_transid  varchar(200 CHAR);

BEGIN
  v_closestudydt_cnt := 0;
  --Check all study sites are closed are not, if not throw exception
  SELECT COUNT(1) INTO v_actsite_cnt FROM TBL_SITE site WHERE site.STUDYID = p_studyid AND site.ISACTIVE = 'Y';
  --Check study close date is greater than last site close date
  SELECT COUNT(1) INTO v_actsitedt_cnt FROM TBL_SITE site WHERE site.STUDYID = p_studyid AND site.CLOSUREDT > p_closedate;
  --Get transcelerate id of the sponsor user id
  select TRANSCELERATEUSERID into v_transid from TBL_USERPROFILES where userid = p_sponsorid;
  
  IF v_actsite_cnt > 0 THEN v_status := 'SIPSC_0029'; END IF;
  IF v_actsitedt_cnt > 0 THEN v_status := 'SIPSC_0030'; END IF;
  IF v_closestudydt_cnt > 0 THEN v_status := 'SIPSC_0031'; END IF;
  IF v_actsite_cnt > 0 AND v_actsitedt_cnt > 0 THEN v_status := 'SIPSC_0032'; END IF;
  IF v_actsite_cnt > 0 AND v_closestudydt_cnt > 0 THEN v_status := 'SIPSC_0033'; END IF;
  IF v_actsitedt_cnt > 0 AND v_closestudydt_cnt > 0 THEN v_status := 'SIPSC_0034'; END IF;
  IF v_actsite_cnt > 0 AND v_actsitedt_cnt > 0 AND v_closestudydt_cnt > 0 THEN v_status := 'SIPSC_0035'; END IF;

  IF v_actsite_cnt = 0 AND v_actsitedt_cnt = 0 AND v_closestudydt_cnt = 0 AND p_closedate <= sysdate THEN
    --Mark close and make study to in-active
    UPDATE TBL_STUDY sty SET sty.ISACTIVE = 'N', sty.ACTUALSTUDYCOMPFINALDT = p_closedate, sty.REASONSTUDYSTOPPED = 'STUDY CLOSE',sty.SIP_STUDYCLOSUREDATE = SYSDATE , sty.MODIFIEDDT= sysdate, sty.MODIFIEDBY = v_transid where sty.STUDYID = p_studyid;
    UPDATE tbl_task task
    SET
        ISDELETED='Y',
        COMPLETIONDATE=SYSDATE,
        STATUSCODE='Completed',
        modifieddt = SYSDATE,
        modifiedby = v_transid
WHERE
        task.studyid = p_studyid
    AND
        task.categorycode IN (
            'facility_association_request','associate_facility_request','pre_study_invitation','study_site_participation', 'associate_facility_PiList'
        );
  v_status := 'SUCCESS';
  END IF;


EXCEPTION
  /*when no data found then log exception*/
WHEN NO_DATA_FOUND THEN
  v_status := 'FAIL';
  v_msg := 'NO DATA FOUND';
  DBMS_OUTPUT.PUT_LINE(v_msg);
  ROLLBACK;
  RETURN;
  /*if Primary key violation then log exception*/
WHEN DUP_VAL_ON_INDEX THEN
  v_status := 'FAIL';
  v_msg := SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_msg);
  ROLLBACK;
  RETURN;
  /*if other exception then log exception*/
WHEN OTHERS THEN
  v_status := 'FAIL';
  v_msg := SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_msg);
  ROLLBACK;
  RETURN;
END PROC_IMMEDIATE_STUDY_CLOSE;


---Procedure for immediate study site close

PROCEDURE  "PROC_SITE_CLOSE" (
  p_sponsorid         IN NUMBER,
    p_studyid           IN NUMBER,
  p_siteid             IN NUM_ARRAY,
  p_closedate      IN DATE,
  v_status OUT VARCHAR2
 )
  /*********************************************************************
  /**
  /** Procedure:   PROC_SITE_CLOSE
  /** Description: STUDY SITE CLOSE
  /** Author:      Cognizant
  /** Out:
  /** In:
  /*********************************************************************/
AS

v_msg  VARCHAR2(500);
v_closestudydt_cnt  NUMBER(4,0);
v_spontransid  varchar2 (200);

BEGIN

  SELECT TRANSCELERATEUSERID into v_spontransid FROM TBL_USERPROFILES WHERE USERID = p_sponsorid ;
 
    IF p_closedate <= sysdate THEN

for i in 1..p_siteid.count LOOP

    UPDATE TBL_SITE sit SET sit.ISACTIVE = 'N', sit.CLOSUREDT = p_closedate ,sit.SIPREADONLYDATE = SYSDATE, sit.MODIFIEDDT = sysdate, sit.MODIFIEDBY =  v_spontransid  where sit.STUDYID = p_studyid AND sit.SITEID = p_siteid(i) ;

    v_status := 'SUCCESS';
    UPDATE TBL_TASK task SET ISDELETED='Y',task.STATUSCODE = 'Completed',MODIFIEDDT = sysdate, MODIFIEDBY = v_spontransid, COMPLETIONDATE = sysdate where task.siteid = p_siteid(i) and task.categorycode not in ('generate_fda_form_1572');
    DELETE FROM TBL_FUTURESTUDYSITESDTLS fss WHERE fss.SITEID = p_siteid(i);
  COMMIT;

end loop;
  END IF;

EXCEPTION
  /*when no data found then log exception*/
WHEN NO_DATA_FOUND THEN
  v_status := 'FAIL';
  v_msg := 'NO DATA FOUND';
  DBMS_OUTPUT.PUT_LINE(v_msg);
  ROLLBACK;
  RETURN;
  /*if Primary key violation then log exception*/
WHEN DUP_VAL_ON_INDEX THEN
  v_status := 'FAIL';
  v_msg := SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_msg);
  ROLLBACK;
  RETURN;
  /*if other exception then log exception*/
WHEN OTHERS THEN
  v_status := 'FAIL';
  v_msg := SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_msg);
  ROLLBACK;
  RETURN;
END PROC_SITE_CLOSE;


--Actual study site close
PROCEDURE  "PROC_STUDYSITE_ACTUALCLOSE"(v_status OUT VARCHAR2)
  /*********************************************************************
  /**
  /** Procedure:   PROC_STUDYSITE_ACTUALCLOSE
  /** Description: CLOSE ACTUAL STUDY SITE IN PLATFORM
  /** Author:      Cognizant
  /** Out:
  /** In:
  /*********************************************************************/
AS

V_MSG  VARCHAR2(500);
V_TEMPLATECODE  VARCHAR2(500);
V_STUDYORSITENAME  VARCHAR2(9999);
V_TITLEJSON VARCHAR2(9999);
V_MSGJSON VARCHAR2(9999);
V_SPONSORNAME VARCHAR2(9999);

/*START*/
TYPE STUDYCLOSEMAP_TYPE IS RECORD
(
STUDYCLOSEID TBL_STUDYCLOSUREMAP.STUDYCLOSEID%TYPE,
CLOSEREQUESTERID TBL_STUDYCLOSUREMAP.CLOSEREQUESTERID%TYPE,
ISSTUDYCLOSE TBL_STUDYCLOSUREMAP.ISSTUDYCLOSE%TYPE,
STUDYID TBL_STUDYCLOSUREMAP.STUDYID%TYPE,
SITEID TBL_STUDYCLOSUREMAP.SITEID%TYPE,
ACTUALCLOSEDDATE TBL_STUDYCLOSUREMAP.ACTUALCLOSEDDATE%TYPE
);

TYPE STUDYCLOSE_REC_TYPE IS TABLE OF STUDYCLOSEMAP_TYPE;
STUDYCLOSE_REC STUDYCLOSE_REC_TYPE := STUDYCLOSE_REC_TYPE();
/*END*/

/*START*/
TYPE USERDETAILS_TYPE IS RECORD
(
USERID TBL_USERPROFILES.USERID%TYPE,
FIRSTNAME TBL_USERPROFILES.FIRSTNAME%TYPE,
LASTNAME TBL_USERPROFILES.LASTNAME%TYPE,
TRANSCELERATEUSERID TBL_USERPROFILES.TRANSCELERATEUSERID%TYPE
);

TYPE USERDETAILS_REC_TYPE IS TABLE OF USERDETAILS_TYPE;
USERDETAILS_REC USERDETAILS_REC_TYPE := USERDETAILS_REC_TYPE();
/*END*/

BEGIN
  /*Fetch all the records from table TBL_STUDYCLOSUREMAP for which OVERALLSTATUS is In-Progress and ISACTUALCLOSEDREQRECEIVED is Y till current time*/
  SELECT
    smap.STUDYCLOSEID,
    smap.CLOSEREQUESTERID,
    smap.ISSTUDYCLOSE,
    smap.STUDYID,
    smap.SITEID,
    smap.ACTUALCLOSEDDATE
  BULK COLLECT INTO STUDYCLOSE_REC
  FROM TBL_STUDYCLOSUREMAP smap
  WHERE smap.ISACTUALCLOSEDREQRECEIVED = 'Y'
  AND UPPER(smap.OVERALLSTATUS)      = UPPER('In-Progress')
  AND smap.ACTUALCLOSEDDATE         <= SYSTIMESTAMP;

  /*STUDYCLOSE_REC LIST FOR LOOP*/
  FOR I IN 1..STUDYCLOSE_REC.COUNT LOOP
    --STUDYCLOSURE_REC(I).STUDYID
    IF STUDYCLOSE_REC(I).ISSTUDYCLOSE = 'Y' THEN
      --Process study close records
      --De-associate users relation with input studyId in TBL_USERROLEMAP
      UPDATE TBL_USERROLEMAP umap
      SET umap.EFFECTIVEENDDATE = STUDYCLOSE_REC(I).ACTUALCLOSEDDATE,
        umap.ROLECHANGEREASON   = 'STUDY CLOSE',
        umap.MODIFIEDDT         = sysdate,
        umap.MODIFIEDBY         = STUDYCLOSE_REC(I).CLOSEREQUESTERID
      WHERE umap.STUDYID        = STUDYCLOSE_REC(I).STUDYID;
      --Mark close and make study to in-active in TBL_STUDY
      UPDATE TBL_STUDY sty
      SET sty.ISACTIVE             = 'N',
        sty.ACTUALSTUDYCOMPFINALDT = STUDYCLOSE_REC(I).ACTUALCLOSEDDATE,
        sty.REASONSTUDYSTOPPED     = 'STUDY CLOSE',
        sty.MODIFIEDDT             = sysdate,
        sty.MODIFIEDBY             = STUDYCLOSE_REC(I).CLOSEREQUESTERID
      WHERE sty.STUDYID            = STUDYCLOSE_REC(I).STUDYID;

      SELECT STUDYNAME INTO V_STUDYORSITENAME FROM TBL_STUDY WHERE STUDYID = STUDYCLOSE_REC(I).STUDYID;
      SELECT org.ORGNAME INTO V_SPONSORNAME
      FROM TBL_STUDY sty,
        TBL_PROGRAM prg,
        TBL_ORGANIZATION org
      WHERE sty.PROGID = prg.PROGID
      AND prg.ORGID    = org.ORGID
      AND sty.STUDYID  = STUDYCLOSE_REC(I).STUDYID;

      V_TEMPLATECODE := 'T.SC.8';
      V_TITLEJSON := '{#studyName#:' || V_STUDYORSITENAME || '}';
      V_MSGJSON := '{#studyName#:' || V_STUDYORSITENAME || ',#sponsorName#:' || V_SPONSORNAME || '}';
    ELSE
      --Process study site records
      --De-associate users relation with input studyId in TBL_USERROLEMAP
      UPDATE TBL_USERROLEMAP umap
      SET umap.EFFECTIVEENDDATE = STUDYCLOSE_REC(I).ACTUALCLOSEDDATE,
        umap.ROLECHANGEREASON   = 'STUDY SITE CLOSE',
        umap.MODIFIEDDT         = sysdate,
        umap.MODIFIEDBY         = STUDYCLOSE_REC(I).CLOSEREQUESTERID
      WHERE umap.STUDYID        = STUDYCLOSE_REC(I).STUDYID
      AND umap.SITEID           = STUDYCLOSE_REC(I).SITEID;
      --Mark close and make study site to in-active in TBL_SITE
      UPDATE TBL_SITE sit
      SET sit.ISACTIVE  = 'N',
        sit.CLOSUREDT   = STUDYCLOSE_REC(I).ACTUALCLOSEDDATE,
        sit.MODIFIEDDT  = sysdate,
        sit.MODIFIEDBY  = STUDYCLOSE_REC(I).CLOSEREQUESTERID
      WHERE sit.STUDYID = STUDYCLOSE_REC(I).STUDYID
      AND sit.SITEID    = STUDYCLOSE_REC(I).SITEID;

      SELECT SITENAME INTO V_STUDYORSITENAME FROM TBL_SITE WHERE SITEID = STUDYCLOSE_REC(I).SITEID;
      SELECT org.ORGNAME INTO V_SPONSORNAME
      FROM TBL_STUDY sty,
        TBL_PROGRAM prg,
        TBL_ORGANIZATION org
      WHERE sty.PROGID = prg.PROGID
      AND prg.ORGID    = org.ORGID
      AND sty.STUDYID  = STUDYCLOSE_REC(I).STUDYID;

      V_TEMPLATECODE := 'T.SC.9';
      V_TITLEJSON := '{#studySiteName#:' || V_STUDYORSITENAME || '}';
      V_MSGJSON := '{#studySiteName#:' || V_STUDYORSITENAME || ',#sponsorName#:' || V_SPONSORNAME || '}';
    END IF;
    --Mark over all status to close
    UPDATE TBL_STUDYCLOSUREMAP smap
    SET smap.OVERALLSTATUS  = 'Closed',
      smap.MODIFIEDBY       = 'Scheduler',
      smap.MODIFIEDDT       = SYSDATE
    WHERE smap.STUDYCLOSEID = STUDYCLOSE_REC(I).STUDYCLOSEID;

    SELECT DISTINCT
      USR.FIRSTNAME,
      USR.LASTNAME,
      USR.USERID,
      USR.TRANSCELERATEUSERID
    BULK COLLECT INTO USERDETAILS_REC
    FROM TBL_USERPROFILES USR
    LEFT JOIN TBL_USERROLEMAP USERROLE
    ON USR.USERID = USERROLE.USERID
    LEFT JOIN TBL_STUDY STUDY
    ON USERROLE.STUDYID = STUDY.STUDYID
    WHERE (USR.ISACTIVE            = 'Y'
    OR USR.ISACTIVE               IS NULL)
    AND (USERROLE.EFFECTIVEENDDATE >= STUDYCLOSE_REC(I).ACTUALCLOSEDDATE
    OR USERROLE.EFFECTIVEENDDATE  IS NULL)
    AND STUDY.STUDYID              = STUDYCLOSE_REC(I).STUDYCLOSEID;

    FOR J IN 1..USERDETAILS_REC.COUNT LOOP
      INSERT INTO TBL_ALERTSANDNOTIFICATIONS (
        ALERTNOTIFICATIONID, ALERTNOTIFICATIONTYPEID, ISFORPLATFORM,
        ISFORTASK, ISFORSTUDY, ISALERT, USERID, TITLEJSON, MSGJSON,
        STUDYID, SITEID, MAILSENT, SENDON, ISACTIVE, ACKNOWLEDGED,
        CREATEDBY, CREATEDDT, TEMPLATECODE
      )
      VALUES
      (
        SEQ_ALERTSANDNOTIFICATIONS.NEXTVAL,
        'TC.SC', 'N', 'N', 'N', 'N',
        USERDETAILS_REC(J).USERID,
        V_TITLEJSON,
        V_MSGJSON,
        STUDYCLOSE_REC(I).STUDYID,
        STUDYCLOSE_REC(I).SITEID,
        'N', sysdate, 'Y', 'N',
        'Scheduler', sysdate,
        V_TEMPLATECODE
      );
    END LOOP;

    v_status := 'SUCCESS';
  END LOOP;
EXCEPTION
  /*when no data found then log exception*/
WHEN NO_DATA_FOUND THEN
  V_MSG := 'NO DATA FOUND';
  DBMS_OUTPUT.PUT_LINE(V_MSG);
  ROLLBACK;
  RETURN;
  /*if Primary key violation then log exception*/
WHEN DUP_VAL_ON_INDEX THEN
  V_MSG := SQLERRM;
  DBMS_OUTPUT.PUT_LINE(V_MSG);
  ROLLBACK;
  RETURN;
  /*if other exception then log exception*/
WHEN OTHERS THEN
  V_MSG := SQLERRM;
  DBMS_OUTPUT.PUT_LINE(V_MSG);
  ROLLBACK;
  RETURN;
END PROC_STUDYSITE_ACTUALCLOSE;

END pkg_study_site_closure;
/