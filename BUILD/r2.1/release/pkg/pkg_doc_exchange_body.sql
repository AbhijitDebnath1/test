CREATE OR REPLACE PACKAGE BODY PKG_DOC_EXCHANGE
AS
  PROCEDURE CHECK_PENDING_USER_COUNT(
      DOC_EXCHANGE_ID IN NUMBER,
      USER_CNT OUT NUMBER)
  AS
    R_USER_CNT NUMBER(38,0);
  BEGIN
    SELECT COUNT(*)
    INTO R_USER_CNT
    FROM ((
      -- site access status
      (SELECT DISTINCT DSRM.SITEID
      FROM TBL_DOCEXCHANGE DE,
        TBL_DOCEXCHANGEVERSION DEV,
        TBL_DOCSITEROLEMAP DSRM
      WHERE DE.DOCEXCHANGEID    = DEV.DOCEXCHANGEID
      AND DSRM.DOCEXCHANGEVERID = DEV.DOCEXCHANGEVERID
      AND DE.DOCEXCHANGEID      = DOC_EXCHANGE_ID
      )
    MINUS
      ( SELECT DISTINCT UDM.SITEID
      FROM TBL_DOCEXCHANGE DE,
        TBL_DOCEXCHANGEVERSION DEV,
        TBL_USERDOCMAP UDM
      WHERE DE.DOCEXCHANGEID   = DEV.DOCEXCHANGEID
      AND DEV.DOCEXCHANGEVERID = UDM.DOCEXCHANGEVERID
      AND UDM.SITEID          IS NOT NULL
      AND UDM.ISDOCVIEWED      = 'Y'
      AND UDM.DOCEXCHANGEVERID = DOC_EXCHANGE_ID
      ))
    UNION
      --direct assigne for all users
      (
      SELECT DISTINCT UDM.ASSIGNEDTO
      FROM TBL_DOCEXCHANGE DE,
        TBL_DOCEXCHANGEVERSION DEV,
        TBL_USERDOCMAP UDM
      WHERE DE.DOCEXCHANGEID   = DEV.DOCEXCHANGEID
      AND DEV.DOCEXCHANGEVERID = UDM.DOCEXCHANGEVERID
      AND UDM.SITEID          IS NULL
      AND UDM.ISDOCVIEWED      = 'N'
      AND UDM.DOCEXCHANGEVERID = DOC_EXCHANGE_ID
      ) );
    USER_CNT :=R_USER_CNT;
  END CHECK_PENDING_USER_COUNT;
  PROCEDURE FN_GET_ADMIN_DOCEXCHNG(
      I_LOGGEDINUSERID  IN NUMBER,
      I_CREATEDFROMDATE IN DATE,
      I_CREATEDTODATE   IN DATE,
      I_METADATAMODDT   IN DATE,
      I_METADATAMODTODT IN DATE,
      I_PIIDS           IN NUM_ARRAY,
      I_ROLEIDS         IN NUM_ARRAY,
      I_SITEIDS         IN NUM_ARRAY,
      I_STUDYIDS        IN NUM_ARRAY,
      I_USERIDS         IN NUM_ARRAY,
      I_COMPOUNDID      IN NUMBER,
      I_PROGRAMID       IN NUMBER,
      I_PACKAGEID       IN NUMBER,
      I_COUNTRYID       IN NUMBER,
      I_DOCUMENTTYPE    IN NUMBER,
      I_LANGUAGEID      IN NUMBER,
      I_METADATAMODBY   IN NUMBER,
      I_UPLOADEDBY      IN NUMBER,
      I_FILEFORMAT      IN VARCHAR_ARRAY,
      I_DOCSTATUS       IN VARCHAR2,
      I_DOCUPLOADLEVEL  IN VARCHAR2,
      I_ISVIEWEDBYME    IN VARCHAR2,
      I_ORGFILENAME     IN VARCHAR2,
      I_REFMODELSUBSEC  IN VARCHAR2,
      I_REFMODELZONE    IN VARCHAR2,
      I_TITLE           IN VARCHAR2,
      I_UPLOADEDBYROLE  IN VARCHAR2,
      I_PERSNLIDS       IN NUM_ARRAY,
      I_PERSNLNMS       IN VARCHAR2,
      I_OFFSET          IN NUMBER,
      I_LIMIT           IN NUMBER,
      I_ORDRBY          IN VARCHAR2,
      I_SORTBY          IN VARCHAR2,
      O_COUNT OUT NUMBER,
      REF_CUS_DOC_RESULTS OUT SYS_REFCURSOR)
  AS
    I_DOCSTATUSX          VARCHAR2(50 BYTE);
    I_DOCSTATUSY          VARCHAR2(50 BYTE);
    I_ROLEID_SQL          VARCHAR2(9999 BYTE);
    I_ROLEID              NUMBER;
    PAG_END_ROW           NUMBER;
    I_UPLOADEDBYROLEX     VARCHAR2(20 BYTE);
    I_UPLOADEDBYME        NUMBER;
    PRE_STC_SQL_PART      VARCHAR2(9999 BYTE);
    STC_SQL_PART          VARCHAR2(9999 BYTE);
    DYNMC_SQL_CLAUSE_PART VARCHAR2(9999 BYTE);
    STC_SQL_CLAUSE_PART   VARCHAR2(9999 BYTE);
    DYNMC_SORTING_PART    VARCHAR2(9999 BYTE);
    STR_DOCSTUDYMAP       VARCHAR2(9999 BYTE);
    STR_DOCSITEROLEMAP    VARCHAR2(9999 BYTE);
    STR_TBL_USERDOCMAP    VARCHAR2(9999 BYTE);
    STR_STUDY             VARCHAR2(9999 BYTE);
    STR_SITE              VARCHAR2(9999 BYTE);
    PI_IDS_STR            VARCHAR2(9999 BYTE);
    ROLE_IDS_STR          VARCHAR2(9999 BYTE);
    SITE_IDS_STR          VARCHAR2(9999 BYTE);
    STUDY_IDS_STR         VARCHAR2(9999 BYTE);
    USER_IDS_STR          VARCHAR2(9999 BYTE);
    PRSNL_IDS_STR         VARCHAR2(9999 BYTE);
    FILEFORMAT_STR        VARCHAR2(9999 BYTE);
    V_COUNT_QUERY         VARCHAR2(9999 BYTE);
    FINAL_QUERY           VARCHAR2(9999 BYTE);
    STR_CREATEDFROMDATE   VARCHAR2(9999 BYTE);
    STR_CREATEDTODATE     VARCHAR2(9999 BYTE);
    STR_METADATAMODDT     VARCHAR2(9999 BYTE);
    STR_METADATAMODTODT   VARCHAR2(9999 BYTE);
    TEMP_SORTBY           VARCHAR2(9999 BYTE);
  BEGIN
    I_DOCSTATUSX          := NULL;
    I_DOCSTATUSY          := I_DOCSTATUS;
    STR_DOCSTUDYMAP       := NULL;
    STR_DOCSITEROLEMAP    := NULL;
    STR_TBL_USERDOCMAP    := NULL;
    STR_STUDY             := NULL;
    STR_SITE              := NULL;
    PAG_END_ROW           := I_OFFSET + I_LIMIT - 1;
    IF I_UPLOADEDBYROLE    = 'sponsor' THEN
      I_UPLOADEDBYROLEX   := 'Y';
    ELSIF I_UPLOADEDBYROLE = 'user' THEN
      I_UPLOADEDBYROLEX   := 'N';
    ELSIF I_UPLOADEDBYROLE = 'me' THEN
      I_UPLOADEDBYME      := I_LOGGEDINUSERID;
    ELSE
      I_UPLOADEDBYROLEX := NULL;
      I_UPLOADEDBYME    := NULL;
    END IF;
    IF I_SORTBY    = 'DOCTITLE' THEN
      TEMP_SORTBY := 'UPPER(TEMPDATA.DOCTITLE)';
    ELSIF I_SORTBY = 'DOCTYPE' THEN
      TEMP_SORTBY := 'UPPER(TEMPDATA.DOCTYPE)';
    ELSIF I_SORTBY = 'DOCSTATUS' THEN
      TEMP_SORTBY := 'UPPER(TEMPDATA.DOCSTATUS)';
    ELSIF I_SORTBY = 'VIEWEDSTATUS' THEN
      TEMP_SORTBY := 'UPPER(TEMPDATA.VIEWEDSTATUS)';
    ELSIF I_SORTBY = 'SHAREDWITHROLE' THEN
      TEMP_SORTBY := 'UPPER(TEMPDATA.SHAREDWITHROLE)';
    ELSIF I_SORTBY = 'PERSONNELNAMES' THEN
      TEMP_SORTBY := 'UPPER(pkg_encrypt.fn_decrypt(TEMPDATA.PERSONNELNAMES))';
    ELSE
      TEMP_SORTBY := 'TEMPDATA.' || I_SORTBY;
    END IF;
    IF I_METADATAMODTODT IS NOT NULL THEN
      I_DOCSTATUSX       := 'metadata updated';
    END IF;
    IF I_DOCSTATUSY IS NULL THEN
      I_DOCSTATUSY  := I_DOCSTATUSX;
    END IF;
    I_ROLEID_SQL := 'SELECT count(URM2.ROLEID)    
FROM TBL_USERROLEMAP URM2    
WHERE TO_DATE(TO_CHAR(URM2.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') < = TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')    
AND (TO_DATE(TO_CHAR(URM2.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')   >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')    
OR URM2.EFFECTIVEENDDATE     IS NULL)  
AND URM2.STUDYID             IS NULL  
AND URM2.SITEID              IS NULL   
AND URM2.USERID               = ' || I_LOGGEDINUSERID || '    
AND URM2.ROLEID               =      43';
    EXECUTE IMMEDIATE I_ROLEID_SQL INTO I_ROLEID;
    PRE_STC_SQL_PART := 'SELECT TEMPDATA.*       
FROM        (';
    STC_SQL_PART     :=
    'SELECT DISTINCT DOCEXCHG.DOCEXCHANGEID,        
DOCEXCHGVER.DOCEXCHANGEVERID,        
DOCEXCHG.DOCTITLE,        
DOCTYPEMASTER.DOCTYPE,
DOCEXCHGVER.ORGFILENAME,
DOCEXCHGVER.UPLOADEDON,
DOCEXCHGVER.UPLOADEDBY,         
--Status        
DOCEXCHGVER.DOCSTATUS,        
--Viewed Status        
(        
CASE          
WHEN DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''Y''          
THEN ''N.A.''          
ELSE ''gfs''        
END ) VIEWEDSTATUS,        
--shared with roles        
(        
CASE          
WHEN DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''Y''          
THEN ''Site''          
ELSE ''Sponsor''        
END ) SHAREDWITHROLE,        
DOCEXCHG.DOCDESC,        
DOCEXCHGVER.ISUPLOADEDBYSPONSOR, 
pkg_encrypt.fn_decrypt(DOCEXCHGVER.PERSONNELNAMES) || 
(SELECT listagg(pkg_encrypt.fn_decrypt(UP.FIRSTNAME)          
|| '' '' || pkg_encrypt.fn_decrypt(UP.LASTNAME), '','') within GROUP (        
ORDER BY pkg_encrypt.fn_decrypt(UP.FIRSTNAME)) AS list        
FROM TBL_USERPROFILES UP,          
TBL_USERDOCMAP UDM        
WHERE DOCEXCHGVER.DOCEXCHANGEVERID = UDM.DOCEXCHANGEVERID        
AND UDM.ASSIGNEDTO                 = UP.USERID      
AND UDM.ISPERSONNEL = 1        
) PERSONNELNAMES       
FROM TBL_DOCEXCHANGE DOCEXCHG        
JOIN TBL_DOCEXCHANGEVERSION DOCEXCHGVER        
ON DOCEXCHG.DOCEXCHANGEID = DOCEXCHGVER.DOCEXCHANGEID        
JOIN TBL_DOCTYPEMASTER DOCTYPEMASTER        
ON DOCEXCHG.DOCTYPEID = DOCTYPEMASTER.DOCTYPEID '
    ;
    DYNMC_SQL_CLAUSE_PART   := ' WHERE DOCEXCHGVER.DELETEDON      IS NULL ';
    IF I_CREATEDFROMDATE    IS NOT NULL THEN
      STR_CREATEDFROMDATE   := TO_CHAR(I_CREATEDFROMDATE, 'yyyy-MM-dd hh24:mi:ss');
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND TO_DATE(TO_CHAR(DOCEXCHGVER.UPLOADEDON, ''yyyy-MM-dd hh24:mi:ss''), ''yyyy-MM-dd hh24:mi:ss'') >= TO_DATE(''' || STR_CREATEDFROMDATE || ''', ''yyyy-MM-dd hh24:mi:ss'')';
    END IF;
    IF I_CREATEDTODATE      IS NOT NULL THEN
      STR_CREATEDTODATE     := TO_CHAR(I_CREATEDTODATE, 'yyyy-MM-dd hh24:mi:ss');
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND TO_DATE(TO_CHAR(DOCEXCHGVER.UPLOADEDON, ''yyyy-MM-dd hh24:mi:ss''), ''yyyy-MM-dd hh24:mi:ss'') <= TO_DATE(''' || STR_CREATEDTODATE || ''', ''yyyy-MM-dd hh24:mi:ss'')';
    END IF;
    IF I_METADATAMODDT      IS NOT NULL THEN
      STR_METADATAMODDT     := TO_CHAR(I_METADATAMODDT, 'yyyy-MM-dd hh24:mi:ss');
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND TO_DATE(TO_CHAR(DOCEXCHG.METADATAUPDATEDON, ''yyyy-MM-dd hh24:mi:ss''), ''yyyy-MM-dd hh24:mi:ss'') >= TO_DATE(''' || STR_METADATAMODDT || ''', ''yyyy-MM-dd hh24:mi:ss'')';
    END IF;
    IF I_METADATAMODTODT    IS NOT NULL THEN
      STR_METADATAMODTODT   := TO_CHAR(I_METADATAMODTODT, 'yyyy-MM-dd hh24:mi:ss');
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND TO_DATE(TO_CHAR(DOCEXCHG.METADATAUPDATEDON, ''yyyy-MM-dd hh24:mi:ss''), ''yyyy-MM-dd hh24:mi:ss'') <= TO_DATE(''' || STR_METADATAMODTODT || ''', ''yyyy-MM-dd hh24:mi:ss'')';
    END IF;
    IF I_COUNTRYID          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.COUNTRYID  =' || I_COUNTRYID;
    END IF;
    IF I_DOCUMENTTYPE       IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.DOCTYPEID  =' || I_DOCUMENTTYPE;
    END IF;
    IF I_PACKAGEID          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.DOCPKGID  =' || I_PACKAGEID;
    END IF;
    IF I_LANGUAGEID         IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.LANGUAGEID  =' || I_LANGUAGEID;
    END IF;
    IF I_METADATAMODBY      IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.METADATAUPDATEDBY  =' || I_METADATAMODBY;
    END IF;
    IF I_UPLOADEDBY         IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.UPLOADEDBY  =' || I_UPLOADEDBY;
    END IF;
    IF I_TITLE              IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(DOCEXCHG.DOCTITLE) LIKE LOWER(''%' || I_TITLE || '%'')';
    END IF;
    IF I_ORGFILENAME        IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(DOCEXCHGVER.ORGFILENAME) LIKE LOWER(''%' || I_ORGFILENAME || '%'')';
    END IF;
    IF I_PERSNLNMS          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(pkg_encrypt.fn_decrypt(DOCEXCHGVER.PERSONNELNAMES)) LIKE LOWER(''%' || I_PERSNLNMS || '%'')';
    END IF;
    IF I_REFMODELSUBSEC     IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(DOCEXCHG.MODELSUBSEC) = LOWER(''' || I_REFMODELSUBSEC || ''')';
    END IF;
    IF I_REFMODELZONE       IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(DOCEXCHG.MODELZONE) = LOWER(''' || I_REFMODELZONE || ''')';
    END IF;
    IF I_UPLOADEDBYROLEX    IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''' || I_UPLOADEDBYROLEX || '''';
    END IF;
    IF I_UPLOADEDBYME       IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.UPLOADEDBY =' || I_UPLOADEDBYME;
    END IF;
    IF I_COMPOUNDID      IS NOT NULL THEN
      IF STR_DOCSTUDYMAP IS NULL THEN
        STR_DOCSTUDYMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART     := STC_SQL_PART || ' JOIN TBL_DOCSTUDYMAP DSM       
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID';
      END IF;
      IF STR_STUDY   IS NULL THEN
        STR_STUDY    := 'TABLE_JOIN_ADDED';
        STC_SQL_PART := STC_SQL_PART || ' JOIN TBL_STUDY ST        
ON DSM.STUDYID = ST.STUDYID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND ST.COMPOUNDID =' || I_COMPOUNDID;
    END IF;
    IF I_PROGRAMID       IS NOT NULL THEN
      IF STR_DOCSTUDYMAP IS NULL THEN
        STR_DOCSTUDYMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART     := STC_SQL_PART || ' JOIN TBL_DOCSTUDYMAP DSM       
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID';
      END IF;
      IF STR_STUDY   IS NULL THEN
        STR_STUDY    := 'TABLE_JOIN_ADDED';
        STC_SQL_PART := STC_SQL_PART || ' LEFT JOIN TBL_STUDY ST        
ON DSM.STUDYID = ST.STUDYID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND ST.PROGID =' || I_PROGRAMID;
    END IF;
    IF I_STUDYIDS IS NOT NULL AND I_STUDYIDS.count >0 THEN
      FOR i IN 1..I_STUDYIDS.count
      LOOP
        EXIT
      WHEN I_STUDYIDS(i) = -1;
        IF i             = 1 THEN
          STUDY_IDS_STR := I_STUDYIDS(i);
        ELSE
          STUDY_IDS_STR := STUDY_IDS_STR || ',' || I_STUDYIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF STUDY_IDS_STR     IS NOT NULL THEN
      IF STR_DOCSTUDYMAP IS NULL THEN
        STR_DOCSTUDYMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART     := STC_SQL_PART || ' LEFT JOIN TBL_DOCSTUDYMAP DSM       
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DSM.STUDYID  IN(' || STUDY_IDS_STR || ')';
    END IF;
    IF I_SITEIDS IS NOT NULL AND I_SITEIDS.count >0 THEN
      FOR i IN 1..I_SITEIDS.count
      LOOP
        EXIT
      WHEN I_SITEIDS(i) = -1;
        IF i            = 1 THEN
          SITE_IDS_STR := I_SITEIDS(i);
        ELSE
          SITE_IDS_STR := SITE_IDS_STR || ',' || I_SITEIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF SITE_IDS_STR         IS NOT NULL THEN
      IF STR_DOCSITEROLEMAP IS NULL THEN
        STR_DOCSITEROLEMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART        := STC_SQL_PART || ' LEFT JOIN TBL_DOCSITEROLEMAP DSRM       
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSRM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DSRM.SITEID  IN(' || SITE_IDS_STR || ')';
    END IF;
    IF I_ROLEIDS IS NOT NULL AND I_ROLEIDS.count >0 THEN
      FOR i IN 1..I_ROLEIDS.count
      LOOP
        EXIT
      WHEN I_ROLEIDS(i) = -1;
        IF i            = 1 THEN
          ROLE_IDS_STR := I_ROLEIDS(i);
        ELSE
          ROLE_IDS_STR := ROLE_IDS_STR || ',' || I_ROLEIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF ROLE_IDS_STR         IS NOT NULL THEN
      IF STR_DOCSITEROLEMAP IS NULL THEN
        STR_DOCSITEROLEMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART        := STC_SQL_PART || ' LEFT JOIN TBL_DOCSITEROLEMAP DSRM       
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSRM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DSRM.ROLEID  IN(' || ROLE_IDS_STR || ')';
    END IF;
    IF I_PIIDS IS NOT NULL AND I_PIIDS.count >0 THEN
      FOR i IN 1..I_PIIDS.count
      LOOP
        EXIT
      WHEN I_PIIDS(i) = -1;
        IF i          = 1 THEN
          PI_IDS_STR := I_PIIDS(i);
        ELSE
          PI_IDS_STR := PI_IDS_STR || ',' || I_PIIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF PI_IDS_STR           IS NOT NULL THEN
      IF STR_DOCSITEROLEMAP IS NULL THEN
        STR_DOCSITEROLEMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART        := STC_SQL_PART || ' LEFT JOIN TBL_DOCSITEROLEMAP DSRM       
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSRM.DOCEXCHANGEVERID';
      END IF;
      IF STR_SITE    IS NULL THEN
        STR_SITE     := 'TABLE_JOIN_ADDED';
        STC_SQL_PART := STC_SQL_PART || ' LEFT JOIN TBL_SITE SIT       
ON DSRM.SITEID = SIT.SITEID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND SIT.PIID  IN(' || PI_IDS_STR || ')';
    END IF;
    IF I_USERIDS IS NOT NULL AND I_USERIDS.count >0 THEN
      FOR i IN 1..I_USERIDS.count
      LOOP
        EXIT
      WHEN I_USERIDS(i) = -1;
        IF i            = 1 THEN
          USER_IDS_STR := I_USERIDS(i);
        ELSE
          USER_IDS_STR := USER_IDS_STR || ',' || I_USERIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF USER_IDS_STR         IS NOT NULL THEN
      IF STR_TBL_USERDOCMAP IS NULL THEN
        STR_TBL_USERDOCMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART        := STC_SQL_PART || ' LEFT JOIN TBL_USERDOCMAP UDM
ON DOCEXCHGVER.DOCEXCHANGEVERID   = UDM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND (UDM.ASSIGNEDTO  IN(' || USER_IDS_STR || ') AND UDM.SITEID IS NULL)';
    END IF;
    IF I_PERSNLIDS IS NOT NULL AND I_PERSNLIDS.count >0 THEN
      FOR i IN 1..I_PERSNLIDS.count
      LOOP
        EXIT
      WHEN I_PERSNLIDS(i) = -1;
        IF i              = 1 THEN
          PRSNL_IDS_STR  := I_PERSNLIDS(i);
        ELSE
          PRSNL_IDS_STR := PRSNL_IDS_STR || ',' || I_PERSNLIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF PRSNL_IDS_STR        IS NOT NULL THEN
      IF STR_TBL_USERDOCMAP IS NULL THEN
        STR_TBL_USERDOCMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART        := STC_SQL_PART || ' LEFT JOIN TBL_USERDOCMAP UDM
ON DOCEXCHGVER.DOCEXCHANGEVERID   = UDM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND (UDM.ASSIGNEDTO  IN(' || PRSNL_IDS_STR || ') AND UDM.SITEID IS NULL AND UDM.ISPERSONNEL = 1)';
    END IF;
    IF I_FILEFORMAT IS NOT NULL AND I_FILEFORMAT.count >0 THEN
      FOR i IN 1..I_FILEFORMAT.count
      LOOP
        EXIT
      WHEN I_FILEFORMAT(i) = 'X_NO_DATA_SENT_X';
        IF i               = 1 THEN
          FILEFORMAT_STR  := 'UPPER(''' || I_FILEFORMAT(i) || ''')';
        ELSE
          FILEFORMAT_STR := FILEFORMAT_STR || ',UPPER(''' || I_FILEFORMAT(i) || ''')';
        END IF;
      END LOOP;
    END IF;
    IF FILEFORMAT_STR       IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND UPPER(DOCEXCHGVER.FILEFORMAT)  IN(' || FILEFORMAT_STR || ')';
    END IF;
    --IF I_ROLEID           = 0 THEN
      IF STR_DOCSTUDYMAP IS NULL THEN
        STR_DOCSTUDYMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART     := STC_SQL_PART || ' LEFT JOIN TBL_DOCSTUDYMAP DSM       
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DSM.STUDYID IN            
(SELECT DISTINCT ST.STUDYID            
FROM TBL_STUDY ST            
WHERE ST.PROGID IN              
(SELECT PG.PROGID              
FROM TBL_PROGRAM PG              
WHERE PG.ORGID =                
(SELECT UP.ORGID FROM TBL_USERPROFILES UP WHERE UP.USERID = ' || I_LOGGEDINUSERID || ')))';
    --END IF;
    STC_SQL_CLAUSE_PART   := ' ) TEMPDATA      
WHERE 1                         =1' ;
    IF I_DOCSTATUSY       IS NOT NULL THEN
      STC_SQL_CLAUSE_PART := STC_SQL_CLAUSE_PART || ' AND UPPER(TEMPDATA.DOCSTATUS)  = UPPER(''' || I_DOCSTATUSY || ''')';
    END IF;
    IF I_DOCSTATUSX       IS NOT NULL THEN
      STC_SQL_CLAUSE_PART := STC_SQL_CLAUSE_PART || ' AND UPPER(TEMPDATA.DOCSTATUS)  = UPPER(''' || I_DOCSTATUSX || ''')';
    END IF;
    IF I_ISVIEWEDBYME     IS NOT NULL THEN
      STC_SQL_CLAUSE_PART := STC_SQL_CLAUSE_PART || ' AND UPPER(TEMPDATA.VIEWEDSTATUS)  = UPPER(''' || I_ISVIEWEDBYME || ''')';
    END IF;
    IF I_SORTBY          IS NOT NULL THEN
      DYNMC_SORTING_PART := ' ORDER BY ' || TEMP_SORTBY || ' ' || I_ORDRBY;
    END IF;
    V_COUNT_QUERY := 'select count(1) from (' || STC_SQL_PART || DYNMC_SQL_CLAUSE_PART || STC_SQL_CLAUSE_PART || '';
    FINAL_QUERY   := 'SELECT ODATA.DOCEXCHANGEID,      
ODATA.DOCEXCHANGEVERID,      
ODATA.DOCTITLE,      
ODATA.DOCTYPE,   
ODATA.ORGFILENAME, 
ODATA.UPLOADEDON,
ODATA.UPLOADEDBY,      
ODATA.DOCSTATUS,      
COALESCE(pkg_doc_exchange.GET_USER_DOC_ACC_STATUS(ODATA.DOCEXCHANGEVERID,' || I_LOGGEDINUSERID || ',NULL,NULL,ODATA.VIEWEDSTATUS,ODATA.ISUPLOADEDBYSPONSOR), ''N'') VIEWEDSTATUS,      
ODATA.SHAREDWITHROLE,      
ODATA.DOCDESC,    
ODATA.PERSONNELNAMES FROM (SELECT ROWNUM RNUM , TEMP.* FROM ( ' || PRE_STC_SQL_PART || STC_SQL_PART || DYNMC_SQL_CLAUSE_PART || STC_SQL_CLAUSE_PART || DYNMC_SORTING_PART || ' )TEMP WHERE ROWNUM <= ' || TO_CHAR(PAG_END_ROW) ||' ) ODATA WHERE ODATA.RNUM >= '|| TO_CHAR(I_OFFSET) ;
    --dbms_output.put_line('Count Query:' || V_COUNT_QUERY);
    --dbms_output.put_line('Final Main Query:' || FINAL_QUERY);
    EXECUTE IMMEDIATE V_COUNT_QUERY INTO O_COUNT;
    OPEN REF_CUS_DOC_RESULTS FOR FINAL_QUERY;
  END FN_GET_ADMIN_DOCEXCHNG;
--Procedure GET_SITE_USER_STATUS
  FUNCTION GET_SITE_USER_STATUS(
      DOCEXCHANGEVERID    IN NUMBER,
      ASSIGNEDTO          IN NUMBER,
      OPSITEID            IN NUMBER,
      OPUSERID            IN NUMBER,
      DOCSTATUS           IN VARCHAR2,
      ISUPLOADEDBYSPONSOR IN VARCHAR2,
      I_USERID NUMBER)
    RETURN VARCHAR2
  AS
    O_STATUS    VARCHAR2(200 BYTE);
    I_ISVIEWED  NUMBER;
    V_SEL_QUERY VARCHAR2(9999 BYTE);
  BEGIN
    -- FOR Docs uploaded by sponsor user and accessing by site user
    IF ISUPLOADEDBYSPONSOR = 'Y' AND I_USERID = 1 THEN
      IF OPSITEID          = -1 AND OPUSERID <> -1 THEN
        V_SEL_QUERY       := 'SELECT COUNT(UDM.ISDOCVIEWED)    
FROM TBL_USERDOCMAP UDM    
WHERE UDM.DOCEXCHANGEVERID = ' || TO_CHAR(DOCEXCHANGEVERID) || ' AND UDM.SITEID            IS NULL    
AND UDM.ASSIGNEDTO         = ' || TO_CHAR(ASSIGNEDTO) || ' AND UDM.ISDOCVIEWED        = ''Y''';
      END IF;
      IF OPSITEID   <> -1 AND OPUSERID = -1 THEN
        V_SEL_QUERY := 'SELECT COUNT(UDM.ISDOCVIEWED)    
FROM TBL_USERDOCMAP UDM    
WHERE UDM.DOCEXCHANGEVERID = ' || TO_CHAR(DOCEXCHANGEVERID) || ' AND UDM.SITEID           = ' || TO_CHAR(OPSITEID) || ' AND UDM.ISDOCVIEWED      = ''Y''';
      END IF;
      IF V_SEL_QUERY IS NOT NULL THEN
        EXECUTE IMMEDIATE V_SEL_QUERY INTO I_ISVIEWED;
      END IF;
      IF V_SEL_QUERY IS NULL THEN
        V_SEL_QUERY  := 'DOCEXCHANGEVERID' || DOCEXCHANGEVERID || 'ASSIGNEDTO' || ASSIGNEDTO || 'OPSITEID' || OPSITEID || 'OPUSERID' || OPUSERID || 'DOCSTATUS' || DOCSTATUS || 'ISUPLOADEDBYSPONSOR' || ISUPLOADEDBYSPONSOR || 'I_USERID' || I_USERID;
      END IF;
    END IF;
    -- FOR Docs uploaded by Site user and accessing by Sponsor user
    IF ISUPLOADEDBYSPONSOR = 'N' AND I_USERID = 0 THEN
      V_SEL_QUERY         := 'SELECT COUNT(UDM.ISDOCVIEWED)            
FROM TBL_USERDOCMAP UDM,              
TBL_USERPROFILES UP            
WHERE UDM.DOCEXCHANGEVERID = ' || TO_CHAR(DOCEXCHANGEVERID) || '            
AND UDM.SITEID            IS NULL            
AND UP.ISSPONSOR           = ''Y''            
AND UDM.ASSIGNEDTO         = UP.USERID            
AND UDM.ISDOCVIEWED        = ''Y''            
AND UP.ORGID               =              
(SELECT ORGID FROM TBL_USERPROFILES UP2 WHERE UP2.USERID = ' || TO_CHAR(ASSIGNEDTO) || '              
)';
      EXECUTE IMMEDIATE V_SEL_QUERY INTO I_ISVIEWED;
    END IF;
    SELECT O_DOCSTATUS
    INTO O_STATUS
    FROM
      (SELECT (
        CASE
          WHEN (DOCSTATUS = 'Accepted'
          AND I_USERID    = 0)
          THEN DOCSTATUS
          WHEN (DOCSTATUS = 'Accepted'
          AND I_USERID    = 1)
          THEN 'Accessed'
          WHEN (DOCSTATUS = 'Rejected')
          THEN DOCSTATUS
          WHEN ((ISUPLOADEDBYSPONSOR = 'Y'
          AND I_USERID               = 0)
          OR (ISUPLOADEDBYSPONSOR    = 'N'
          AND I_USERID               = 1))
          THEN DOCSTATUS
            --Uploaded by Sponsor user and current user is Site user
          WHEN (ISUPLOADEDBYSPONSOR = 'Y'
          AND I_USERID              = 1)
          THEN
            CASE
              WHEN I_ISVIEWED >= 1
              THEN 'Accessed'
              ELSE 'New'
            END
            --Uploaded By Site user and current user is sponsor user
          WHEN ((ISUPLOADEDBYSPONSOR = 'N'
          AND I_USERID               = 0)
          AND (I_ISVIEWED           >= 1))
          THEN 'Accessed'
          ELSE 'New'
        END) O_DOCSTATUS
      FROM DUAL
      );
    RETURN O_STATUS;
  END GET_SITE_USER_STATUS;
--Procedure to Retrieve accessed status of document user/site specific
  FUNCTION GET_USER_DOC_ACC_STATUS(
      DOCEXCHANGEVERID    IN NUMBER,
      ASSIGNEDTO          IN NUMBER,
      OPSITEID            IN NUMBER,
      OPUSERID            IN NUMBER,
      DOCSTATUS           IN VARCHAR2,
      ISUPLOADEDBYSPONSOR IN VARCHAR2)
    RETURN VARCHAR2
  AS
    SPONSOR_SQL    VARCHAR2(9999 BYTE);
    IS_SPONSOR_CNT NUMBER;
    O_STATUS       VARCHAR2(200 BYTE);
    I_COUNT        NUMBER;
    V_COUNT_QUERY  VARCHAR2(2000 BYTE);
  BEGIN
    SPONSOR_SQL := 'SELECT count(UP.USERID) FROM TBL_USERPROFILES UP WHERE UP.ISSPONSOR = ''Y'' AND UP.USERID = ' || ASSIGNEDTO;
    EXECUTE IMMEDIATE SPONSOR_SQL INTO IS_SPONSOR_CNT;
    IF OPSITEID IS NULL AND OPUSERID IS NULL AND ISUPLOADEDBYSPONSOR = 'N' AND IS_SPONSOR_CNT = 0 THEN
      O_STATUS  := 'N.A.';
    END IF;
    IF OPSITEID     <> -1 AND OPUSERID = -1 THEN
      V_COUNT_QUERY := 'SELECT COUNT(USERDOCMAP.ISDOCVIEWED)              
FROM TBL_USERDOCMAP USERDOCMAP              
WHERE USERDOCMAP.DOCEXCHANGEVERID = ' || TO_CHAR(DOCEXCHANGEVERID) || ' AND USERDOCMAP.ASSIGNEDTO         = ' || TO_CHAR(ASSIGNEDTO) || ' AND USERDOCMAP.SITEID             = ' || TO_CHAR(OPSITEID) || ' AND USERDOCMAP.ISDOCVIEWED         =            ''Y''';
      EXECUTE IMMEDIATE V_COUNT_QUERY INTO I_COUNT;
      SELECT O_DOCSTATUS
      INTO O_STATUS
      FROM
        (SELECT DISTINCT (
          CASE
            WHEN DOCSTATUS = 'N.A.'
            THEN 'N.A.'
            WHEN (I_COUNT = 1)
            THEN 'Y'
            ELSE 'N'
          END) O_DOCSTATUS
        FROM DUAL
        );
    END IF;
    IF OPSITEID      = -1 AND OPUSERID <> -1 THEN
      V_COUNT_QUERY := 'SELECT COUNT(USERDOCMAP.ISDOCVIEWED)  
FROM TBL_USERDOCMAP USERDOCMAP              
WHERE USERDOCMAP.DOCEXCHANGEVERID = ' || TO_CHAR(DOCEXCHANGEVERID) || ' AND USERDOCMAP.ASSIGNEDTO         = ' || TO_CHAR(ASSIGNEDTO) || ' AND USERDOCMAP.SITEID             IS NULL AND USERDOCMAP.ISDOCVIEWED         =            ''Y''';
      EXECUTE IMMEDIATE V_COUNT_QUERY INTO I_COUNT;
      SELECT O_DOCSTATUS
      INTO O_STATUS
      FROM
        (SELECT DISTINCT (
          CASE
            WHEN DOCSTATUS = 'N.A.'
            THEN 'N.A.'
            WHEN (I_COUNT = 1)
            THEN 'Y'
            ELSE 'N'
          END) O_DOCSTATUS
        FROM DUAL
        );
    END IF;
    IF OPSITEID = -1 AND OPUSERID = -1 AND ISUPLOADEDBYSPONSOR = 'Y' THEN
      O_STATUS := DOCSTATUS;
    END IF;
    IF OPSITEID      = -1 AND OPUSERID = -1 AND ISUPLOADEDBYSPONSOR = 'N' THEN
      V_COUNT_QUERY := 'SELECT COUNT(UDM.ISDOCVIEWED)            
FROM TBL_USERDOCMAP UDM            
WHERE UDM.DOCEXCHANGEVERID = ' || TO_CHAR(DOCEXCHANGEVERID) || '            
AND UDM.SITEID            IS NULL            
AND UDM.ASSIGNEDTO         = ' || TO_CHAR(ASSIGNEDTO) ;
      EXECUTE IMMEDIATE V_COUNT_QUERY INTO I_COUNT;
      IF I_COUNT  = 0 THEN
        O_STATUS := 'N';
      ELSE
        O_STATUS := 'Y';
      END IF;
    END IF;
    RETURN O_STATUS;
  END GET_USER_DOC_ACC_STATUS;
--Procedure to check whether user has access of document or not. If user has access it will return true else false.
  PROCEDURE CHECK_ACCS_OF_DOC(
      I_USERID        IN NUMBER,
      I_DOCEXCHANGEID IN NUMBER,
      O_RETRN_MSG OUT VARCHAR2)
  AS
    RETRN_MSG          VARCHAR2(50);
    DOC_ADMIN_SQL      VARCHAR2(9999 BYTE);
    DOC_ADMIN_NO       NUMBER;
    UPLDED_BY_LGIN_SQL VARCHAR2(9999 BYTE);
    UPLDED_BY_LGIN_NO  NUMBER;
    SPONSOR_SQL        VARCHAR2(9999 BYTE);
    SPONSOR_NO         NUMBER;
    SPONSOR_23SQL      VARCHAR2(9999 BYTE);
    SPONSOR_23NO       NUMBER;
    SPONSOR_1SQL       VARCHAR2(9999 BYTE);
    SPONSOR_1NO        NUMBER;
  BEGIN
    RETRN_MSG := 'true';
    --Tracelerate Doc Admin
    DOC_ADMIN_SQL := 'SELECT COUNT(URM.ROLEID)    
FROM TBL_USERROLEMAP URM    
WHERE TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') < = TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')    
AND (TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')   >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')    
OR URM.EFFECTIVEENDDATE     IS NULL)    
AND URM.STUDYID             IS NULL    
AND URM.SITEID              IS NULL    
AND URM.ROLEID               = 43    
AND URM.USERID               = ' || I_USERID;
    EXECUTE IMMEDIATE DOC_ADMIN_SQL INTO DOC_ADMIN_NO;
    --dbms_output.put_line('DOC_ADMIN_SQL' || DOC_ADMIN_SQL);
    --dbms_output.put_line('DOC_ADMIN_NO' || DOC_ADMIN_NO);
    ---Uploaded By LoggedIn User
    UPLDED_BY_LGIN_SQL := 'SELECT COUNT(DE.DOCEXCHANGEID)    
FROM TBL_DOCEXCHANGE DE,    
TBL_DOCEXCHANGEVERSION DEV    
WHERE DE.DOCEXCHANGEID = DEV.DOCEXCHANGEID    
AND DEV.UPLOADEDBY     = ' || I_USERID || '    
AND DE.DOCEXCHANGEID   = ' || I_DOCEXCHANGEID;
    EXECUTE IMMEDIATE UPLDED_BY_LGIN_SQL INTO UPLDED_BY_LGIN_NO;
    --dbms_output.put_line('UPLDED_BY_LGIN_SQL' || UPLDED_BY_LGIN_SQL);
    --dbms_output.put_line('UPLDED_BY_LGIN_NO' || UPLDED_BY_LGIN_NO);
    SPONSOR_SQL := 'SELECT count(UP.USERID) FROM TBL_USERPROFILES UP WHERE UP.ISSPONSOR = ''Y'' AND UP.USERID = ' || I_USERID;
    EXECUTE IMMEDIATE SPONSOR_SQL INTO SPONSOR_NO;
    --dbms_output.put_line('SPONSOR_SQL' || SPONSOR_SQL);
    --dbms_output.put_line('SPONSOR_NO' || SPONSOR_NO);
    SPONSOR_23SQL := 'SELECT COUNT(DISTINCT ST.studyID)
FROM TBL_DOCEXCHANGE DE
JOIN TBL_DOCEXCHANGEVERSION DEV
ON DE.DOCEXCHANGEID = DEV.DOCEXCHANGEID
JOIN TBL_DOCSTUDYMAP DSM
ON DEV.DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID
JOIN TBL_STUDY ST
ON DSM.STUDYID = ST.STUDYID
JOIN TBL_PROGRAM PG
ON ST.PROGID = PG.PROGID
JOIN TBL_USERPROFILES UP
ON PG.ORGID = UP.ORGID
JOIN TBL_USERROLEMAP URM
ON UP.USERID = URM.USERID
JOIN TBL_ROLES RL
ON URM.ROLEID = RL.ROLEID
WHERE DE.DOCEXCHANGEID = ' || I_DOCEXCHANGEID || ' 
AND UP.USERID          = ' || I_USERID ||
    ' 
AND (RL.ROLETYPEID IN (2,3) OR URM.ROLEID IN (SELECT RL.ROLEID  
FROM TBL_ROLES RL  
JOIN TBL_ROLETYPE RLT  
ON RL.ROLETYPEID    = RLT.ROLETYPEID  
WHERE RLT.ROLETYPE IN (''Type I'')  
AND RL.ROLENAME    IN (''Study - Edit and View'',''Study - View Only''))) 
AND TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')
AND (URM.EFFECTIVEENDDATE                                              IS NULL
OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')    >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy''))';
    EXECUTE IMMEDIATE SPONSOR_23SQL INTO SPONSOR_23NO;
    SPONSOR_1SQL :=
    'SELECT COUNT(DE.DOCEXCHANGEID)
FROM TBL_DOCSTUDYMAP DSM,  
TBL_USERROLEMAP URM,  
TBL_ROLES RL,  
TBL_DOCEXCHANGE DE,  
TBL_DOCEXCHANGEVERSION DEV
WHERE DSM.STUDYID                                 = URM.STUDYID
AND DE.DOCEXCHANGEID = DEV.DOCEXCHANGEID
AND URM.ROLEID = RL.ROLEID
AND TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')
AND (URM.EFFECTIVEENDDATE                        IS NULL
OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')    >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy''))
AND DEV.DOCEXCHANGEVERID                          = DSM.DOCEXCHANGEVERID
AND URM.ROLEID IN (SELECT RL.ROLEID  
FROM TBL_ROLES RL  
JOIN TBL_ROLETYPE RLT  
ON RL.ROLETYPEID    = RLT.ROLETYPEID  
WHERE RLT.ROLETYPE IN (''Type I'')  
AND RL.ROLENAME    IN (''Monitor'',''General Safety User'',''Local Safety Officer''))
AND URM.SITEID  IN  
(SELECT DISTINCT SITEID  
FROM TBL_DOCSITEROLEMAP  
WHERE DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID  
)
AND URM.USERID       = '
    || I_USERID || ' 
AND DE.DOCEXCHANGEID = ' || I_DOCEXCHANGEID;
    EXECUTE IMMEDIATE SPONSOR_1SQL INTO SPONSOR_1NO;
    SELECT RETRN_MSG_TMP
    INTO RETRN_MSG
    FROM
      (SELECT DISTINCT (
        CASE
          WHEN DOC_ADMIN_NO >= 1
          THEN 'true'
          WHEN UPLDED_BY_LGIN_NO >= 1
          THEN 'true'
            -- Sponsor user
          WHEN SPONSOR_NO  >= 1
          AND (SPONSOR_23NO > 0
          OR SPONSOR_1NO    > 0)
          THEN 'true'
            --Site user
          WHEN SPONSOR_NO = 0
          THEN
            (SELECT
              CASE
                WHEN COUNT(X.DOCEXCHANGEID) > 0
                THEN 'true'
                ELSE 'false'
              END
            FROM
              (SELECT DISTINCT DE.DOCEXCHANGEID
              FROM TBL_DOCEXCHANGE DE,
                TBL_DOCEXCHANGEVERSION DEV,
                TBL_DOCSITEROLEMAP DSRM,
                TBL_USERROLEMAP URM
              WHERE DE.DOCEXCHANGEID                                                  = DEV.DOCEXCHANGEID
              AND DEV.DOCEXCHANGEVERID                                                = DSRM.DOCEXCHANGEVERID
              AND DSRM.SITEID                                                         = URM.SITEID
              AND TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,'dd-MM-yyyy'),'dd-MM-yyyy') <= TO_DATE(TO_CHAR(SYSDATE,'dd-MM-yyyy'),'dd-MM-yyyy')
              AND (URM.EFFECTIVEENDDATE                                              IS NULL
              OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,'dd-MM-yyyy'),'dd-MM-yyyy')    >= TO_DATE(TO_CHAR(SYSDATE,'dd-MM-yyyy'),'dd-MM-yyyy'))
              AND URM.USERID                                                          = I_USERID
              AND DE.DOCEXCHANGEID                                                    = I_DOCEXCHANGEID
              UNION
              SELECT DISTINCT DE.DOCEXCHANGEID
              FROM TBL_DOCEXCHANGE DE,
                TBL_DOCEXCHANGEVERSION DEV,
                TBL_USERDOCMAP UDM
              WHERE DE.DOCEXCHANGEID   = DEV.DOCEXCHANGEID
              AND DEV.DOCEXCHANGEVERID = UDM.DOCEXCHANGEVERID
              AND UDM.SITEID          IS NULL
              AND UDM.ASSIGNEDTO       = I_USERID
              AND DE.DOCEXCHANGEID     = I_DOCEXCHANGEID
              ) X
            )
          ELSE 'false'
        END) RETRN_MSG_TMP
      FROM DUAL
      );
    O_RETRN_MSG :=RETRN_MSG;
  END CHECK_ACCS_OF_DOC;
PROCEDURE FN_GET_SPO_DOCEXCHNG(
      I_LOGGEDINUSERID  IN NUMBER,
      I_CREATEDFROMDATE IN DATE,
      I_CREATEDTODATE   IN DATE,
      I_METADATAMODDT   IN DATE,
      I_METADATAMODTODT IN DATE,
      I_PIIDS           IN NUM_ARRAY,
      I_ROLEIDS         IN NUM_ARRAY,
      I_SITEIDS         IN NUM_ARRAY,
      I_STUDYIDS        IN NUM_ARRAY,
      I_USERIDS         IN NUM_ARRAY,
      I_COMPOUNDID      IN NUMBER,
      I_PROGRAMID       IN NUMBER,
      I_PACKAGEID       IN NUMBER,
      I_COUNTRYID       IN NUMBER,
      I_DOCUMENTTYPE    IN NUMBER,
      I_LANGUAGEID      IN NUMBER,
      I_METADATAMODBY   IN NUMBER,
      I_UPLOADEDBY      IN NUMBER,
      I_FILEFORMAT      IN VARCHAR_ARRAY,
      I_DOCSTATUS       IN VARCHAR2,
      I_DOCUPLOADLEVEL  IN VARCHAR2,
      I_ISVIEWEDBYME    IN VARCHAR2,
      I_ORGFILENAME     IN VARCHAR2,
      I_REFMODELSUBSEC  IN VARCHAR2,
      I_REFMODELZONE    IN VARCHAR2,
      I_TITLE           IN VARCHAR2,
      I_UPLOADEDBYROLE  IN VARCHAR2,
      I_PERSNLIDS       IN NUM_ARRAY,
      I_PERSNLNMS       IN VARCHAR2,
      I_OFFSET          IN NUMBER,
      I_LIMIT           IN NUMBER,
      I_ORDRBY          IN VARCHAR2,
      I_SORTBY          IN VARCHAR2,
      O_COUNT OUT NUMBER,
      REF_CUS_DOC_RESULTS OUT SYS_REFCURSOR)
  AS
    I_DOCSTATUSX          VARCHAR2(50 BYTE);
    I_DOCSTATUSY          VARCHAR2(50 BYTE);
    PAG_END_ROW           NUMBER;
    I_UPLOADEDBYROLEX     VARCHAR2(20 BYTE);
    I_UPLOADEDBYME        NUMBER;
    PRE_STC_SQL_PART      VARCHAR2(32767 BYTE);
    STC_SQL_PART0         VARCHAR2(32767 BYTE);
    STC_SQL_PART          VARCHAR2(32767 BYTE);
    DYNMC_SQL_CLAUSE_PART VARCHAR2(32767 BYTE);
    STC_SQL_CLAUSE_PART   VARCHAR2(32767 BYTE);
    DYNMC_SORTING_PART    VARCHAR2(32767 BYTE);
    STR_DOCSTUDYMAP       VARCHAR2(9999 BYTE);
    STR_DOCSITEROLEMAP    VARCHAR2(9999 BYTE);
    STR_TBL_USERDOCMAP    VARCHAR2(9999 BYTE);
    STR_STUDY             VARCHAR2(9999 BYTE);
    STR_SITE              VARCHAR2(9999 BYTE);
    PI_IDS_STR            VARCHAR2(9999 BYTE);
    ROLE_IDS_STR          VARCHAR2(9999 BYTE);
    SITE_IDS_STR          VARCHAR2(9999 BYTE);
    STUDY_IDS_STR         VARCHAR2(9999 BYTE);
    USER_IDS_STR          VARCHAR2(9999 BYTE);
    PRSNL_IDS_STR         VARCHAR2(9999 BYTE);
    FILEFORMAT_STR        VARCHAR2(9999 BYTE);
    V_COUNT_QUERY         VARCHAR2(32767 BYTE);
    FINAL_QUERY           VARCHAR2(32767 BYTE);
    STR_CREATEDFROMDATE   VARCHAR2(9999 BYTE);
    STR_CREATEDTODATE     VARCHAR2(9999 BYTE);
    STR_METADATAMODDT     VARCHAR2(9999 BYTE);
    STR_METADATAMODTODT   VARCHAR2(9999 BYTE);
    DYNA_USER_FUN_CALL    NUMBER;
    TEMP_SORTBY           VARCHAR2(9999 BYTE);
    --timediff              NUMBER;
  BEGIN
    --timediff              := dbms_utility.get_time;
    I_DOCSTATUSX          := NULL;
    I_DOCSTATUSY          := I_DOCSTATUS;
    STR_DOCSTUDYMAP       := NULL;
    STR_DOCSITEROLEMAP    := NULL;
    STR_TBL_USERDOCMAP    := NULL;
    STR_STUDY             := NULL;
    STR_SITE              := NULL;
    PAG_END_ROW           := I_OFFSET + I_LIMIT - 1;
    IF I_UPLOADEDBYROLE    = 'sponsor' THEN
      I_UPLOADEDBYROLEX   := 'Y';
    ELSIF I_UPLOADEDBYROLE = 'user' THEN
      I_UPLOADEDBYROLEX   := 'N';
    ELSIF I_UPLOADEDBYROLE = 'me' THEN
      I_UPLOADEDBYME      := I_LOGGEDINUSERID;
    ELSE
      I_UPLOADEDBYROLEX := NULL;
      I_UPLOADEDBYME    := NULL;
    END IF;
    DYNA_USER_FUN_CALL := 1;
    IF I_SORTBY         = 'DOCTITLE' THEN
      TEMP_SORTBY      := 'UPPER(TEMPDATA.DOCTITLE)';
    ELSIF I_SORTBY      = 'DOCTYPE' THEN
      TEMP_SORTBY      := 'UPPER(TEMPDATA.DOCTYPE)';
      
     ELSIF I_SORTBY = 'UPLOADEDON' THEN
            TEMP_SORTBY := 'TEMPDATA.UPLOADEDON';
      
    ELSIF I_SORTBY      = 'DOCSTATUS' THEN
      TEMP_SORTBY      := 'UPPER(TEMPDATA.DOCSTATUS)';
    ELSIF I_SORTBY      = 'VIEWEDSTATUS' THEN
      TEMP_SORTBY      := 'UPPER(TEMPDATA.VIEWEDSTATUS)';
    ELSIF I_SORTBY      = 'SHAREDWITHROLE' THEN
      TEMP_SORTBY      := 'UPPER(TEMPDATA.SHAREDWITHROLE)';
    ELSIF I_SORTBY      = 'PERSONNELNAMES' THEN
      TEMP_SORTBY      := 'UPPER(pkg_encrypt.fn_decrypt(TEMPDATA.PERSONNELNAMES))';
    ELSE
      TEMP_SORTBY := 'TEMPDATA.' || I_SORTBY;
    END IF;
    IF I_METADATAMODTODT IS NOT NULL THEN
      I_DOCSTATUSX       := 'metadata updated';
    END IF;
    IF I_DOCSTATUSY IS NULL THEN
      I_DOCSTATUSY  := I_DOCSTATUSX;
    END IF;
    PRE_STC_SQL_PART := ' SELECT TEMPDATA.* FROM ( ';
    STC_SQL_PART     :=
    ' SELECT DISTINCT DOCEXCHG.DOCEXCHANGEID,          
DOCEXCHGVER.DOCEXCHANGEVERID,          
DOCEXCHG.DOCTITLE,          
DOCTYPEMASTER.DOCTYPE, 
DOCEXCHGVER.ORGFILENAME, 
DOCEXCHGVER.UPLOADEDON,  
DOCEXCHGVER.UPLOADEDBY,            
--Status          
DOCEXCHGVER.DOCSTATUS,            
--Viewed Status          
(          
CASE            
WHEN DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''Y''            
THEN ''N.A.''            
ELSE ''gfs''          
END ) VIEWEDSTATUS,          
--shared with roles          
(          
CASE            
WHEN DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''Y''            
THEN ''Site''            
ELSE ''Sponsor''          
END ) SHAREDWITHROLE,          
DOCEXCHG.DOCDESC,                  
DOCEXCHGVER.ISUPLOADEDBYSPONSOR,        
pkg_encrypt.fn_decrypt (DOCEXCHGVER.PERSONNELNAMES) || 
(SELECT listagg(pkg_encrypt.fn_decrypt (UP.FIRSTNAME)          
|| '' '' || pkg_encrypt.fn_decrypt (UP.LASTNAME), '','') within GROUP (        
ORDER BY pkg_encrypt.fn_decrypt (UP.FIRSTNAME)) AS list        
FROM TBL_USERPROFILES UP,          
TBL_USERDOCMAP UDM        
WHERE DOCEXCHGVER.DOCEXCHANGEVERID = UDM.DOCEXCHANGEVERID        
AND UDM.ASSIGNEDTO                 = UP.USERID        
AND UDM.ISPERSONNEL = 1      
) PERSONNELNAMES            
FROM TBL_DOCEXCHANGE DOCEXCHG        
JOIN TBL_DOCEXCHANGEVERSION DOCEXCHGVER        
ON DOCEXCHG.DOCEXCHANGEID = DOCEXCHGVER.DOCEXCHANGEID        
JOIN TBL_DOCTYPEMASTER DOCTYPEMASTER        
ON DOCEXCHG.DOCTYPEID = DOCTYPEMASTER.DOCTYPEID '
    ;
    DYNMC_SQL_CLAUSE_PART   := ' WHERE DOCEXCHGVER.DELETEDON      IS NULL ';
    IF I_CREATEDFROMDATE    IS NOT NULL THEN
      STR_CREATEDFROMDATE   := TO_CHAR(I_CREATEDFROMDATE, 'yyyy-MM-dd hh24:mi:ss');
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND TO_DATE(TO_CHAR(DOCEXCHGVER.UPLOADEDON, ''yyyy-MM-dd hh24:mi:ss''), ''yyyy-MM-dd hh24:mi:ss'') >= TO_DATE(''' || STR_CREATEDFROMDATE || ''', ''yyyy-MM-dd hh24:mi:ss'')';
    END IF;
    IF I_CREATEDTODATE      IS NOT NULL THEN
      STR_CREATEDTODATE     := TO_CHAR(I_CREATEDTODATE, 'yyyy-MM-dd hh24:mi:ss');
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND TO_DATE(TO_CHAR(DOCEXCHGVER.UPLOADEDON, ''yyyy-MM-dd hh24:mi:ss''), ''yyyy-MM-dd hh24:mi:ss'') <= TO_DATE(''' || STR_CREATEDTODATE || ''', ''yyyy-MM-dd hh24:mi:ss'')';
    END IF;
    IF I_METADATAMODDT      IS NOT NULL THEN
      STR_METADATAMODDT     := TO_CHAR(I_METADATAMODDT, 'yyyy-MM-dd hh24:mi:ss');
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND TO_DATE(TO_CHAR(DOCEXCHG.METADATAUPDATEDON, ''yyyy-MM-dd hh24:mi:ss''), ''yyyy-MM-dd hh24:mi:ss'') >= TO_DATE(''' || STR_METADATAMODDT || ''', ''yyyy-MM-dd hh24:mi:ss'')';
    END IF;
    IF I_METADATAMODTODT    IS NOT NULL THEN
      STR_METADATAMODTODT   := TO_CHAR(I_METADATAMODTODT, 'yyyy-MM-dd hh24:mi:ss');
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND TO_DATE(TO_CHAR(DOCEXCHG.METADATAUPDATEDON, ''yyyy-MM-dd hh24:mi:ss''), ''yyyy-MM-dd hh24:mi:ss'') <= TO_DATE(''' || STR_METADATAMODTODT || ''', ''yyyy-MM-dd hh24:mi:ss'')';
    END IF;
    IF I_COUNTRYID          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.COUNTRYID  =' || I_COUNTRYID;
    END IF;
    IF I_DOCUMENTTYPE       IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.DOCTYPEID  =' || I_DOCUMENTTYPE;
    END IF;
    IF I_PACKAGEID          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.DOCPKGID  =' || I_PACKAGEID;
    END IF;
    IF I_LANGUAGEID         IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.LANGUAGEID  =' || I_LANGUAGEID;
    END IF;
    IF I_METADATAMODBY      IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.METADATAUPDATEDBY  =' || I_METADATAMODBY;
    END IF;
    IF I_UPLOADEDBY         IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.UPLOADEDBY  =' || I_UPLOADEDBY;
    END IF;
    IF I_TITLE              IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(DOCEXCHG.DOCTITLE) LIKE LOWER(''%' || I_TITLE || '%'')';
    END IF;
    IF I_ORGFILENAME        IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(DOCEXCHGVER.ORGFILENAME) LIKE LOWER(''%' || I_ORGFILENAME || '%'')';
    END IF;
    IF I_PERSNLNMS          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(pkg_encrypt.fn_decrypt(DOCEXCHGVER.PERSONNELNAMES)) LIKE LOWER(''%' || I_PERSNLNMS || '%'')';
    END IF;
    IF I_REFMODELSUBSEC     IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(DOCEXCHG.MODELSUBSEC) = LOWER(''' || I_REFMODELSUBSEC || ''')';
    END IF;
    IF I_REFMODELZONE       IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(DOCEXCHG.MODELZONE) = LOWER(''' || I_REFMODELZONE || ''')';
    END IF;
    IF I_UPLOADEDBYROLEX    IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''' || I_UPLOADEDBYROLEX || '''';
    END IF;
    IF I_UPLOADEDBYME       IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.UPLOADEDBY =' || I_UPLOADEDBYME;
    END IF;
    IF I_COMPOUNDID      IS NOT NULL THEN
      IF STR_DOCSTUDYMAP IS NULL THEN
        STR_DOCSTUDYMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART     := STC_SQL_PART || ' JOIN TBL_DOCSTUDYMAP DSM       
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID';
      END IF;
      IF STR_STUDY   IS NULL THEN
        STR_STUDY    := 'TABLE_JOIN_ADDED';
        STC_SQL_PART := STC_SQL_PART || ' JOIN TBL_STUDY ST        
ON DSM.STUDYID = ST.STUDYID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND ST.COMPOUNDID =' || I_COMPOUNDID;
    END IF;
    IF I_PROGRAMID       IS NOT NULL THEN
      IF STR_DOCSTUDYMAP IS NULL THEN
        STR_DOCSTUDYMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART     := STC_SQL_PART || ' JOIN TBL_DOCSTUDYMAP DSM       
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID';
      END IF;
      IF STR_STUDY   IS NULL THEN
        STR_STUDY    := 'TABLE_JOIN_ADDED';
        STC_SQL_PART := STC_SQL_PART || ' LEFT JOIN TBL_STUDY ST        
ON DSM.STUDYID = ST.STUDYID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND ST.PROGID =' || I_PROGRAMID;
    END IF;
    IF I_STUDYIDS IS NOT NULL AND I_STUDYIDS.count >0 THEN
      FOR i IN 1..I_STUDYIDS.count
      LOOP
        EXIT
      WHEN I_STUDYIDS(i) = -1;
        IF i             = 1 THEN
          STUDY_IDS_STR := I_STUDYIDS(i);
        ELSE
          STUDY_IDS_STR := STUDY_IDS_STR || ',' || I_STUDYIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF STUDY_IDS_STR     IS NOT NULL THEN
      IF STR_DOCSTUDYMAP IS NULL THEN
        STR_DOCSTUDYMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART     := STC_SQL_PART || ' LEFT JOIN TBL_DOCSTUDYMAP DSM       
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DSM.STUDYID  IN(' || STUDY_IDS_STR || ')';
    END IF;
    IF I_SITEIDS IS NOT NULL AND I_SITEIDS.count >0 THEN
      FOR i IN 1..I_SITEIDS.count
      LOOP
        EXIT
      WHEN I_SITEIDS(i) = -1;
        IF i            = 1 THEN
          SITE_IDS_STR := I_SITEIDS(i);
        ELSE
          SITE_IDS_STR := SITE_IDS_STR || ',' || I_SITEIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF SITE_IDS_STR         IS NOT NULL THEN
      IF STR_DOCSITEROLEMAP IS NULL THEN
        STR_DOCSITEROLEMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART        := STC_SQL_PART || ' LEFT JOIN TBL_DOCSITEROLEMAP DSRM       
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSRM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DSRM.SITEID  IN(' || SITE_IDS_STR || ')';
    END IF;
    IF I_ROLEIDS IS NOT NULL AND I_ROLEIDS.count >0 THEN
      FOR i IN 1..I_ROLEIDS.count
      LOOP
        EXIT
      WHEN I_ROLEIDS(i) = -1;
        IF i            = 1 THEN
          ROLE_IDS_STR := I_ROLEIDS(i);
        ELSE
          ROLE_IDS_STR := ROLE_IDS_STR || ',' || I_ROLEIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF ROLE_IDS_STR         IS NOT NULL THEN
      IF STR_DOCSITEROLEMAP IS NULL THEN
        STR_DOCSITEROLEMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART        := STC_SQL_PART || ' LEFT JOIN TBL_DOCSITEROLEMAP DSRM       
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSRM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DSRM.ROLEID  IN(' || ROLE_IDS_STR || ')';
    END IF;
    IF I_PIIDS IS NOT NULL AND I_PIIDS.count >0 THEN
      FOR i IN 1..I_PIIDS.count
      LOOP
        EXIT
      WHEN I_PIIDS(i) = -1;
        IF i          = 1 THEN
          PI_IDS_STR := I_PIIDS(i);
        ELSE
          PI_IDS_STR := PI_IDS_STR || ',' || I_PIIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF PI_IDS_STR           IS NOT NULL THEN
      IF STR_DOCSITEROLEMAP IS NULL THEN
        STR_DOCSITEROLEMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART        := STC_SQL_PART || ' LEFT JOIN TBL_DOCSITEROLEMAP DSRM       
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSRM.DOCEXCHANGEVERID';
      END IF;
      IF STR_SITE    IS NULL THEN
        STR_SITE     := 'TABLE_JOIN_ADDED';
        STC_SQL_PART := STC_SQL_PART || ' LEFT JOIN TBL_SITE SIT       
ON DSRM.SITEID = SIT.SITEID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND SIT.PIID  IN(' || PI_IDS_STR || ')';
    END IF;
    IF I_USERIDS IS NOT NULL AND I_USERIDS.count >0 THEN
      FOR i IN 1..I_USERIDS.count
      LOOP
        EXIT
      WHEN I_USERIDS(i) = -1;
        IF i            = 1 THEN
          USER_IDS_STR := I_USERIDS(i);
        ELSE
          USER_IDS_STR := USER_IDS_STR || ',' || I_USERIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF USER_IDS_STR         IS NOT NULL THEN
      IF STR_TBL_USERDOCMAP IS NULL THEN
        STR_TBL_USERDOCMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART        := STC_SQL_PART || ' JOIN TBL_USERDOCMAP UDM
ON DOCEXCHGVER.DOCEXCHANGEVERID   = UDM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND (UDM.ASSIGNEDTO  IN(' || USER_IDS_STR || ') AND UDM.SITEID IS NULL)';
    END IF;
    IF I_PERSNLIDS IS NOT NULL AND I_PERSNLIDS.count >0 THEN
      FOR i IN 1..I_PERSNLIDS.count
      LOOP
        EXIT
      WHEN I_PERSNLIDS(i) = -1;
        IF i              = 1 THEN
          PRSNL_IDS_STR  := I_PERSNLIDS(i);
        ELSE
          PRSNL_IDS_STR := PRSNL_IDS_STR || ',' || I_PERSNLIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF PRSNL_IDS_STR        IS NOT NULL THEN
      IF STR_TBL_USERDOCMAP IS NULL THEN
        STR_TBL_USERDOCMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART        := STC_SQL_PART || ' JOIN TBL_USERDOCMAP UDM
ON DOCEXCHGVER.DOCEXCHANGEVERID   = UDM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND (UDM.ASSIGNEDTO  IN(' || PRSNL_IDS_STR || ') AND UDM.SITEID IS NULL AND UDM.ISPERSONNEL = 1)';
    END IF;
    IF I_FILEFORMAT IS NOT NULL AND I_FILEFORMAT.count >0 THEN
      FOR i IN 1..I_FILEFORMAT.count
      LOOP
        EXIT
      WHEN I_FILEFORMAT(i) = 'X_NO_DATA_SENT_X';
        IF i               = 1 THEN
          FILEFORMAT_STR  := 'UPPER(''' || I_FILEFORMAT(i) || ''')';
        ELSE
          FILEFORMAT_STR := FILEFORMAT_STR || ',UPPER(''' || I_FILEFORMAT(i) || ''')';
        END IF;
      END LOOP;
    END IF;
    IF FILEFORMAT_STR       IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND UPPER(DOCEXCHGVER.FILEFORMAT)  IN(' || FILEFORMAT_STR || ')';
    END IF;
    STC_SQL_CLAUSE_PART := '  
--FOR SPONSOR USER ONLY        
AND ((DOCEXCHGVER.UPLOADEDBY     = ' || I_LOGGEDINUSERID ||
    ')        
OR DOCEXCHGVER.DOCEXCHANGEVERID IN ((          
(SELECT DEV.DOCEXCHANGEVERID          
FROM TBL_DOCSTUDYMAP DSM,            
TBL_USERROLEMAP URM,            
TBL_ROLES RL,            
TBL_DOCEXCHANGE DE,            
TBL_DOCEXCHANGEVERSION DEV          
WHERE DSM.STUDYID                                                         = URM.STUDYID          
AND DE.DOCEXCHANGEID                                                    = DEV.DOCEXCHANGEID          
AND URM.ROLEID                                                          = RL.ROLEID          
AND TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')          
AND (URM.EFFECTIVEENDDATE                                              IS NULL          
OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')    >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy''))          
AND DEV.DOCEXCHANGEVERID                                                = DSM.DOCEXCHANGEVERID          
AND URM.ROLEID              IN  
(SELECT RL.ROLEID  
FROM TBL_ROLES RL  
JOIN TBL_ROLETYPE RLT  
ON RL.ROLETYPEID    = RLT.ROLETYPEID  
WHERE RLT.ROLETYPE IN (''Type I'')  
AND RL.ROLENAME    IN (''Monitor'',''General Safety User'',''Local Safety Officer'')  
)         
AND URM.SITEID                                                         IN            
(SELECT DISTINCT SITEID            
FROM TBL_DOCSITEROLEMAP            
WHERE DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID            
)          
AND URM.USERID = '
    || I_LOGGEDINUSERID || '          
)        
UNION ALL          
(SELECT DEV.DOCEXCHANGEVERID          
FROM TBL_DOCEXCHANGE DE          
JOIN TBL_DOCEXCHANGEVERSION DEV          
ON DE.DOCEXCHANGEID = DEV.DOCEXCHANGEID          
JOIN TBL_DOCSTUDYMAP DSM          
ON DEV.DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID          
JOIN TBL_STUDY ST          
ON DSM.STUDYID = ST.STUDYID          
JOIN TBL_PROGRAM PG          
ON ST.PROGID = PG.PROGID          
JOIN TBL_USERPROFILES UP          
ON PG.ORGID = UP.ORGID          
JOIN TBL_USERROLEMAP URM          
ON UP.USERID = URM.USERID          
JOIN TBL_ROLES RL          
ON URM.ROLEID     = RL.ROLEID          
WHERE UP.USERID                                                           = ' || I_LOGGEDINUSERID ||
    '       
AND (RL.ROLETYPEID                                                     IN (2,3)          
OR (URM.ROLEID              IN  
(SELECT RL.ROLEID  
FROM TBL_ROLES RL  
JOIN TBL_ROLETYPE RLT  
ON RL.ROLETYPEID    = RLT.ROLETYPEID  
WHERE RLT.ROLETYPE IN (''Type I'')  
AND RL.ROLENAME    IN (''Study - Edit and View'',''Study - View Only'')
) AND URM.STUDYID = DSM.STUDYID))          
AND TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')          
AND (URM.EFFECTIVEENDDATE                                              IS NULL          
OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')    >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy''))          
)) ) )' ;
    IF I_SORTBY          IS NOT NULL THEN
      DYNMC_SORTING_PART := ' ORDER BY ' || TEMP_SORTBY || ' ' || I_ORDRBY;
    END IF;
    FINAL_QUERY          := 'SELECT ODATA.DOCEXCHANGEID,  
ODATA.DOCEXCHANGEVERID,  
ODATA.DOCTITLE,  
ODATA.DOCTYPE,  
ODATA.ORGFILENAME, 
ODATA.UPLOADEDON,    
ODATA.UPLOADEDBY,
ODATA.SHAREDWITHROLE,  
ODATA.DOCDESC,  
NULL OPSITEID,  
NULL OPUSERID,    
pkg_encrypt.fn_decrypt (ODATA.PERSONNELNAMES) PERSONNELNAMES,';
    IF I_DOCSTATUSY      IS NOT NULL OR I_ISVIEWEDBYME IS NOT NULL OR I_SORTBY = 'DOCSTATUS' OR I_SORTBY = 'VIEWEDSTATUS' THEN
      DYNA_USER_FUN_CALL := 2;
      STC_SQL_PART0      := STC_SQL_PART0 || ' SELECT STSVWDATA.DOCEXCHANGEID,        
STSVWDATA.DOCEXCHANGEVERID,        
STSVWDATA.DOCTITLE,        
STSVWDATA.DOCTYPE,  
STSVWDATA.ORGFILENAME, 
STSVWDATA.UPLOADEDON,    
STSVWDATA.UPLOADEDBY,        
STSVWDATA.SHAREDWITHROLE,        
STSVWDATA.DOCDESC,
STSVWDATA.ISUPLOADEDBYSPONSOR,
NULL OPSITEID,        
NULL OPUSERID,    
pkg_encrypt.fn_decrypt (STSVWDATA.PERSONNELNAMES) PERSONNELNAMES,';
    END IF;
    IF DYNA_USER_FUN_CALL  = 2 THEN
      STC_SQL_CLAUSE_PART := STC_SQL_CLAUSE_PART || ' ) STSVWDATA ';
    END IF;
    STC_SQL_CLAUSE_PART   := STC_SQL_CLAUSE_PART || ') TEMPDATA      
WHERE 1                         =1';
    IF I_DOCSTATUSY       IS NOT NULL THEN
      STC_SQL_CLAUSE_PART := STC_SQL_CLAUSE_PART || ' AND UPPER(TEMPDATA.DOCSTATUS)  = UPPER(''' || I_DOCSTATUSY || ''')';
    END IF;
    IF I_DOCSTATUSX       IS NOT NULL THEN
      STC_SQL_CLAUSE_PART := STC_SQL_CLAUSE_PART || ' AND UPPER(TEMPDATA.DOCSTATUS)  = UPPER(''' || I_DOCSTATUSX || ''')';
    END IF;
    IF I_ISVIEWEDBYME     IS NOT NULL THEN
      STC_SQL_CLAUSE_PART := STC_SQL_CLAUSE_PART || ' AND UPPER(TEMPDATA.VIEWEDSTATUS)  = UPPER(''' || I_ISVIEWEDBYME || ''')';
    END IF;
    IF (I_DOCSTATUSY IS NOT NULL OR I_SORTBY = 'DOCSTATUS') AND DYNA_USER_FUN_CALL = 2 THEN
      FINAL_QUERY    := FINAL_QUERY || ' ODATA.DOCSTATUS,';
      STC_SQL_PART0  := STC_SQL_PART0 || ' pkg_doc_exchange.GET_SITE_USER_STATUS(STSVWDATA.DOCEXCHANGEVERID,' || I_LOGGEDINUSERID || ',-1,-1,STSVWDATA.DOCSTATUS,STSVWDATA.ISUPLOADEDBYSPONSOR,0) DOCSTATUS,';
    END IF;
    IF I_DOCSTATUSY IS NULL AND (I_SORTBY <> 'DOCSTATUS' OR I_SORTBY IS NULL) AND DYNA_USER_FUN_CALL = 2 THEN
      FINAL_QUERY   := FINAL_QUERY || ' pkg_doc_exchange.GET_SITE_USER_STATUS(ODATA.DOCEXCHANGEVERID,' || I_LOGGEDINUSERID || ',-1,-1,ODATA.DOCSTATUS,ODATA.ISUPLOADEDBYSPONSOR,0) DOCSTATUS,';
      STC_SQL_PART0 := STC_SQL_PART0 || ' STSVWDATA.DOCSTATUS,';
    END IF;
    IF I_DOCSTATUSY IS NULL AND (I_SORTBY <> 'DOCSTATUS' OR I_SORTBY IS NULL) AND DYNA_USER_FUN_CALL = 1 THEN
      FINAL_QUERY   := FINAL_QUERY || ' pkg_doc_exchange.GET_SITE_USER_STATUS(ODATA.DOCEXCHANGEVERID,' || I_LOGGEDINUSERID || ',-1,-1,ODATA.DOCSTATUS,ODATA.ISUPLOADEDBYSPONSOR,0) DOCSTATUS,';
    END IF;
    IF (I_ISVIEWEDBYME IS NOT NULL OR I_SORTBY = 'VIEWEDSTATUS') AND DYNA_USER_FUN_CALL = 2 THEN
      FINAL_QUERY      := FINAL_QUERY || ' ODATA.VIEWEDSTATUS';
      STC_SQL_PART0    := STC_SQL_PART0 || ' COALESCE(pkg_doc_exchange.GET_USER_DOC_ACC_STATUS(STSVWDATA.DOCEXCHANGEVERID,' || I_LOGGEDINUSERID || ',-1,-1,STSVWDATA.VIEWEDSTATUS,STSVWDATA.ISUPLOADEDBYSPONSOR), ''N'') VIEWEDSTATUS';
    END IF;
    IF I_ISVIEWEDBYME IS NULL AND (I_SORTBY <> 'VIEWEDSTATUS' OR I_SORTBY IS NULL) AND DYNA_USER_FUN_CALL = 2 THEN
      FINAL_QUERY     := FINAL_QUERY || ' COALESCE(pkg_doc_exchange.GET_USER_DOC_ACC_STATUS(ODATA.DOCEXCHANGEVERID,' || I_LOGGEDINUSERID || ',-1,-1,ODATA.VIEWEDSTATUS,ODATA.ISUPLOADEDBYSPONSOR), ''N'') VIEWEDSTATUS';
      STC_SQL_PART0   := STC_SQL_PART0 || ' STSVWDATA.VIEWEDSTATUS';
    END IF;
    IF I_ISVIEWEDBYME IS NULL AND (I_SORTBY <> 'VIEWEDSTATUS' OR I_SORTBY IS NULL) AND DYNA_USER_FUN_CALL = 1 THEN
      FINAL_QUERY     := FINAL_QUERY || ' COALESCE(pkg_doc_exchange.GET_USER_DOC_ACC_STATUS(ODATA.DOCEXCHANGEVERID,' || I_LOGGEDINUSERID || ',-1,-1,ODATA.VIEWEDSTATUS,ODATA.ISUPLOADEDBYSPONSOR), ''N'') VIEWEDSTATUS';
    END IF;
    V_COUNT_QUERY        := 'select count(1)';
    IF DYNA_USER_FUN_CALL = 2 THEN
      V_COUNT_QUERY      := V_COUNT_QUERY || ' FROM (';
    END IF;
    V_COUNT_QUERY        := V_COUNT_QUERY || STC_SQL_PART0 || ' FROM (' || STC_SQL_PART || DYNMC_SQL_CLAUSE_PART || STC_SQL_CLAUSE_PART;
    IF DYNA_USER_FUN_CALL = 2 THEN
      STC_SQL_PART0      := STC_SQL_PART0 || ' FROM ( ';
    END IF;
    FINAL_QUERY := FINAL_QUERY || ' FROM (SELECT ROWNUM RNUM , TEMP.* FROM ( ' || PRE_STC_SQL_PART || STC_SQL_PART0 || STC_SQL_PART || DYNMC_SQL_CLAUSE_PART || STC_SQL_CLAUSE_PART || DYNMC_SORTING_PART || ' )TEMP WHERE ROWNUM <= ' || TO_CHAR(PAG_END_ROW) ||' ) ODATA WHERE ODATA.RNUM >= '|| TO_CHAR(I_OFFSET) ;
    --dbms_output.put_line('Count Query:' || V_COUNT_QUERY);
     --dbms_output.put_line('Final Main Query:' || FINAL_QUERY);
    EXECUTE IMMEDIATE V_COUNT_QUERY INTO O_COUNT;
    OPEN REF_CUS_DOC_RESULTS FOR FINAL_QUERY;
    --timediff := (dbms_utility.get_time - timediff)/100;
    --O_COUNT := timediff;
  END FN_GET_SPO_DOCEXCHNG;
  PROCEDURE FN_GET_SI_DOCEXCHNG(
      I_LOGGEDINUSERID  IN NUMBER,
      I_CREATEDFROMDATE IN DATE,
      I_CREATEDTODATE   IN DATE,
      I_METADATAMODDT   IN DATE,
      I_METADATAMODTODT IN DATE,
      I_PIIDS           IN NUM_ARRAY,
      I_ROLEIDS         IN NUM_ARRAY,
      I_SITEIDS         IN NUM_ARRAY,
      I_STUDYIDS        IN NUM_ARRAY,
      I_USERIDS         IN NUM_ARRAY,
      I_COMPOUNDID      IN NUMBER,
      I_PROGRAMID       IN NUMBER,
      I_PACKAGEID       IN NUMBER,
      I_COUNTRYID       IN NUMBER,
      I_DOCUMENTTYPE    IN NUMBER,
      I_LANGUAGEID      IN NUMBER,
      I_METADATAMODBY   IN NUMBER,
      I_UPLOADEDBY      IN NUMBER,
      I_FILEFORMAT      IN VARCHAR_ARRAY,
      I_DOCSTATUS       IN VARCHAR2,
      I_DOCUPLOADLEVEL  IN VARCHAR2,
      I_ISVIEWEDBYME    IN VARCHAR2,
      I_ORGFILENAME     IN VARCHAR2,
      I_REFMODELSUBSEC  IN VARCHAR2,
      I_REFMODELZONE    IN VARCHAR2,
      I_TITLE           IN VARCHAR2,
      I_UPLOADEDBYROLE  IN VARCHAR2,
      I_PERSNLIDS       IN NUM_ARRAY,
      I_PERSNLNMS       IN VARCHAR2,
      I_OFFSET          IN NUMBER,
      I_LIMIT           IN NUMBER,
      I_ORDRBY          IN VARCHAR2,
      I_SORTBY          IN VARCHAR2,
      O_COUNT OUT NUMBER,
      REF_CUS_DOC_RESULTS OUT SYS_REFCURSOR)
  AS
    I_DOCSTATUSX          VARCHAR2(50 BYTE);
    I_DOCSTATUSY          VARCHAR2(50 BYTE);
    PAG_END_ROW           NUMBER;
    I_UPLOADEDBYROLEX     VARCHAR2(20 BYTE);
    I_SHAREDBYMYSITE      NUMBER;
    I_UPLOADEDBYME        NUMBER;
    I_SHAREDTOME          NUMBER;
    PRE_STC_SQL_PART      VARCHAR2(32767 BYTE);
    STC_SQL_PART          VARCHAR2(32767 BYTE);
    STC_SQL_PART0         VARCHAR2(32767 BYTE);
    STC_SQL_PART1         VARCHAR2(32767 BYTE);
    STC_SQL_PART2         VARCHAR2(32767 BYTE);
    STC_SQL_PART3         VARCHAR2(32767 BYTE);
    STC_FRM_PART1         VARCHAR2(32767 BYTE);
    STC_FRM_PART2         VARCHAR2(32767 BYTE);
    DYNMC_SQL_CLAUSE_PART VARCHAR2(32767 BYTE);
    STC_SQL_CLAUSE_PART   VARCHAR2(32767 BYTE);
    STC_OUTER_CLAUSE_PART VARCHAR2(32767 BYTE);
    DYNMC_SORTING_PART    VARCHAR2(32767 BYTE);
    STR_DOCSTUDYMAP       VARCHAR2(9999 BYTE);
    STR_DOCSITEROLEMAP    VARCHAR2(9999 BYTE);
    STR_TBL_USERDOCMAP    VARCHAR2(9999 BYTE);
    STR_STUDY             VARCHAR2(9999 BYTE);
    STR_SITE              VARCHAR2(9999 BYTE);
    PI_IDS_STR            VARCHAR2(9999 BYTE);
    ROLE_IDS_STR          VARCHAR2(9999 BYTE);
    SITE_IDS_STR          VARCHAR2(9999 BYTE);
    STUDY_IDS_STR         VARCHAR2(9999 BYTE);
    USER_IDS_STR          VARCHAR2(9999 BYTE);
    PRSNL_IDS_STR         VARCHAR2(9999 BYTE);
    FILEFORMAT_STR        VARCHAR2(9999 BYTE);
    V_COUNT_QUERY         VARCHAR2(32767 BYTE);
    FINAL_QUERY           VARCHAR2(32767 BYTE);
    STR_CREATEDFROMDATE   VARCHAR2(9999 BYTE);
    STR_CREATEDTODATE     VARCHAR2(9999 BYTE);
    STR_METADATAMODDT     VARCHAR2(9999 BYTE);
    STR_METADATAMODTODT   VARCHAR2(9999 BYTE);
    DYNA_USER_FUN_CALL    NUMBER;
    TEMP_SORTBY           VARCHAR2(9999 BYTE);
  BEGIN
    I_DOCSTATUSX          := NULL;
    I_DOCSTATUSY          := I_DOCSTATUS;
    STR_DOCSTUDYMAP       := NULL;
    STR_DOCSITEROLEMAP    := NULL;
    STR_TBL_USERDOCMAP    := NULL;
    STR_STUDY             := NULL;
    STR_SITE              := NULL;
    PAG_END_ROW           := I_OFFSET + I_LIMIT - 1;
    IF I_UPLOADEDBYROLE    = 'sponsor' THEN
      I_UPLOADEDBYROLEX   := 'Y';
    ELSIF I_UPLOADEDBYROLE = 'user' THEN
      I_UPLOADEDBYROLEX   := 'N';
    ELSIF I_UPLOADEDBYROLE = 'bymysite' THEN
      I_SHAREDBYMYSITE    := I_LOGGEDINUSERID;
    ELSIF I_UPLOADEDBYROLE = 'byme' THEN
      I_UPLOADEDBYME      := I_LOGGEDINUSERID;
    ELSIF I_UPLOADEDBYROLE = 'tome' THEN
      I_SHAREDTOME        := I_LOGGEDINUSERID;
    ELSE
      I_UPLOADEDBYROLEX := NULL;
      I_SHAREDBYMYSITE  := NULL;
      I_UPLOADEDBYME    := NULL;
      I_SHAREDTOME      := NULL;
    END IF;
    DYNA_USER_FUN_CALL := 1;
    IF I_SORTBY         = 'DOCTITLE' THEN
      TEMP_SORTBY      := 'UPPER(TEMPDATA.DOCTITLE)';
    ELSIF I_SORTBY      = 'DOCTYPE' THEN
      TEMP_SORTBY      := 'UPPER(TEMPDATA.DOCTYPE)';
    ELSIF I_SORTBY      = 'DOCSTATUS' THEN
      TEMP_SORTBY      := 'UPPER(TEMPDATA.DOCSTATUS)';
    ELSIF I_SORTBY      = 'VIEWEDSTATUS' THEN
      TEMP_SORTBY      := 'UPPER(TEMPDATA.VIEWEDSTATUS)';
    ELSIF I_SORTBY      = 'SHAREDWITHROLE' THEN
      TEMP_SORTBY      := 'UPPER(TEMPDATA.SHAREDWITHROLE)';
    ELSIF I_SORTBY      = 'PERSONNELNAMES' THEN
      TEMP_SORTBY      := 'UPPER(TEMPDATA.PERSONNELNAMES)';
    ELSE
      TEMP_SORTBY := 'TEMPDATA.' || I_SORTBY;
    END IF;
    IF I_METADATAMODTODT IS NOT NULL THEN
      I_DOCSTATUSX       := 'metadata updated';
    END IF;
    IF I_DOCSTATUSY IS NULL THEN
      I_DOCSTATUSY  := I_DOCSTATUSX;
    END IF;
    PRE_STC_SQL_PART := 'SELECT TEMPDATA.* ';
    STC_SQL_PART1    := ' (SELECT DOCEXCHG.DOCEXCHANGEID,
DOCEXCHGVER.DOCEXCHANGEVERID,
DOCEXCHG.DOCTITLE,
DOCTYPEMASTER.DOCTYPE,
DOCEXCHGVER.ORGFILENAME,
DOCEXCHGVER.UPLOADEDON,
DOCEXCHGVER.UPLOADEDBY,
DOCEXCHGVER.DOCSTATUS,
(
CASE
WHEN DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''N''
THEN ''N.A.''
ELSE ''gfs''
END ) VIEWEDSTATUS,
(
CASE
WHEN DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''Y''
THEN ''Site''
ELSE ''Sponsor''
END ) SHAREDWITHROLE,
DOCEXCHG.DOCDESC,
(
CASE
WHEN DSRM.SITEID IN
(SELECT DISTINCT DSRM.SITEID
FROM TBL_DOCSITEROLEMAP DSRM,
TBL_USERROLEMAP URM
WHERE DSRM.SITEID         = URM.SITEID
AND DSRM.ROLEID           = URM.ROLEID
AND DSRM.DOCEXCHANGEVERID = DOCEXCHGVER.DOCEXCHANGEVERID  
AND URM.EFFECTIVESTARTDATE <= SYSDATE
AND (URM.EFFECTIVEENDDATE  >= SYSDATE
OR URM.EFFECTIVEENDDATE    IS NULL) 
AND URM.USERID            = ' || I_LOGGEDINUSERID ||
    ' 
)
THEN DSRM.SITEID
ELSE -1
END ) OPSITEID,
-1 OPUSERID,
DOCEXCHGVER.ISUPLOADEDBYSPONSOR,
pkg_encrypt.fn_decrypt(DOCEXCHGVER.PERSONNELNAMES) ||
(SELECT listagg(pkg_encrypt.fn_decrypt(UP.FIRSTNAME)
|| '' '' || pkg_encrypt.fn_decrypt(UP.LASTNAME), '','') within GROUP (
ORDER BY pkg_encrypt.fn_decrypt(UP.FIRSTNAME)) AS list
FROM TBL_USERPROFILES UP,
TBL_USERDOCMAP UDM
WHERE DOCEXCHGVER.DOCEXCHANGEVERID = UDM.DOCEXCHANGEVERID
AND UDM.ASSIGNEDTO                 = UP.USERID
AND UDM.ISPERSONNEL = 1
) PERSONNELNAMES ' ;
    STC_SQL_PART2 := ' )UNION
(SELECT DOCEXCHG.DOCEXCHANGEID,
DOCEXCHGVER.DOCEXCHANGEVERID,
DOCEXCHG.DOCTITLE,
DOCTYPEMASTER.DOCTYPE,
DOCEXCHGVER.ORGFILENAME,
DOCEXCHGVER.UPLOADEDON,
DOCEXCHGVER.UPLOADEDBY,
DOCEXCHGVER.DOCSTATUS,
(
CASE
WHEN DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''N''
THEN ''N.A.''
ELSE ''gfs''
END ) VIEWEDSTATUS,
(
CASE
WHEN DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''Y''
THEN ''Site''
ELSE ''Sponsor''
END ) SHAREDWITHROLE,
DOCEXCHG.DOCDESC,
-1 OPSITEID,
(
CASE
WHEN UDM.ASSIGNEDTO IN
(SELECT DISTINCT UDM.ASSIGNEDTO USERID
FROM TBL_USERDOCMAP UDM
WHERE UDM.ASSIGNEDTO     = ' || I_LOGGEDINUSERID ||
    ' 
AND UDM.DOCEXCHANGEVERID = DOCEXCHGVER.DOCEXCHANGEVERID
AND UDM.SITEID          IS NULL
)
THEN UDM.ASSIGNEDTO
ELSE -1
END) OPUSERID,
DOCEXCHGVER.ISUPLOADEDBYSPONSOR,
pkg_encrypt.fn_decrypt(DOCEXCHGVER.PERSONNELNAMES) ||
(SELECT listagg(pkg_encrypt.fn_decrypt(UP.FIRSTNAME)
|| '' '' || pkg_encrypt.fn_decrypt(UP.LASTNAME), '','') within GROUP (
ORDER BY pkg_encrypt.fn_decrypt(UP.FIRSTNAME)) AS list
FROM TBL_USERPROFILES UP,
TBL_USERDOCMAP UDM
WHERE DOCEXCHGVER.DOCEXCHANGEVERID = UDM.DOCEXCHANGEVERID
AND UDM.ASSIGNEDTO                 = UP.USERID
AND UDM.ISPERSONNEL = 1
) PERSONNELNAMES ' ;
    STC_SQL_PART3           := ' )UNION
(SELECT DOCEXCHG.DOCEXCHANGEID,
DOCEXCHGVER.DOCEXCHANGEVERID,
DOCEXCHG.DOCTITLE,
DOCTYPEMASTER.DOCTYPE,
DOCEXCHGVER.ORGFILENAME,
DOCEXCHGVER.UPLOADEDON,
DOCEXCHGVER.UPLOADEDBY,
DOCEXCHGVER.DOCSTATUS,
(
CASE
WHEN DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''N''
THEN ''N.A.''
ELSE ''gfs''
END ) VIEWEDSTATUS,
(
CASE
WHEN DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''Y''
THEN ''Site''
ELSE ''Sponsor''
END ) SHAREDWITHROLE,
DOCEXCHG.DOCDESC,
NULL OPSITEID,
NULL OPUSERID,
DOCEXCHGVER.ISUPLOADEDBYSPONSOR,
pkg_encrypt.fn_decrypt(DOCEXCHGVER.PERSONNELNAMES ) ||
(SELECT listagg(pkg_encrypt.fn_decrypt(UP.FIRSTNAME)
|| '' '' || pkg_encrypt.fn_decrypt(UP.LASTNAME), '','') within GROUP (
ORDER BY pkg_encrypt.fn_decrypt(UP.FIRSTNAME)) AS list
FROM TBL_USERPROFILES UP,
TBL_USERDOCMAP UDM
WHERE DOCEXCHGVER.DOCEXCHANGEVERID = UDM.DOCEXCHANGEVERID
AND UDM.ASSIGNEDTO                 = UP.USERID
AND UDM.ISPERSONNEL = 1
) PERSONNELNAMES ' ;
    STC_SQL_PART            := ' FROM TBL_DOCEXCHANGE DOCEXCHG
JOIN TBL_DOCEXCHANGEVERSION DOCEXCHGVER
ON DOCEXCHG.DOCEXCHANGEID = DOCEXCHGVER.DOCEXCHANGEID
JOIN TBL_DOCTYPEMASTER DOCTYPEMASTER
ON DOCEXCHG.DOCTYPEID = DOCTYPEMASTER.DOCTYPEID';
    STC_FRM_PART1           := ' JOIN TBL_DOCSITEROLEMAP DSRM
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSRM.DOCEXCHANGEVERID';
    STC_FRM_PART2           := ' JOIN TBL_USERDOCMAP UDM
ON DOCEXCHGVER.DOCEXCHANGEVERID = UDM.DOCEXCHANGEVERID';
    DYNMC_SQL_CLAUSE_PART   := ' WHERE DOCEXCHGVER.DELETEDON      IS NULL ';
    IF I_CREATEDFROMDATE    IS NOT NULL THEN
      STR_CREATEDFROMDATE   := TO_CHAR(I_CREATEDFROMDATE, 'yyyy-MM-dd hh24:mi:ss');
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND TO_DATE(TO_CHAR(DOCEXCHGVER.UPLOADEDON, ''yyyy-MM-dd hh24:mi:ss''), ''yyyy-MM-dd hh24:mi:ss'') >= TO_DATE(''' || STR_CREATEDFROMDATE || ''', ''yyyy-MM-dd hh24:mi:ss'')';
    END IF;
    IF I_CREATEDTODATE      IS NOT NULL THEN
      STR_CREATEDTODATE     := TO_CHAR(I_CREATEDTODATE, 'yyyy-MM-dd hh24:mi:ss');
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND TO_DATE(TO_CHAR(DOCEXCHGVER.UPLOADEDON, ''yyyy-MM-dd hh24:mi:ss''), ''yyyy-MM-dd hh24:mi:ss'') <= TO_DATE(''' || STR_CREATEDTODATE || ''', ''yyyy-MM-dd hh24:mi:ss'')';
    END IF;
    IF I_METADATAMODDT      IS NOT NULL THEN
      STR_METADATAMODDT     := TO_CHAR(I_METADATAMODDT, 'yyyy-MM-dd hh24:mi:ss');
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND TO_DATE(TO_CHAR(DOCEXCHG.METADATAUPDATEDON, ''yyyy-MM-dd hh24:mi:ss''), ''yyyy-MM-dd hh24:mi:ss'') >= TO_DATE(''' || STR_METADATAMODDT || ''', ''yyyy-MM-dd hh24:mi:ss'')';
    END IF;
    IF I_METADATAMODTODT    IS NOT NULL THEN
      STR_METADATAMODTODT   := TO_CHAR(I_METADATAMODTODT, 'yyyy-MM-dd hh24:mi:ss');
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND TO_DATE(TO_CHAR(DOCEXCHG.METADATAUPDATEDON, ''yyyy-MM-dd hh24:mi:ss''), ''yyyy-MM-dd hh24:mi:ss'') <= TO_DATE(''' || STR_METADATAMODTODT || ''', ''yyyy-MM-dd hh24:mi:ss'')';
    END IF;
    IF I_COUNTRYID IS NOT NULL THEN
      -- STC_SQL_PART          := STC_SQL_PART || ' JOIN TBL_COUNTRIES COUNTRIES      ON DOCEXCHG.COUNTRYID = COUNTRIES.COUNTRYID';
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.COUNTRYID  =' || I_COUNTRYID;
    END IF;
    IF I_DOCUMENTTYPE       IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.DOCTYPEID  =' || I_DOCUMENTTYPE;
    END IF;
    IF I_PACKAGEID IS NOT NULL THEN
      --STC_SQL_PART          := STC_SQL_PART || ' JOIN TBL_DOCPKGMASTER DOCPKG ON DOCEXCHG.DOCPKGID = DOCPKG.DOCPKGID ';
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.DOCPKGID  =' || I_PACKAGEID;
    END IF;
    IF I_LANGUAGEID IS NOT NULL THEN
      --STC_SQL_PART          := STC_SQL_PART || ' JOIN TBL_LANGUAGEMASTER LANGUAGES ON DOCEXCHG.LANGUAGEID = LANGUAGES.LANGUAGEID';
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.LANGUAGEID  =' || I_LANGUAGEID;
    END IF;
    IF I_METADATAMODBY      IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHG.METADATAUPDATEDBY  =' || I_METADATAMODBY;
    END IF;
    IF I_UPLOADEDBY         IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.UPLOADEDBY  =' || I_UPLOADEDBY;
    END IF;
    IF I_TITLE              IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(DOCEXCHG.DOCTITLE) LIKE LOWER(''%' || I_TITLE || '%'')';
    END IF;
    IF I_ORGFILENAME        IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(DOCEXCHGVER.ORGFILENAME) LIKE LOWER(''%' || I_ORGFILENAME || '%'')';
    END IF;
    IF I_PERSNLNMS          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(pkg_encrypt.fn_decrypt(DOCEXCHGVER.PERSONNELNAMES)) LIKE LOWER(''%' || I_PERSNLNMS || '%'')';
    END IF;
    IF I_REFMODELSUBSEC     IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(DOCEXCHG.MODELSUBSEC) = LOWER(''' || I_REFMODELSUBSEC || ''')';
    END IF;
    IF I_REFMODELZONE       IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(DOCEXCHG.MODELZONE) = LOWER(''' || I_REFMODELZONE || ''')';
    END IF;
    IF I_UPLOADEDBYROLEX    IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''' || I_UPLOADEDBYROLEX || '''';
    END IF;
    IF I_UPLOADEDBYME       IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.UPLOADEDBY =' || I_UPLOADEDBYME;
    END IF;
    IF I_COMPOUNDID      IS NOT NULL THEN
      IF STR_DOCSTUDYMAP IS NULL THEN
        STR_DOCSTUDYMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART     := STC_SQL_PART || ' JOIN TBL_DOCSTUDYMAP DSM
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID';
      END IF;
      IF STR_STUDY   IS NULL THEN
        STR_STUDY    := 'TABLE_JOIN_ADDED';
        STC_SQL_PART := STC_SQL_PART || ' JOIN TBL_STUDY ST
ON DSM.STUDYID = ST.STUDYID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND ST.COMPOUNDID =' || I_COMPOUNDID;
    END IF;
    IF I_PROGRAMID       IS NOT NULL THEN
      IF STR_DOCSTUDYMAP IS NULL THEN
        STR_DOCSTUDYMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART     := STC_SQL_PART || ' JOIN TBL_DOCSTUDYMAP DSM
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID';
      END IF;
      IF STR_STUDY   IS NULL THEN
        STR_STUDY    := 'TABLE_JOIN_ADDED';
        STC_SQL_PART := STC_SQL_PART || ' JOIN TBL_STUDY ST
ON DSM.STUDYID = ST.STUDYID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND ST.PROGID =' || I_PROGRAMID;
    END IF;
    IF I_STUDYIDS IS NOT NULL AND I_STUDYIDS.count >0 THEN
      FOR i IN 1..I_STUDYIDS.count
      LOOP
        EXIT
      WHEN I_STUDYIDS(i) = -1;
        IF i             = 1 THEN
          STUDY_IDS_STR := I_STUDYIDS(i);
        ELSE
          STUDY_IDS_STR := STUDY_IDS_STR || ',' || I_STUDYIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF STUDY_IDS_STR     IS NOT NULL THEN
      IF STR_DOCSTUDYMAP IS NULL THEN
        STR_DOCSTUDYMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART     := STC_SQL_PART || ' JOIN TBL_DOCSTUDYMAP DSM
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DSM.STUDYID  IN(' || STUDY_IDS_STR || ')';
    END IF;
    IF I_SITEIDS IS NOT NULL AND I_SITEIDS.count >0 THEN
      FOR i IN 1..I_SITEIDS.count
      LOOP
        EXIT
      WHEN I_SITEIDS(i) = -1;
        IF i            = 1 THEN
          SITE_IDS_STR := I_SITEIDS(i);
        ELSE
          SITE_IDS_STR := SITE_IDS_STR || ',' || I_SITEIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF SITE_IDS_STR         IS NOT NULL THEN
      IF STR_DOCSITEROLEMAP IS NULL THEN
        STR_DOCSITEROLEMAP  := 'TABLE_JOIN_ADDED';
        STC_FRM_PART2       := STC_FRM_PART2 || ' JOIN TBL_DOCSITEROLEMAP DSRM
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSRM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DSRM.SITEID  IN(' || SITE_IDS_STR || ')';
    END IF;
    --Added below condition to show documnets shared by current user's sites.
    IF I_SHAREDBYMYSITE     IS NOT NULL THEN
      IF STR_DOCSITEROLEMAP IS NULL THEN
        STR_DOCSITEROLEMAP  := 'TABLE_JOIN_ADDED';
        STC_FRM_PART2       := STC_FRM_PART2 || ' JOIN TBL_DOCSITEROLEMAP DSRM
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSRM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DSRM.SITEID  IN( SELECT INURM.SITEID
FROM TBL_USERROLEMAP INURM
WHERE INURM.SITEID           IS NOT NULL
AND INURM.EFFECTIVESTARTDATE <= SYSDATE
AND (INURM.EFFECTIVEENDDATE  >= SYSDATE
OR INURM.EFFECTIVEENDDATE    IS NULL)
AND INURM.USERID              = ' || I_LOGGEDINUSERID || ' )';
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''Y''';
    END IF;
    IF I_ROLEIDS IS NOT NULL AND I_ROLEIDS.count >0 THEN
      FOR i IN 1..I_ROLEIDS.count
      LOOP
        EXIT
      WHEN I_ROLEIDS(i) = -1;
        IF i            = 1 THEN
          ROLE_IDS_STR := I_ROLEIDS(i);
        ELSE
          ROLE_IDS_STR := ROLE_IDS_STR || ',' || I_ROLEIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF ROLE_IDS_STR         IS NOT NULL THEN
      IF STR_DOCSITEROLEMAP IS NULL THEN
        STR_DOCSITEROLEMAP  := 'TABLE_JOIN_ADDED';
        STC_FRM_PART2       := STC_FRM_PART2 || ' JOIN TBL_DOCSITEROLEMAP DSRM
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSRM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND DSRM.ROLEID  IN(' || ROLE_IDS_STR || ')';
    END IF;
    IF I_PIIDS IS NOT NULL AND I_PIIDS.count >0 THEN
      FOR i IN 1..I_PIIDS.count
      LOOP
        EXIT
      WHEN I_PIIDS(i) = -1;
        IF i          = 1 THEN
          PI_IDS_STR := I_PIIDS(i);
        ELSE
          PI_IDS_STR := PI_IDS_STR || ',' || I_PIIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF PI_IDS_STR           IS NOT NULL THEN
      IF STR_DOCSITEROLEMAP IS NULL THEN
        STR_DOCSITEROLEMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART2       := STC_SQL_PART2 || ' JOIN TBL_DOCSITEROLEMAP DSRM
ON DOCEXCHGVER.DOCEXCHANGEVERID = DSRM.DOCEXCHANGEVERID';
      END IF;
      IF STR_SITE     IS NULL THEN
        STR_SITE      := 'TABLE_JOIN_ADDED';
        STC_FRM_PART1 := STC_FRM_PART1 || ' JOIN TBL_SITE SIT
ON DSRM.SITEID = SIT.SITEID';
        STC_FRM_PART2 := STC_FRM_PART2 || ' JOIN TBL_SITE SIT
ON DSRM.SITEID = SIT.SITEID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND SIT.PIID  IN(' || PI_IDS_STR || ')';
    END IF;
    IF I_USERIDS IS NOT NULL AND I_USERIDS.count >0 THEN
      FOR i IN 1..I_USERIDS.count
      LOOP
        EXIT
      WHEN I_USERIDS(i) = -1;
        IF i            = 1 THEN
          USER_IDS_STR := I_USERIDS(i);
        ELSE
          USER_IDS_STR := USER_IDS_STR || ',' || I_USERIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF I_PERSNLIDS IS NOT NULL AND I_PERSNLIDS.count >0 THEN
      FOR i IN 1..I_PERSNLIDS.count
      LOOP
        EXIT
      WHEN I_PERSNLIDS(i) = -1;
        IF i              = 1 THEN
          PRSNL_IDS_STR  := I_PERSNLIDS(i);
        ELSE
          PRSNL_IDS_STR := PRSNL_IDS_STR || ',' || I_PERSNLIDS(i);
        END IF;
      END LOOP;
    END IF;
    --Added below overridden condition as assigned to me filter should show documents for current user only.
    IF I_SHAREDTOME IS NOT NULL THEN
      USER_IDS_STR  := I_SHAREDTOME;
    END IF;
    IF USER_IDS_STR         IS NOT NULL THEN
      IF STR_TBL_USERDOCMAP IS NULL THEN
        STR_TBL_USERDOCMAP  := 'TABLE_JOIN_ADDED';
        STC_FRM_PART1       := STC_FRM_PART1 || ' JOIN TBL_USERDOCMAP UDM
ON DOCEXCHGVER.DOCEXCHANGEVERID   = UDM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND (UDM.ASSIGNEDTO  IN(' || USER_IDS_STR || ') AND UDM.SITEID IS NULL AND UDM.ISPERSONNEL = 0)';
    END IF;
    IF PRSNL_IDS_STR        IS NOT NULL THEN
      IF STR_TBL_USERDOCMAP IS NULL THEN
        STR_TBL_USERDOCMAP  := 'TABLE_JOIN_ADDED';
        STC_FRM_PART1       := STC_FRM_PART1 || ' JOIN TBL_USERDOCMAP UDM
ON DOCEXCHGVER.DOCEXCHANGEVERID   = UDM.DOCEXCHANGEVERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND (UDM.ASSIGNEDTO  IN(' || PRSNL_IDS_STR || ') AND UDM.SITEID IS NULL AND UDM.ISPERSONNEL = 1)';
    END IF;
    IF I_FILEFORMAT IS NOT NULL AND I_FILEFORMAT.count >0 THEN
      FOR i IN 1..I_FILEFORMAT.count
      LOOP
        EXIT
      WHEN I_FILEFORMAT(i) = 'X_NO_DATA_SENT_X';
        IF i               = 1 THEN
          FILEFORMAT_STR  := 'UPPER(''' || I_FILEFORMAT(i) || ''')';
        ELSE
          FILEFORMAT_STR := FILEFORMAT_STR || ',UPPER(''' || I_FILEFORMAT(i) || ''')';
        END IF;
      END LOOP;
    END IF;
    IF FILEFORMAT_STR       IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND UPPER(DOCEXCHGVER.FILEFORMAT)  IN(' || FILEFORMAT_STR || ')';
    END IF;
    STC_SQL_CLAUSE_PART     := ' --FOR SITE USER ONLY
AND DOCEXCHGVER.DOCEXCHANGEVERID IN (
(SELECT UDM.DOCEXCHANGEVERID
FROM TBL_USERDOCMAP UDM
WHERE UDM.ASSIGNEDTO = ' || I_LOGGEDINUSERID || ' 
AND UDM.SITEID IS NULL
)
UNION
(SELECT DSRM.DOCEXCHANGEVERID
FROM TBL_DOCSITEROLEMAP DSRM,
TBL_USERROLEMAP URM
WHERE DSRM.SITEID = URM.SITEID
AND DSRM.ROLEID   = URM.ROLEID 
AND URM.EFFECTIVESTARTDATE <= SYSDATE
AND (URM.EFFECTIVEENDDATE  >= SYSDATE
OR URM.EFFECTIVEENDDATE    IS NULL)  
AND URM.USERID    = ' || I_LOGGEDINUSERID || ' 
) ) ';
    STC_OUTER_CLAUSE_PART   := ' ) TEMPDATA 
WHERE ((TEMPDATA.OPSITEID <> -1 
AND TEMPDATA.OPUSERID      = -1) 
OR (TEMPDATA.OPSITEID      = -1 
AND TEMPDATA.OPUSERID     <> -1) 
OR (TEMPDATA.OPSITEID      IS NULL 
AND TEMPDATA.OPUSERID      IS NULL))';
    IF I_DOCSTATUSY         IS NOT NULL THEN
      STC_OUTER_CLAUSE_PART := STC_OUTER_CLAUSE_PART || ' AND UPPER(TEMPDATA.DOCSTATUS)  = UPPER(''' || I_DOCSTATUSY || ''')';
    END IF;
    IF I_DOCSTATUSX         IS NOT NULL THEN
      STC_OUTER_CLAUSE_PART := STC_OUTER_CLAUSE_PART || ' AND UPPER(TEMPDATA.DOCSTATUS)  = UPPER(''' || I_DOCSTATUSX || ''')';
    END IF;
    IF I_ISVIEWEDBYME       IS NOT NULL THEN
      STC_OUTER_CLAUSE_PART := STC_OUTER_CLAUSE_PART || ' AND UPPER(TEMPDATA.VIEWEDSTATUS)  = UPPER(''' || I_ISVIEWEDBYME || ''')';
    END IF;
    IF I_SORTBY          IS NOT NULL THEN
      DYNMC_SORTING_PART := ' ORDER BY ' || TEMP_SORTBY || ' ' || I_ORDRBY;
    END IF;
    FINAL_QUERY          := 'SELECT ODATA.DOCEXCHANGEID,
ODATA.DOCEXCHANGEVERID,
ODATA.DOCTITLE,
ODATA.DOCTYPE,
ODATA.ORGFILENAME,
ODATA.UPLOADEDON,
ODATA.UPLOADEDBY,
ODATA.SHAREDWITHROLE,
ODATA.DOCDESC,
(CASE
WHEN  ODATA.OPSITEID = -1  THEN NULL
ELSE ODATA.OPSITEID END
) OPSITEID,
(CASE
WHEN ODATA.OPUSERID = -1  THEN NULL
ELSE ODATA.OPUSERID END
) OPUSERID,
pkg_encrypt.fn_decrypt(ODATA.PERSONNELNAMES) PERSONNELNAMES,';
    IF I_DOCSTATUSY      IS NOT NULL OR I_ISVIEWEDBYME IS NOT NULL OR I_SORTBY = 'DOCSTATUS' OR I_SORTBY = 'VIEWEDSTATUS' THEN
      DYNA_USER_FUN_CALL := 2;
      STC_SQL_PART0      := STC_SQL_PART0 || ' FROM (SELECT STSVWDATA.DOCEXCHANGEID,
STSVWDATA.DOCEXCHANGEVERID,
STSVWDATA.DOCTITLE,
STSVWDATA.DOCTYPE,
STSVWDATA.ORGFILENAME,
STSVWDATA.UPLOADEDON,
STSVWDATA.UPLOADEDBY,
STSVWDATA.SHAREDWITHROLE,
STSVWDATA.DOCDESC,
STSVWDATA.OPSITEID,
STSVWDATA.OPUSERID,
STSVWDATA.ISUPLOADEDBYSPONSOR,
pkg_encrypt.fn_decrypt(STSVWDATA.PERSONNELNAMES) PERSONNELNAMES,';
    END IF;
    IF (I_DOCSTATUSY IS NOT NULL OR I_SORTBY = 'DOCSTATUS') AND DYNA_USER_FUN_CALL = 2 THEN
      FINAL_QUERY    := FINAL_QUERY || ' ODATA.DOCSTATUS,';
      STC_SQL_PART0  := STC_SQL_PART0 || ' pkg_doc_exchange.GET_SITE_USER_STATUS(STSVWDATA.DOCEXCHANGEVERID,' || I_LOGGEDINUSERID || ',STSVWDATA.OPSITEID,STSVWDATA.OPUSERID,STSVWDATA.DOCSTATUS,STSVWDATA.ISUPLOADEDBYSPONSOR,1) DOCSTATUS,';
    END IF;
    IF I_DOCSTATUSY IS NULL AND (I_SORTBY <> 'DOCSTATUS' OR I_SORTBY IS NULL) AND DYNA_USER_FUN_CALL = 2 THEN
      FINAL_QUERY   := FINAL_QUERY || ' pkg_doc_exchange.GET_SITE_USER_STATUS(ODATA.DOCEXCHANGEVERID,' || I_LOGGEDINUSERID || ',ODATA.OPSITEID,ODATA.OPUSERID,ODATA.DOCSTATUS,ODATA.ISUPLOADEDBYSPONSOR,1) DOCSTATUS,';
      STC_SQL_PART0 := STC_SQL_PART0 || ' STSVWDATA.DOCSTATUS,';
    END IF;
    IF I_DOCSTATUSY IS NULL AND (I_SORTBY <> 'DOCSTATUS' OR I_SORTBY IS NULL) AND DYNA_USER_FUN_CALL = 1 THEN
      FINAL_QUERY   := FINAL_QUERY || ' pkg_doc_exchange.GET_SITE_USER_STATUS(ODATA.DOCEXCHANGEVERID,' || I_LOGGEDINUSERID || ',ODATA.OPSITEID,ODATA.OPUSERID,ODATA.DOCSTATUS,ODATA.ISUPLOADEDBYSPONSOR,1) DOCSTATUS,';
    END IF;
    IF (I_ISVIEWEDBYME IS NOT NULL OR I_SORTBY = 'VIEWEDSTATUS') AND DYNA_USER_FUN_CALL = 2 THEN
      FINAL_QUERY      := FINAL_QUERY || ' ODATA.VIEWEDSTATUS';
      STC_SQL_PART0    := STC_SQL_PART0 || ' COALESCE(pkg_doc_exchange.GET_USER_DOC_ACC_STATUS(STSVWDATA.DOCEXCHANGEVERID,' || I_LOGGEDINUSERID || ',STSVWDATA.OPSITEID,STSVWDATA.OPUSERID,STSVWDATA.VIEWEDSTATUS,STSVWDATA.ISUPLOADEDBYSPONSOR), ''N'') VIEWEDSTATUS';
    END IF;
    IF I_ISVIEWEDBYME IS NULL AND (I_SORTBY <> 'VIEWEDSTATUS' OR I_SORTBY IS NULL) AND DYNA_USER_FUN_CALL = 2 THEN
      FINAL_QUERY     := FINAL_QUERY || ' COALESCE(pkg_doc_exchange.GET_USER_DOC_ACC_STATUS(ODATA.DOCEXCHANGEVERID,' || I_LOGGEDINUSERID || ',ODATA.OPSITEID,ODATA.OPUSERID,ODATA.VIEWEDSTATUS,ODATA.ISUPLOADEDBYSPONSOR), ''N'') VIEWEDSTATUS';
      STC_SQL_PART0   := STC_SQL_PART0 || ' STSVWDATA.VIEWEDSTATUS';
    END IF;
    IF I_ISVIEWEDBYME IS NULL AND (I_SORTBY <> 'VIEWEDSTATUS' OR I_SORTBY IS NULL) AND DYNA_USER_FUN_CALL = 1 THEN
      FINAL_QUERY     := FINAL_QUERY || ' COALESCE(pkg_doc_exchange.GET_USER_DOC_ACC_STATUS(ODATA.DOCEXCHANGEVERID,' || I_LOGGEDINUSERID || ',ODATA.OPSITEID,ODATA.OPUSERID,ODATA.VIEWEDSTATUS,ODATA.ISUPLOADEDBYSPONSOR), ''N'') VIEWEDSTATUS';
    END IF;
    IF DYNA_USER_FUN_CALL    = 2 THEN
      STC_OUTER_CLAUSE_PART := ' ) STSVWDATA ' || STC_OUTER_CLAUSE_PART;
    END IF;
    V_COUNT_QUERY := 'select count(1) ' || STC_SQL_PART0 || ' FROM (' || STC_SQL_PART1 || STC_SQL_PART || STC_FRM_PART1 || DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''Y''' || STC_SQL_CLAUSE_PART || STC_SQL_PART2 || STC_SQL_PART || STC_FRM_PART2 || DYNMC_SQL_CLAUSE_PART || ' AND UDM.ISPERSONNEL = 0 AND DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''Y''' || STC_SQL_CLAUSE_PART || STC_SQL_PART3 || STC_SQL_PART || STC_FRM_PART1 || DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''N''' || STC_SQL_CLAUSE_PART || STC_SQL_PART3 || STC_SQL_PART || STC_FRM_PART2 || DYNMC_SQL_CLAUSE_PART || ' AND UDM.ISPERSONNEL = 0 AND DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''N''' || STC_SQL_CLAUSE_PART || ')' || STC_OUTER_CLAUSE_PART;
    FINAL_QUERY   := FINAL_QUERY || ' FROM (SELECT ROWNUM RNUM , TEMP.* FROM ( ' || PRE_STC_SQL_PART || STC_SQL_PART0 || ' FROM (' || STC_SQL_PART1 || STC_SQL_PART || STC_FRM_PART1 || DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''Y''' || STC_SQL_CLAUSE_PART || STC_SQL_PART2 || STC_SQL_PART || STC_FRM_PART2 || DYNMC_SQL_CLAUSE_PART || ' AND UDM.ISPERSONNEL = 0 AND DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''Y''' || STC_SQL_CLAUSE_PART || STC_SQL_PART3 || STC_SQL_PART || STC_FRM_PART1 || DYNMC_SQL_CLAUSE_PART || ' AND DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''N''' || STC_SQL_CLAUSE_PART || STC_SQL_PART3 || STC_SQL_PART || STC_FRM_PART2 || DYNMC_SQL_CLAUSE_PART || ' AND UDM.ISPERSONNEL = 0 AND DOCEXCHGVER.ISUPLOADEDBYSPONSOR = ''N''' || STC_SQL_CLAUSE_PART || ')' || STC_OUTER_CLAUSE_PART || DYNMC_SORTING_PART || ' )TEMP WHERE ROWNUM <= ' || TO_CHAR(PAG_END_ROW) ||' ) ODATA WHERE ODATA.RNUM >= '|| TO_CHAR( I_OFFSET);
    --dbms_output.put_line('Count Query:' || V_COUNT_QUERY);
    --dbms_output.put_line('Final Main Query:' || FINAL_QUERY);
    EXECUTE IMMEDIATE V_COUNT_QUERY INTO O_COUNT;
    OPEN REF_CUS_DOC_RESULTS FOR FINAL_QUERY;
  END FN_GET_SI_DOCEXCHNG;
  PROCEDURE SEARCH_PERSONNEL(
      I_LOGGEDINUSERID IN NUMBER,
      I_FIRSTNAME      IN VARCHAR2,
      I_LASTNAME       IN VARCHAR2,
      I_EMAIL          IN VARCHAR2,
      I_USERIDS        IN NUM_ARRAY,
      I_TRANSID        IN VARCHAR2,
      I_COUNTRYID      IN NUMBER,
      I_STUDYIDS       IN NUM_ARRAY,
      I_SITEIDS        IN NUM_ARRAY,
      I_ISSPONSOR      IN VARCHAR2,
      I_OFFSET         IN NUMBER,
      I_LIMIT          IN NUMBER,
      I_ORDRBY         IN VARCHAR2,
      I_SORTBY         IN VARCHAR2,
      O_COUNT OUT NUMBER,
      REF_CUS_PERSNL_RESULTS OUT SYS_REFCURSOR)
  AS
    PAG_END_ROW           NUMBER;
    V_COUNT_QUERY         VARCHAR2(9999 BYTE);
    FINAL_QUERY           VARCHAR2(9999 BYTE);
    STC_SQL_PART          VARCHAR2(9999 BYTE);
    STC_SQL_CLAUSE_PART   VARCHAR2(9999 BYTE);
    DYNMC_SQL_CLAUSE_PART VARCHAR2(9999 BYTE);
    TEMP_SORTBY           VARCHAR2(9999 BYTE);
    DYNMC_SORTING_PART    VARCHAR2(9999 BYTE);
    STR_USERROLEMAP       VARCHAR2(20 BYTE);
    USER_IDS_STR          VARCHAR2(9999 BYTE);
    STUDY_IDS_STR         VARCHAR2(9999 BYTE);
    SITE_IDS_STR          VARCHAR2(9999 BYTE);
  BEGIN
    STR_USERROLEMAP := NULL;
    STUDY_IDS_STR   := NULL;
    SITE_IDS_STR    := NULL;
    PAG_END_ROW     := I_OFFSET + I_LIMIT - 1;
    IF I_SORTBY      = 'FIRSTNAME' THEN
      TEMP_SORTBY   := 'UPPER(pkg_encrypt.fn_decrypt(FIRSTNAME))';
    ELSIF I_SORTBY   = 'LASTNAME' THEN
      TEMP_SORTBY   := 'UPPER(pkg_encrypt.fn_decrypt(LASTNAME))';
    ELSIF I_SORTBY   = 'EMAIL' THEN
      TEMP_SORTBY   := 'UPPER(pkg_encrypt.fn_decrypt(EMAIL))';
    ELSIF I_SORTBY   = 'TRANSCELERATEUSERID' THEN
      TEMP_SORTBY   := 'UPPER(TRANSCELERATEUSERID)';
    ELSIF I_SORTBY   = 'COUNTRYNAME' THEN
      TEMP_SORTBY   := 'UPPER(COUNTRYNAME)';
    ELSE
      TEMP_SORTBY := I_SORTBY;
    END IF;
    STC_SQL_PART            := 'SELECT DISTINCT pkg_encrypt.fn_decrypt(UP.FIRSTNAME) FIRSTNAME,
pkg_encrypt.fn_decrypt(UP.LASTNAME) LASTNAME,
pkg_encrypt.fn_decrypt(CT.EMAIL) EMAIL,
UP.USERID,
UP.TRANSCELERATEUSERID,
CN.COUNTRYID,
CN.COUNTRYNAME
FROM TBL_USERPROFILES UP
JOIN TBL_CONTACT CT
ON UP.CONTACTID = CT.CONTACTID
LEFT JOIN TBL_COUNTRIES CN
ON CT.COUNTRYCD = CN.COUNTRYCD    ';
    STC_SQL_CLAUSE_PART     := ' WHERE UP.ISACTIVE = ''Y'' ';
    IF I_ISSPONSOR          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND UP.ISSPONSOR = ''' || I_ISSPONSOR || ''' ';
    END IF;
    IF I_FIRSTNAME          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(pkg_encrypt.fn_decrypt(UP.FIRSTNAME)) LIKE LOWER(''%' || I_FIRSTNAME || '%'')';
    END IF;
    IF I_LASTNAME           IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(pkg_encrypt.fn_decrypt(UP.LASTNAME)) LIKE LOWER(''%' || I_LASTNAME || '%'')';
    END IF;
    IF I_EMAIL              IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(pkg_encrypt.fn_decrypt(CT.EMAIL)) LIKE LOWER(''%' || I_EMAIL || '%'')';
    END IF;
    IF I_TRANSID            IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(UP.TRANSCELERATEUSERID) LIKE LOWER(''%' || I_TRANSID || '%'')';
    END IF;
    IF I_COUNTRYID          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND CN.COUNTRYID  =' || I_COUNTRYID;
    END IF;
    IF I_USERIDS IS NOT NULL AND I_USERIDS.count >0 THEN
      FOR i IN 1..I_USERIDS.count
      LOOP
        EXIT
      WHEN I_USERIDS(i) = -1;
        IF i            = 1 THEN
          USER_IDS_STR := I_USERIDS(i);
        ELSE
          USER_IDS_STR := USER_IDS_STR || ',' || I_USERIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF USER_IDS_STR         IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND UP.USERID  IN(' || USER_IDS_STR || ')';
    END IF;
    IF I_STUDYIDS IS NOT NULL AND I_STUDYIDS.count >0 THEN
      FOR i IN 1..I_STUDYIDS.count
      LOOP
        EXIT
      WHEN I_STUDYIDS(i) = -1;
        IF i             = 1 THEN
          STUDY_IDS_STR := I_STUDYIDS(i);
        ELSE
          STUDY_IDS_STR := STUDY_IDS_STR || ',' || I_STUDYIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF STUDY_IDS_STR     IS NOT NULL THEN
      IF STR_USERROLEMAP IS NULL THEN
        STR_USERROLEMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART     := STC_SQL_PART || ' JOIN TBL_USERROLEMAP URM
ON UP.USERID               = URM.USERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND URM.STUDYID           IN(' || STUDY_IDS_STR || ')';
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND URM.EFFECTIVESTARTDATE <= SYSDATE'; --added for future date check
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND (URM.EFFECTIVEENDDATE >= SYSDATE OR URM.EFFECTIVEENDDATE IS NULL)';
    END IF;
    IF I_SITEIDS IS NOT NULL AND I_SITEIDS.count >0 THEN
      FOR i IN 1..I_SITEIDS.count
      LOOP
        EXIT
      WHEN I_SITEIDS(i) = -1;
        IF i            = 1 THEN
          SITE_IDS_STR := I_SITEIDS(i);
        ELSE
          SITE_IDS_STR := SITE_IDS_STR || ',' || I_SITEIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF SITE_IDS_STR      IS NOT NULL THEN
      IF STR_USERROLEMAP IS NULL THEN
        STR_USERROLEMAP  := 'TABLE_JOIN_ADDED';
        STC_SQL_PART     := STC_SQL_PART || ' JOIN TBL_USERROLEMAP URM
ON UP.USERID               = URM.USERID';
      END IF;
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND URM.SITEID            IN(' || SITE_IDS_STR || ')';
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND URM.EFFECTIVESTARTDATE <= SYSDATE'; --added for future date check
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND (URM.EFFECTIVEENDDATE >= SYSDATE OR URM.EFFECTIVEENDDATE IS NULL)';
    END IF;
    IF I_SORTBY          IS NOT NULL THEN
      DYNMC_SORTING_PART := ' ORDER BY ' || TEMP_SORTBY || ' ' || I_ORDRBY;
    END IF;
    V_COUNT_QUERY := 'select count(1) ' || ' FROM (' || STC_SQL_PART || STC_SQL_CLAUSE_PART || DYNMC_SQL_CLAUSE_PART || ')';
    FINAL_QUERY   := 'SELECT ODATA.FIRSTNAME,
ODATA.LASTNAME,
ODATA.EMAIL,
ODATA.USERID,
ODATA.TRANSCELERATEUSERID,
ODATA.COUNTRYID,
ODATA.COUNTRYNAME FROM (SELECT ROWNUM RNUM , TEMP.* FROM ( ' || STC_SQL_PART || STC_SQL_CLAUSE_PART || DYNMC_SQL_CLAUSE_PART || DYNMC_SORTING_PART || ' )TEMP WHERE ROWNUM <= ' || TO_CHAR(PAG_END_ROW) ||' ) ODATA WHERE ODATA.RNUM >= '|| TO_CHAR( I_OFFSET);
    --dbms_output.put_line('Count Query:' || V_COUNT_QUERY);
    --dbms_output.put_line('Final Main Query:' || FINAL_QUERY);
    EXECUTE IMMEDIATE V_COUNT_QUERY INTO O_COUNT;
    OPEN REF_CUS_PERSNL_RESULTS FOR FINAL_QUERY;
  END SEARCH_PERSONNEL;
  PROCEDURE GET_USERS_FOR_DOCEX(
      I_DOCEXID IN NUMBER,
      I_USERID  IN NUMBER,
      I_SITEID  IN NUMBER,
      REF_CUS_USERS OUT SYS_REFCURSOR)
  AS
    BY_USER_QUERY           VARCHAR2(9999 BYTE);
    DIRECT_ASSGN_USER_QUERY VARCHAR2(9999 BYTE);
    SITE_ROLE_USER_QUERY    VARCHAR2(9999 BYTE);
    SPONSOR23N1_1_QUERY     VARCHAR2(9999 BYTE);
    SPONSOR1_2_QUERY        VARCHAR2(9999 BYTE);
    FINAL_QUERY             VARCHAR2(9999 BYTE);
  BEGIN
    --Uploaded By Users
    BY_USER_QUERY   := 'SELECT DEV.UPLOADEDBY USERID
FROM TBL_DOCEXCHANGEVERSION DEV
WHERE DEV.DOCEXCHANGEID = ' || I_DOCEXID;
    IF I_USERID     IS NOT NULL THEN
      BY_USER_QUERY := BY_USER_QUERY || ' AND DEV.UPLOADEDBY  =' || I_USERID;
    END IF;
    --Direct Assignment Site-Users/Personnel
    DIRECT_ASSGN_USER_QUERY   := 'SELECT UDM.ASSIGNEDTO USERID
FROM TBL_USERDOCMAP UDM
JOIN TBL_DOCEXCHANGEVERSION DEV
ON UDM.DOCEXCHANGEVERID = DEV.DOCEXCHANGEVERID
WHERE UDM.SITEID       IS NULL
AND DEV.DOCEXCHANGEID   = ' || I_DOCEXID;
    IF I_USERID               IS NOT NULL THEN
      DIRECT_ASSGN_USER_QUERY := DIRECT_ASSGN_USER_QUERY || ' AND UDM.ASSIGNEDTO  =' || I_USERID;
    END IF;
    --Users by Site and Role to which the document is assigned
    SITE_ROLE_USER_QUERY   := 'SELECT URM.USERID USERID
FROM TBL_USERROLEMAP URM
JOIN TBL_DOCSITEROLEMAP DSRM
ON URM.SITEID  = DSRM.SITEID
AND URM.ROLEID = DSRM.ROLEID
JOIN TBL_DOCEXCHANGEVERSION DEV
ON DSRM.DOCEXCHANGEVERID                                                  = DEV.DOCEXCHANGEVERID
WHERE TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')
AND (URM.EFFECTIVEENDDATE                                                IS NULL
OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')      >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy''))
AND DEV.DOCEXCHANGEID                                                     = ' || I_DOCEXID;
    IF I_SITEID            IS NOT NULL THEN
      SITE_ROLE_USER_QUERY := SITE_ROLE_USER_QUERY || ' AND DSRM.SITEID  =' || I_SITEID;
    END IF;
    IF I_USERID            IS NOT NULL THEN
      SITE_ROLE_USER_QUERY := SITE_ROLE_USER_QUERY || ' AND URM.USERID  =' || I_USERID;
    END IF;
    --Sponsor Users of [RoleType 2,3] and [RoleType 1 + RoleId 1]
    SPONSOR23N1_1_QUERY :=
    'SELECT UP.USERID USERID
FROM TBL_DOCEXCHANGEVERSION DEV
JOIN TBL_DOCSTUDYMAP DSM
ON DEV.DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID
JOIN TBL_STUDY ST
ON DSM.STUDYID = ST.STUDYID
JOIN TBL_PROGRAM PG
ON ST.PROGID = PG.PROGID
JOIN TBL_USERPROFILES UP
ON PG.ORGID = UP.ORGID
JOIN TBL_USERROLEMAP URM
ON UP.USERID = URM.USERID
JOIN TBL_ROLES RL
ON URM.ROLEID                                                           = RL.ROLEID
WHERE (RL.ROLETYPEID                                                   IN (2,3)
OR (RL.ROLETYPEID                                                       = 1
AND URM.ROLEID                                                         IN (1,3)))
AND TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')
AND (URM.EFFECTIVEENDDATE                                              IS NULL
OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')    >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy''))
AND DEV.DOCEXCHANGEID                                                   = '
    || I_DOCEXID;
    IF I_USERID           IS NOT NULL THEN
      SPONSOR23N1_1_QUERY := SPONSOR23N1_1_QUERY || ' AND UP.USERID  =' || I_USERID;
    END IF;
    --Sponsor Users of [RoleType 1 + RoleId 2]
    SPONSOR1_2_QUERY   := 'SELECT URM.USERID USERID
FROM TBL_DOCSTUDYMAP DSM,  
TBL_USERROLEMAP URM,  
TBL_ROLES RL,  
TBL_DOCEXCHANGEVERSION DEV
WHERE DSM.STUDYID                                                       = URM.STUDYID
AND URM.ROLEID                                                          = RL.ROLEID
AND TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')
AND (URM.EFFECTIVEENDDATE                                              IS NULL
OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')    >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy''))
AND DEV.DOCEXCHANGEVERID                                                = DSM.DOCEXCHANGEVERID
AND (RL.ROLETYPEID                                                      = 1
AND URM.ROLEID                                                          = 2)
AND DEV.DOCEXCHANGEID = ' || I_DOCEXID;
    IF I_SITEID        IS NOT NULL THEN
      SPONSOR1_2_QUERY := SPONSOR1_2_QUERY || ' AND URM.SITEID  =' || I_SITEID;
    END IF;
    IF I_SITEID        IS NULL THEN
      SPONSOR1_2_QUERY := SPONSOR1_2_QUERY || ' AND URM.SITEID IN  
(SELECT DISTINCT SITEID  
FROM TBL_DOCSITEROLEMAP  
WHERE DOCEXCHANGEVERID = DSM.DOCEXCHANGEVERID  
)';
    END IF;
    IF I_USERID        IS NOT NULL THEN
      SPONSOR1_2_QUERY := SPONSOR1_2_QUERY || ' AND URM.USERID  =' || I_USERID;
    END IF;
    FINAL_QUERY := '(' || BY_USER_QUERY || ') UNION (' || DIRECT_ASSGN_USER_QUERY || ') UNION (' || SITE_ROLE_USER_QUERY || ') UNION (' || SPONSOR23N1_1_QUERY || ') UNION (' || SPONSOR1_2_QUERY || ')';
    --dbms_output.put_line('Final Main Query:' || FINAL_QUERY);
    OPEN REF_CUS_USERS FOR FINAL_QUERY;
  END GET_USERS_FOR_DOCEX;
/******************************************************************************
Object_name - SEARCH_USERS
Purpose - Function to fetch user for document exchange
*******************************************************************************/
  PROCEDURE SEARCH_USERS(
      I_LOGGEDINTRNSID IN VARCHAR2,
      I_FIRSTNAME      IN VARCHAR2,
      I_LASTNAME       IN VARCHAR2,
      I_STUDYNAME      IN VARCHAR2,
      I_ROLE           IN VARCHAR2,
      I_COUNTRY        IN VARCHAR2,
      I_CITY           IN VARCHAR2,
      I_STATE          IN VARCHAR2,
      I_EMAIL          IN VARCHAR2,
      I_ISFRSNDMSG     IN VARCHAR2,
      I_STUDYIDS       IN NUM_ARRAY,
      I_SITEIDS        IN NUM_ARRAY,
      I_OFFSET         IN NUMBER,
      I_LIMIT          IN NUMBER,
      I_ORDRBY         IN VARCHAR2,
      I_SORTBY         IN VARCHAR2,
      O_COUNT OUT NUMBER,
      REF_CUS_USERS_RESULTS OUT SYS_REFCURSOR)
  AS
    IS_SPONSOR_SQL     VARCHAR2(9999 BYTE);
    IS_SPONSOR_CNT     NUMBER;
    TYPE23_SQL         VARCHAR2(9999 BYTE);
    TYPE23_CNT         NUMBER;
    MASTER_SELECT_SQL  VARCHAR2(9999 BYTE);
    SELECT_SQL         VARCHAR2(9999 BYTE);
    SELECT_SQL1        VARCHAR2(9999 BYTE);
    FROM_SQL_1         VARCHAR2(9999 BYTE);
    FROM_SQL_2         VARCHAR2(9999 BYTE);
    WHERE_SQL_1        VARCHAR2(9999 BYTE);
    WHERE_SQL_2        VARCHAR2(9999 BYTE);
    PRE_SELECT_SQL2    VARCHAR2(9999 BYTE);
    POST_WHERE_SQL_2   VARCHAR2(9999 BYTE);
    SITE_LIST_SQL      VARCHAR2(9999 BYTE);
    PAG_END_ROW        NUMBER;
    V_COUNT_QUERY      VARCHAR2(9999 BYTE);
    FINAL_QUERY        VARCHAR2(9999 BYTE);
    TEMP_SORTBY        VARCHAR2(9999 BYTE);
    DYNMC_SORTING_PART VARCHAR2(9999 BYTE);
    STR_ROLES          VARCHAR2(9999 BYTE);
    STUDY_IDS_STR      VARCHAR2(9999 BYTE);
    SITE_IDS_STR       VARCHAR2(9999 BYTE);
    TEMP_STUDY_NM      VARCHAR2(9999 BYTE);
  BEGIN
    PAG_END_ROW      := I_OFFSET + I_LIMIT - 1;
    STR_ROLES        := NULL;
    PRE_SELECT_SQL2  := '';
    POST_WHERE_SQL_2 := '';
    IF I_SORTBY       = 'FIRSTNAME' THEN
      TEMP_SORTBY    := 'UPPER(pkg_encrypt.fn_decrypt(FIRSTNAME))';
    ELSIF I_SORTBY    = 'LASTNAME' THEN
      TEMP_SORTBY    := 'UPPER(pkg_encrypt.fn_decrypt(LASTNAME))';
    ELSIF I_SORTBY    = 'COUNTRYNAME' THEN
      TEMP_SORTBY    := 'UPPER(COUNTRYNAME)';
    ELSIF I_SORTBY    = 'TRANSCELERATEUSERID' THEN
      TEMP_SORTBY    := 'UPPER(TRANSCELERATEUSERID)';
    ELSIF I_SORTBY    = 'EMAIL' THEN
      TEMP_SORTBY    := 'UPPER(pkg_encrypt.fn_decrypt(EMAIL)';
    ELSIF I_SORTBY    = 'CITY' THEN
      TEMP_SORTBY    := 'UPPER(CITY)';
    ELSIF I_SORTBY    = 'STATE' THEN
      TEMP_SORTBY    := 'UPPER(STATE)';
    ELSIF I_SORTBY    = 'STUDYNAME' THEN
      TEMP_SORTBY    := 'UPPER(STUDYNAME)';
    ELSIF I_SORTBY    = 'SITENAME' THEN
      TEMP_SORTBY    := 'UPPER(SITENAME)';
    ELSIF I_SORTBY    = 'ROLENAME' THEN
      TEMP_SORTBY    := 'UPPER(ROLENAME)';
    ELSE
      TEMP_SORTBY := I_SORTBY;
    END IF;
    IS_SPONSOR_SQL := 'SELECT COUNT(USERID)    
FROM TBL_USERPROFILES    
WHERE ISSPONSOR         = ''Y''    
AND TRANSCELERATEUSERID = ''' || I_LOGGEDINTRNSID || '''';
    EXECUTE IMMEDIATE IS_SPONSOR_SQL INTO IS_SPONSOR_CNT;
    MASTER_SELECT_SQL    := ' SELECT USERID,    
pkg_encrypt.fn_decrypt(FIRSTNAME) FIRSTNAME,    
pkg_encrypt.fn_decrypt(LASTNAME) LASTNAME,    
ISSPONSOR,    
COUNTRYNAME,    
TRANSCELERATEUSERID,    
pkg_encrypt.fn_decrypt(EMAIL) EMAIL,    
CITY,    
STATE,    
STUDYNAME,    
SITENAME,
ROLENAME';
    SELECT_SQL           := ' SELECT UP.USERID,    
pkg_encrypt.fn_decrypt(UP.FIRSTNAME) FIRSTNAME,    
pkg_encrypt.fn_decrypt(UP.LASTNAME) LASTNAME,    
UP.ISSPONSOR,    
CN.COUNTRYNAME,    
UP.TRANSCELERATEUSERID,    
pkg_encrypt.fn_decrypt(CONTACT.EMAIL) EMAIL,    
CONTACT.CITY,    
CONTACT.STATE,    
ST.STUDYNAME,    
SI.SITENAME,
SI.SITEID ';
    FROM_SQL_1           := ' FROM TBL_USERROLEMAP URM  
JOIN TBL_USERPROFILES UP  
ON URM.USERID = UP.USERID  
JOIN TBL_CONTACT CONTACT  
ON UP.CONTACTID = CONTACT.CONTACTID  
LEFT JOIN TBL_STUDY ST  
ON URM.STUDYID = ST.STUDYID  
LEFT JOIN TBL_SITE SI  
ON URM.SITEID = SI.SITEID  
LEFT JOIN TBL_COUNTRIES CN  
ON UP.COUNTRYID   = CN.COUNTRYID ';
    WHERE_SQL_1          := ' WHERE UP.ISSPONSOR = ''N'' AND URM.SITEID IN    
(SELECT SITEID FROM SITEID_LIST    
)  
AND URM.EFFECTIVESTARTDATE <= SYSDATE  
AND (URM.EFFECTIVEENDDATE  IS NULL  
OR URM.EFFECTIVEENDDATE    >= SYSDATE) ';
    IF I_SORTBY          IS NOT NULL THEN
      DYNMC_SORTING_PART := ' ORDER BY ' || TEMP_SORTBY || ' ' || I_ORDRBY;
    END IF;
    --dbms_output.put_line('IS_SPONSOR_CNT:' || IS_SPONSOR_CNT);
    IF IS_SPONSOR_CNT = 0 THEN
      SITE_LIST_SQL  := 'WITH SITEID_LIST AS  
(SELECT URM.SITEID  
FROM TBL_USERROLEMAP URM  
JOIN TBL_USERPROFILES UP  
ON URM.USERID                = UP.USERID  
WHERE UP.TRANSCELERATEUSERID = ''' || I_LOGGEDINTRNSID || '''  
AND URM.SITEID              IS NOT NULL  
AND URM.EFFECTIVESTARTDATE  <= SYSDATE  
AND (URM.EFFECTIVEENDDATE   IS NULL  
OR URM.EFFECTIVEENDDATE     >= SYSDATE)  
)';
    END IF;
    IF IS_SPONSOR_CNT > 0 THEN
      TYPE23_SQL     := 'select COUNT(URM.USERID) from TBL_USERROLEMAP URM
JOIN TBL_USERPROFILES UP on 
URM.USERID = UP.USERID
where UP.TRANSCELERATEUSERID = ''' || I_LOGGEDINTRNSID || '''
AND URM.EFFECTIVESTARTDATE <= sysdate
AND (URM.EFFECTIVEENDDATE IS NULL OR URM.EFFECTIVEENDDATE >= sysdate)
AND URM.ROLEID IN (
select RL.ROLEID from TBL_ROLES RL
JOIN TBL_ROLETYPE RLT ON 
RL.ROLETYPEID = RLT.ROLETYPEID
where RLT.ROLETYPE IN (''Type II'',''Type III''))';
      EXECUTE IMMEDIATE TYPE23_SQL INTO TYPE23_CNT;
      --dbms_output.put_line('TYPE23_CNT:' || TYPE23_CNT);
      IF TYPE23_CNT    > 0 THEN
        SITE_LIST_SQL := 'WITH SITEID_LIST AS  
(select SI.SITEID from 
TBL_SITE SI JOIN 
TBL_STUDY ST ON SI.STUDYID = ST.STUDYID
JOIN TBL_PROGRAM PG ON ST.PROGID = PG.PROGID
where PG.ORGID = (select ORGID from TBL_USERPROFILES UP where UP.TRANSCELERATEUSERID = ''' || I_LOGGEDINTRNSID || ''') 
)';
      ELSE
        SITE_LIST_SQL := 'WITH SITEID_LIST AS  
((SELECT SI.SITEID
FROM TBL_USERROLEMAP URM
JOIN TBL_USERPROFILES UP
ON URM.USERID = UP.USERID
JOIN TBL_SITE SI
ON URM.STUDYID               = SI.STUDYID
WHERE UP.TRANSCELERATEUSERID = ''' || I_LOGGEDINTRNSID || '''
AND URM.EFFECTIVESTARTDATE  <= sysdate
AND (URM.EFFECTIVEENDDATE   IS NULL
OR URM.EFFECTIVEENDDATE     >= sysdate)
AND URM.ROLEID              IN  
(SELECT RL.ROLEID  
FROM TBL_ROLES RL  
JOIN TBL_ROLETYPE RLT  
ON RL.ROLETYPEID    = RLT.ROLETYPEID  
WHERE RLT.ROLETYPE IN (''Type I'')  
AND RL.ROLENAME    IN (''Study - Edit and View'',''Study - View Only'')  
))
UNION
(SELECT URM.SITEID
FROM TBL_USERROLEMAP URM
JOIN TBL_USERPROFILES UP
ON URM.USERID                = UP.USERID
WHERE UP.TRANSCELERATEUSERID = ''' || I_LOGGEDINTRNSID ||
        ''' 
AND URM.EFFECTIVESTARTDATE  <= sysdate
AND (URM.EFFECTIVEENDDATE   IS NULL
OR URM.EFFECTIVEENDDATE     >= sysdate)
AND URM.ROLEID              IN  
(SELECT RL.ROLEID  
FROM TBL_ROLES RL  
JOIN TBL_ROLETYPE RLT  
ON RL.ROLETYPEID    = RLT.ROLETYPEID  
WHERE RLT.ROLETYPE IN (''Type I'')  
AND RL.ROLENAME    IN (''Monitor'',''General Safety User'',''Local Safety Officer'')  
))  
)';
      END IF;
    END IF;
    PRE_SELECT_SQL2  := ' SELECT USERID,        
pkg_encrypt.fn_decrypt(FIRSTNAME) FIRSTNAME,        
pkg_encrypt.fn_decrypt(LASTNAME) LASTNAME,        
ISSPONSOR,        
COUNTRYNAME,        
TRANSCELERATEUSERID,        
pkg_encrypt.fn_decrypt(EMAIL) EMAIL,        
CITY,        
STATE,        
STUDYNAME,        
SITENAME,
SITEID,
ROLENAME 
FROM        
( ';
    POST_WHERE_SQL_2 := ' ) WHERE (SITEID IN        
(SELECT SITEID FROM SITEID_LIST        
)      
OR (SITEID IS NULL AND ROLENAME NOT IN (''Monitor'',''General Safety User'',''Local Safety Officer''))) ';
    FROM_SQL_2       := ' FROM TBL_USERPROFILES UP        
JOIN TBL_CONTACT CONTACT        
ON UP.CONTACTID = CONTACT.CONTACTID        
LEFT JOIN TBL_COUNTRIES CN        
ON UP.COUNTRYID = CN.COUNTRYID        
JOIN TBL_USERROLEMAP URM        
ON UP.USERID = URM.USERID        
LEFT JOIN TBL_STUDY ST        
ON URM.STUDYID = ST.STUDYID        
LEFT JOIN TBL_SITE SI        
ON ST.STUDYID      = SI.STUDYID ';
    WHERE_SQL_2      :=
    ' WHERE UP.ISSPONSOR = ''Y''        
AND UP.ISACTIVE    = ''Y''          
--AND ST.ISACTIVE   = ''Y''          
--AND SI.ISACTIVE = ''Y''        
AND ( (URM.SITEID IN          
(SELECT SITEID FROM SITEID_LIST          
)        
AND URM.ROLEID IN          
(SELECT RLI.ROLEID          
FROM TBL_ROLES RLI          
JOIN TBL_ROLETYPE RLTI          
ON RLI.ROLETYPEID    = RLTI.ROLETYPEID          
WHERE RLTI.ROLETYPE IN (''Type I'')          
AND RLI.ROLENAME    IN (''Monitor'',''General Safety User'',''Local Safety Officer'')          
))        
OR (URM.STUDYID IS NULL        
AND URM.SITEID  IS NULL        
AND URM.ROLEID  IS NOT NULL        
AND URM.ROLEID  IN          
(SELECT RLI.ROLEID          
FROM TBL_ROLES RLI          
JOIN TBL_ROLETYPE RLTI          
ON RLI.ROLETYPEID    = RLTI.ROLETYPEID          
WHERE RLTI.ROLETYPE IN (''Type II'', ''Type III'')          
))        
OR (URM.STUDYID IN          
(SELECT STUDYID          
FROM TBL_SITE          
WHERE SITEID IN            
(SELECT SITEID FROM SITEID_LIST            
)          
)        
AND URM.SITEID IS NULL        
AND URM.ROLEID IS NOT NULL        
AND URM.ROLEID IN          
(SELECT RLI.ROLEID          
FROM TBL_ROLES RLI          
JOIN TBL_ROLETYPE RLTI          
ON RLI.ROLETYPEID    = RLTI.ROLETYPEID          
WHERE RLTI.ROLETYPE IN (''Type I'')          
AND RLI.ROLENAME    IN (''Study - Edit and View'',''Study - View Only'')          
)) ) '
    ;
    IF I_FIRSTNAME IS NOT NULL THEN
      WHERE_SQL_1  := WHERE_SQL_1 || ' AND LOWER(pkg_encrypt.fn_decrypt(UP.FIRSTNAME)) LIKE LOWER(''%' || I_FIRSTNAME || '%'')';
      WHERE_SQL_2  := WHERE_SQL_2 || ' AND LOWER(pkg_encrypt.fn_decrypt(UP.FIRSTNAME)) LIKE LOWER(''%' || I_FIRSTNAME || '%'')';
    END IF;
    IF I_LASTNAME IS NOT NULL THEN
      WHERE_SQL_1 := WHERE_SQL_1 || ' AND LOWER(pkg_encrypt.fn_decrypt(UP.LASTNAME)) LIKE LOWER(''%' || I_LASTNAME || '%'')';
      WHERE_SQL_2 := WHERE_SQL_2 || ' AND LOWER(pkg_encrypt.fn_decrypt(UP.LASTNAME)) LIKE LOWER(''%' || I_LASTNAME || '%'')';
    END IF;
    IF I_STUDYNAME IS NOT NULL THEN
      TEMP_STUDY_NM  := ' LOWER(ST.STUDYNAME) LIKE LOWER(''%' || I_STUDYNAME || '%'')';
      IF IS_SPONSOR_CNT > 0 THEN
        TEMP_STUDY_NM  := ' (' || TEMP_STUDY_NM || ' OR (ST.STUDYNAME IS NULL AND UP.ISSPONSOR = ''Y'' AND UP.ORGID = (select ORGID from TBL_USERPROFILES UP where UP.TRANSCELERATEUSERID = ''' || I_LOGGEDINTRNSID || ''')))';
      END IF;
      TEMP_STUDY_NM  := ' AND' || TEMP_STUDY_NM;
      WHERE_SQL_1  := WHERE_SQL_1 || TEMP_STUDY_NM;
      WHERE_SQL_2  := WHERE_SQL_2 || TEMP_STUDY_NM;
    END IF;
    IF I_ROLE      = 'sponsor' THEN
      WHERE_SQL_1 := WHERE_SQL_1 || ' AND LOWER(UP.ISSPONSOR) LIKE LOWER(''Y'')';
      WHERE_SQL_2 := WHERE_SQL_2 || ' AND LOWER(UP.ISSPONSOR) LIKE LOWER(''Y'')';
    END IF;
    IF I_ROLE      = 'user' THEN
      WHERE_SQL_1 := WHERE_SQL_1 || ' AND LOWER(UP.ISSPONSOR) LIKE LOWER(''N'')';
      WHERE_SQL_2 := WHERE_SQL_2 || ' AND LOWER(UP.ISSPONSOR) LIKE LOWER(''N'')';
    END IF;
    IF I_COUNTRY  IS NOT NULL THEN
      WHERE_SQL_1 := WHERE_SQL_1 || ' AND LOWER(CONTACT.COUNTRYCD) LIKE LOWER(''%' || I_COUNTRY || '%'')';
      WHERE_SQL_2 := WHERE_SQL_2 || ' AND LOWER(CONTACT.COUNTRYCD) LIKE LOWER(''%' || I_COUNTRY || '%'')';
    END IF;
    IF I_CITY     IS NOT NULL THEN
      WHERE_SQL_1 := WHERE_SQL_1 || ' AND LOWER(CONTACT.CITY) LIKE LOWER(''%' || I_CITY || '%'')';
      WHERE_SQL_2 := WHERE_SQL_2 || ' AND LOWER(CONTACT.CITY) LIKE LOWER(''%' || I_CITY || '%'')';
    END IF;
    IF I_STATE    IS NOT NULL THEN
      WHERE_SQL_1 := WHERE_SQL_1 || ' AND LOWER(CONTACT.STATE) LIKE LOWER(''%' || I_STATE || '%'')';
      WHERE_SQL_2 := WHERE_SQL_2 || ' AND LOWER(CONTACT.STATE) LIKE LOWER(''%' || I_STATE || '%'')';
    END IF;
    IF I_EMAIL    IS NOT NULL THEN
      WHERE_SQL_1 := WHERE_SQL_1 || ' AND LOWER(pkg_encrypt.fn_decrypt(CONTACT.EMAIL)) LIKE LOWER(''%' || I_EMAIL || '%'')';
      WHERE_SQL_2 := WHERE_SQL_2 || ' AND LOWER(pkg_encrypt.fn_decrypt(CONTACT.EMAIL)) LIKE LOWER(''%' || I_EMAIL || '%'')';
    END IF;
    IF I_ISFRSNDMSG = 'N' THEN
      SELECT_SQL   := SELECT_SQL || ', NULL ROLENAME ';
    ELSE
      IF STR_ROLES IS NULL THEN
        STR_ROLES  := 'TABLE_JOIN_ADDED';
        FROM_SQL_1 := FROM_SQL_1 || ' JOIN TBL_ROLES RL ON URM.ROLEID = RL.ROLEID ';
        FROM_SQL_2 := FROM_SQL_2 || ' JOIN TBL_ROLES RL ON URM.ROLEID = RL.ROLEID ';
      END IF;
      SELECT_SQL := SELECT_SQL || ', RL.ROLENAME ';
    END IF;
    IF I_STUDYIDS IS NOT NULL AND I_STUDYIDS.count >0 THEN
      FOR i IN 1..I_STUDYIDS.count
      LOOP
        EXIT
      WHEN I_STUDYIDS(i) = -1;
        IF i             = 1 THEN
          STUDY_IDS_STR := I_STUDYIDS(i);
        ELSE
          STUDY_IDS_STR := STUDY_IDS_STR || ',' || I_STUDYIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF STUDY_IDS_STR IS NOT NULL THEN
      WHERE_SQL_1    := WHERE_SQL_1 || ' AND URM.STUDYID  IN(' || STUDY_IDS_STR || ')';
      WHERE_SQL_2    := WHERE_SQL_2 || ' AND URM.STUDYID  IN(' || STUDY_IDS_STR || ')';
    END IF;
    IF I_SITEIDS IS NOT NULL AND I_SITEIDS.count >0 THEN
      FOR i IN 1..I_SITEIDS.count
      LOOP
        EXIT
      WHEN I_SITEIDS(i) = -1;
        IF i            = 1 THEN
          SITE_IDS_STR := I_SITEIDS(i);
        ELSE
          SITE_IDS_STR := SITE_IDS_STR || ',' || I_SITEIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF SITE_IDS_STR IS NOT NULL THEN
      WHERE_SQL_1   := WHERE_SQL_1 || ' AND URM.SITEID  IN(' || SITE_IDS_STR || ')';
      WHERE_SQL_2   := WHERE_SQL_2 || ' AND URM.SITEID  IN(' || SITE_IDS_STR || ')';
    END IF;
    V_COUNT_QUERY := SITE_LIST_SQL || '(select count(1) ' || ' FROM ((' || SELECT_SQL || FROM_SQL_1 || WHERE_SQL_1 || ') UNION (' || PRE_SELECT_SQL2 || SELECT_SQL || FROM_SQL_2 || WHERE_SQL_2 || POST_WHERE_SQL_2 || ')))';
    FINAL_QUERY   := SITE_LIST_SQL || MASTER_SELECT_SQL || ' FROM (SELECT ROWNUM RNUM , TEMP.* FROM ( SELECT * FROM ( (' || SELECT_SQL || FROM_SQL_1 || WHERE_SQL_1 || ') UNION (' || PRE_SELECT_SQL2 || SELECT_SQL || FROM_SQL_2 || WHERE_SQL_2 || POST_WHERE_SQL_2 || ')) ' || DYNMC_SORTING_PART || ' ) TEMP WHERE ROWNUM <= ' || TO_CHAR(PAG_END_ROW) ||' ) ODATA WHERE ODATA.RNUM >= '|| TO_CHAR(I_OFFSET);
    --dbms_output.put_line('Count Query:' || V_COUNT_QUERY);
    --dbms_output.put_line('Final Main Query:' || FINAL_QUERY);
    EXECUTE IMMEDIATE V_COUNT_QUERY INTO O_COUNT;
    OPEN REF_CUS_USERS_RESULTS FOR FINAL_QUERY;
  END SEARCH_USERS;
  PROCEDURE SEARCH_USER_FR_SND_MSG(
      I_LOGGEDINUSERID IN NUMBER,
      I_FIRSTNAME      IN VARCHAR2,
      I_LASTNAME       IN VARCHAR2,
      I_EMAIL          IN VARCHAR2,
      I_USERIDS        IN NUM_ARRAY,
      I_TRANSID        IN VARCHAR2,
      I_COUNTRYID      IN NUMBER,
      I_STUDYIDS       IN NUM_ARRAY,
      I_SITEIDS        IN NUM_ARRAY,
      I_ISSPONSOR      IN VARCHAR2,
      I_STUDYNAME      IN VARCHAR2,
      I_OFFSET         IN NUMBER,
      I_LIMIT          IN NUMBER,
      I_ORDRBY         IN VARCHAR2,
      I_SORTBY         IN VARCHAR2,
      O_COUNT OUT NUMBER,
      REF_CUS_PERSNL_RESULTS OUT SYS_REFCURSOR)
  AS
    PAG_END_ROW           NUMBER;
    V_COUNT_QUERY         VARCHAR2(9999 BYTE);
    FINAL_QUERY           VARCHAR2(9999 BYTE);
    STC_SQL_PART          VARCHAR2(9999 BYTE);
    STC_SQL_CLAUSE_PART   VARCHAR2(9999 BYTE);
    DYNMC_SQL_CLAUSE_PART VARCHAR2(9999 BYTE);
    TEMP_SORTBY           VARCHAR2(9999 BYTE);
    DYNMC_SORTING_PART    VARCHAR2(9999 BYTE);
    STR_USERROLEMAP       VARCHAR2(20 BYTE);
    USER_IDS_STR          VARCHAR2(9999 BYTE);
    STUDY_IDS_STR         VARCHAR2(9999 BYTE);
    SITE_IDS_STR          VARCHAR2(9999 BYTE);
    ORGID_VAR             NUMBER;
    ORGID_QRY             VARCHAR2(9999 BYTE);
    SPNSR_CNT             NUMBER;
    SPNSR_QRY             VARCHAR2(9999 BYTE);
    SPNSR_23_CNT          NUMBER;
    SPNSR_23_QRY          VARCHAR2(9999 BYTE);
  BEGIN
    STR_USERROLEMAP := NULL;
    STUDY_IDS_STR   := NULL;
    SITE_IDS_STR    := NULL;
    PAG_END_ROW     := I_OFFSET + I_LIMIT - 1;
    IF I_SORTBY      = 'FIRSTNAME' THEN
      TEMP_SORTBY   := 'UPPER(pkg_encrypt.fn_decrypt(FIRSTNAME))';
    ELSIF I_SORTBY   = 'LASTNAME' THEN
      TEMP_SORTBY   := 'UPPER(pkg_encrypt.fn_decrypt(LASTNAME))';
    ELSIF I_SORTBY   = 'EMAIL' THEN
      TEMP_SORTBY   := 'UPPER(pkg_encrypt.fn_decrypt(EMAIL))';
    ELSIF I_SORTBY   = 'TRANSCELERATEUSERID' THEN
      TEMP_SORTBY   := 'UPPER(TRANSCELERATEUSERID)';
    ELSIF I_SORTBY   = 'COUNTRYNAME' THEN
      TEMP_SORTBY   := 'UPPER(COUNTRYNAME)';
    ELSIF I_SORTBY   = 'ROLENAME' THEN
      TEMP_SORTBY   := 'UPPER(ROLENAME)';
    ELSIF I_SORTBY   = 'STUDYNAME' THEN
      TEMP_SORTBY   := 'UPPER(STUDYNAME)';
    ELSIF I_SORTBY   = 'SITENAME' THEN
      TEMP_SORTBY   := 'UPPER(SITENAME)';
    ELSE
      TEMP_SORTBY := I_SORTBY;
    END IF;
    
    SPNSR_QRY := 'select count(*) from TBL_USERPROFILES where ISSPONSOR = ''Y'' and USERID = ' || I_LOGGEDINUSERID;
    EXECUTE IMMEDIATE SPNSR_QRY INTO SPNSR_CNT;
        
    IF SPNSR_CNT = 1 THEN     
      SPNSR_23_QRY := 'SELECT COUNT(URM.USERID) FROM TBL_USERROLEMAP URM JOIN TBL_ROLES RL  ON URM.ROLEID = RL.ROLEID 
      JOIN TBL_ROLETYPE RLT ON RL.ROLETYPEID    = RLT.ROLETYPEID WHERE (RL.ROLETYPEID IN (2,3)) 
      AND TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') 
      AND (URM.EFFECTIVEENDDATE IS NULL OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')) 
      AND URM.USERID = ' || I_LOGGEDINUSERID;
      EXECUTE IMMEDIATE SPNSR_23_QRY INTO SPNSR_23_CNT;
      
      ORGID_QRY := 'select ORGID from TBL_USERPROFILES where USERID = ' || I_LOGGEDINUSERID;
      EXECUTE IMMEDIATE ORGID_QRY INTO ORGID_VAR;
    END IF;
    
    IF SPNSR_CNT < 1 AND I_STUDYNAME IS NOT NULL THEN
      ORGID_QRY := 'select ORGID from TBL_STUDY where LOWER(STUDYNAME) = LOWER(''' || I_STUDYNAME || ''')';
      EXECUTE IMMEDIATE ORGID_QRY INTO ORGID_VAR;
    END IF;
    
    STC_SQL_PART            := 'SELECT DISTINCT pkg_encrypt.fn_decrypt(UP.FIRSTNAME) FIRSTNAME,
pkg_encrypt.fn_decrypt(UP.LASTNAME) LASTNAME,
pkg_encrypt.fn_decrypt(CT.EMAIL) EMAIL,
UP.USERID,
UP.TRANSCELERATEUSERID,
CN.COUNTRYID,
CN.COUNTRYNAME, 
RL.ROLENAME,        
STUDY.STUDYNAME, 
ST.SITENAME, 
UP.ISSPONSOR
FROM TBL_USERPROFILES UP
JOIN TBL_CONTACT CT
ON UP.CONTACTID = CT.CONTACTID
LEFT JOIN TBL_COUNTRIES CN
ON CT.COUNTRYCD = CN.COUNTRYCD   
JOIN TBL_USERROLEMAP URM    
ON UP.USERID = URM.USERID 
JOIN TBL_ROLES RL ON URM.ROLEID = RL.ROLEID 
LEFT JOIN TBL_STUDY STUDY ON URM.STUDYID = STUDY.STUDYID 
LEFT JOIN TBL_SITE ST ON URM.SITEID = ST.SITEID  ';
    STC_SQL_CLAUSE_PART     := ' WHERE UP.ISACTIVE = ''Y'' ';
	
    STC_SQL_CLAUSE_PART     := STC_SQL_CLAUSE_PART || ' AND TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')
    AND (URM.EFFECTIVEENDDATE IS NULL OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')    >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy''))';
	
    IF ORGID_VAR          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND (UP.ISSPONSOR = ''N'' OR UP.ORGID =' || ORGID_VAR || ')';
    END IF;
    IF I_ISSPONSOR          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND UP.ISSPONSOR = ''' || I_ISSPONSOR || ''' ';
    END IF;
    IF I_FIRSTNAME          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(pkg_encrypt.fn_decrypt(UP.FIRSTNAME)) LIKE LOWER(''%' || I_FIRSTNAME || '%'')';
    END IF;
    IF I_LASTNAME           IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(pkg_encrypt.fn_decrypt(UP.LASTNAME)) LIKE LOWER(''%' || I_LASTNAME || '%'')';
    END IF;
    IF I_EMAIL              IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(pkg_encrypt.fn_decrypt(CT.EMAIL)) LIKE LOWER(''%' || I_EMAIL || '%'')';
    END IF;
    IF I_TRANSID            IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND LOWER(UP.TRANSCELERATEUSERID) LIKE LOWER(''%' || I_TRANSID || '%'')';
    END IF;
    IF I_COUNTRYID          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND CN.COUNTRYID  =' || I_COUNTRYID;
    END IF;
    IF I_STUDYNAME          IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND (LOWER(STUDY.STUDYNAME) LIKE LOWER(''%' || I_STUDYNAME || '%'') OR STUDY.STUDYNAME IS NULL)';
    END IF;
    IF I_USERIDS IS NOT NULL AND I_USERIDS.count >0 THEN
      FOR i IN 1..I_USERIDS.count
      LOOP
        EXIT
      WHEN I_USERIDS(i) = -1;
        IF i            = 1 THEN
          USER_IDS_STR := I_USERIDS(i);
        ELSE
          USER_IDS_STR := USER_IDS_STR || ',' || I_USERIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF USER_IDS_STR         IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND UP.USERID  IN(' || USER_IDS_STR || ')';
    END IF;
    
    IF I_STUDYIDS IS NOT NULL AND I_STUDYIDS.count >0 THEN
      FOR i IN 1..I_STUDYIDS.count
      LOOP
        EXIT
      WHEN I_STUDYIDS(i) = -1;
        IF i             = 1 THEN
          STUDY_IDS_STR := I_STUDYIDS(i);
        ELSE
          STUDY_IDS_STR := STUDY_IDS_STR || ',' || I_STUDYIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF STUDY_IDS_STR        IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND (URM.STUDYID           IN(' || STUDY_IDS_STR || ') OR (URM.STUDYID IS NULL AND URM.ROLEID NOT IN (SELECT RL.ROLEID FROM TBL_ROLES RL JOIN TBL_ROLETYPE RLT ON RL.ROLETYPEID = RLT.ROLETYPEID WHERE RLT.ROLETYPE IN (''Type I'') AND RL.ROLENAME IN (''Monitor'',''General Safety User'',''Local Safety Officer'',''Study - Edit and View'',''Study - View Only''))))';
    END IF;
    
    IF I_SITEIDS IS NOT NULL AND I_SITEIDS.count >0 THEN
      FOR i IN 1..I_SITEIDS.count
      LOOP
        EXIT
      WHEN I_SITEIDS(i) = -1;
        IF i            = 1 THEN
          SITE_IDS_STR := I_SITEIDS(i);
        ELSE
          SITE_IDS_STR := SITE_IDS_STR || ',' || I_SITEIDS(i);
        END IF;
      END LOOP;
    END IF;
    IF SITE_IDS_STR         IS NOT NULL THEN
      DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND (URM.SITEID            IN(' || SITE_IDS_STR || ') OR (URM.SITEID IS NULL AND URM.ROLEID NOT IN (SELECT RL.ROLEID FROM TBL_ROLES RL JOIN TBL_ROLETYPE RLT ON RL.ROLETYPEID = RLT.ROLETYPEID WHERE RLT.ROLETYPE IN (''Type I'') AND RL.ROLENAME IN (''Monitor'',''General Safety User'',''Local Safety Officer''))))';
      ELSE
      IF SPNSR_CNT < 1 THEN 
        DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND (URM.SITEID in (SELECT URM1.SITEID FROM TBL_USERROLEMAP URM1 where URM1.USERID = '|| I_LOGGEDINUSERID || 
        ' AND TO_DATE(TO_CHAR(URM1.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') AND (URM1.EFFECTIVEENDDATE IS NULL OR TO_DATE(TO_CHAR(URM1.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy''))) OR (URM.SITEID IS NULL AND URM.ROLEID NOT IN (SELECT RL.ROLEID FROM TBL_ROLES RL JOIN TBL_ROLETYPE RLT ON RL.ROLETYPEID = RLT.ROLETYPEID WHERE RLT.ROLETYPE IN (''Type I'') AND RL.ROLENAME IN (''Monitor'',''General Safety User'',''Local Safety Officer''))))';
     END IF;
    END IF;
    
    IF SPNSR_CNT = 1 THEN 
      IF SPNSR_23_CNT < 1 THEN 
        DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' AND ((URM.SITEID IN(SELECT URM.SITEID FROM 
        TBL_USERROLEMAP URM JOIN TBL_ROLES RL  ON URM.ROLEID = RL.ROLEID JOIN TBL_ROLETYPE RLT ON RL.ROLETYPEID = RLT.ROLETYPEID 
        WHERE RLT.ROLETYPE IN (''Type I'') AND RL.ROLENAME IN (''Monitor'',''General Safety User'',''Local Safety Officer'') 
        AND TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') 
        AND (URM.EFFECTIVEENDDATE IS NULL OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')) 
        AND URM.STUDYID IS NOT NULL AND URM.USERID = ' || I_LOGGEDINUSERID || ') OR (URM.SITEID IS NULL AND URM.ROLEID NOT IN (SELECT RL.ROLEID FROM TBL_ROLES RL JOIN TBL_ROLETYPE RLT ON RL.ROLETYPEID = RLT.ROLETYPEID WHERE RLT.ROLETYPE IN (''Type I'') AND RL.ROLENAME IN (''Monitor'',''General Safety User'',''Local Safety Officer''))))';
        
        DYNMC_SQL_CLAUSE_PART := DYNMC_SQL_CLAUSE_PART || ' OR (URM.STUDYID IN(SELECT URM.STUDYID FROM 
        TBL_USERROLEMAP URM JOIN TBL_ROLES RL  ON URM.ROLEID = RL.ROLEID JOIN TBL_ROLETYPE RLT ON RL.ROLETYPEID = RLT.ROLETYPEID 
        WHERE RLT.ROLETYPE IN (''Type I'') AND RL.ROLENAME    IN (''Study - Edit and View'',''Study - View Only'') 
        AND TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') 
        AND (URM.EFFECTIVEENDDATE IS NULL OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')) 
        AND URM.STUDYID IS NOT NULL AND URM.USERID = ' || I_LOGGEDINUSERID || ') OR (URM.STUDYID IS NULL AND URM.ROLEID NOT IN (SELECT RL.ROLEID FROM TBL_ROLES RL JOIN TBL_ROLETYPE RLT ON RL.ROLETYPEID = RLT.ROLETYPEID WHERE RLT.ROLETYPE IN (''Type I'') AND RL.ROLENAME IN (''Monitor'',''General Safety User'',''Local Safety Officer'',''Study - Edit and View'',''Study - View Only'')))))';
      END IF;
    END IF;
    
    IF I_SORTBY          IS NOT NULL THEN
      DYNMC_SORTING_PART := ' ORDER BY ' || TEMP_SORTBY || ' ' || I_ORDRBY;
    END IF;
    V_COUNT_QUERY := 'select count(1) ' || ' FROM (' || STC_SQL_PART || STC_SQL_CLAUSE_PART || DYNMC_SQL_CLAUSE_PART || ')';
    FINAL_QUERY   := 'SELECT ODATA.FIRSTNAME ,
ODATA.LASTNAME,
ODATA.EMAIL,
ODATA.USERID,
ODATA.TRANSCELERATEUSERID,
ODATA.COUNTRYID,
ODATA.COUNTRYNAME, 
ODATA.ROLENAME,        
ODATA.STUDYNAME, 
ODATA.SITENAME, 
ODATA.ISSPONSOR FROM (SELECT ROWNUM RNUM , TEMP.* FROM ( ' || STC_SQL_PART || STC_SQL_CLAUSE_PART || DYNMC_SQL_CLAUSE_PART || DYNMC_SORTING_PART || ' )TEMP WHERE ROWNUM <= ' || TO_CHAR(PAG_END_ROW) ||' ) ODATA WHERE ODATA.RNUM >= '|| TO_CHAR( I_OFFSET);
    --dbms_output.put_line('Count Query:' || V_COUNT_QUERY);
    --dbms_output.put_line('Final Main Query:' || FINAL_QUERY);
    EXECUTE IMMEDIATE V_COUNT_QUERY INTO O_COUNT;
    OPEN REF_CUS_PERSNL_RESULTS FOR FINAL_QUERY;
  END SEARCH_USER_FR_SND_MSG;
  PROCEDURE PR_STUDYID_FOR_USER(
      I_LOGGEDINUSERID  IN NUMBER,
      REF_STUDYID_RESULTS OUT SYS_REFCURSOR)
  AS
    QURY_23 VARCHAR2(9999 BYTE);
    TYPE23_CNT NUMBER;
    SPNSR_CNT NUMBER;
    FINAL_QRY VARCHAR2(9999 BYTE);
    ORG_ID NUMBER;
    SPNSR_QRY VARCHAR2(9999 BYTE);
    TYPE23_SQL VARCHAR2(9999 BYTE);
  BEGIN
  SPNSR_QRY := 'select count(*) from TBL_USERPROFILES where ISSPONSOR = ''Y'' and USERID = ' || I_LOGGEDINUSERID;
  EXECUTE IMMEDIATE SPNSR_QRY INTO SPNSR_CNT;
    
  IF SPNSR_CNT > 0 THEN
    SPNSR_QRY := 'select ORGID from TBL_USERPROFILES where ISSPONSOR = ''Y'' and USERID = ' || I_LOGGEDINUSERID;
    EXECUTE IMMEDIATE SPNSR_QRY INTO ORG_ID;
      
      TYPE23_SQL     := 'select COUNT(URM.USERID) from TBL_USERROLEMAP URM
JOIN TBL_USERPROFILES UP on 
URM.USERID = UP.USERID
where UP.USERID = ' || I_LOGGEDINUSERID || 
'AND URM.EFFECTIVESTARTDATE <= sysdate
AND (URM.EFFECTIVEENDDATE IS NULL OR URM.EFFECTIVEENDDATE >= sysdate)
AND URM.ROLEID IN (
select RL.ROLEID from TBL_ROLES RL
JOIN TBL_ROLETYPE RLT ON 
RL.ROLETYPEID = RLT.ROLETYPEID
where RLT.ROLETYPE IN (''Type II'',''Type III''))';
      EXECUTE IMMEDIATE TYPE23_SQL INTO TYPE23_CNT;
      IF TYPE23_CNT > 0 THEN
      FINAL_QRY := 'SELECT studyEntity.STUDYID STUDYID FROM TBL_STUDY studyEntity WHERE studyEntity.orgId =' || ORG_ID;
      ELSE
      FINAL_QRY := 'SELECT URM.STUDYID STUDYID FROM 
        TBL_USERROLEMAP URM 
        WHERE TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') 
        AND (URM.EFFECTIVEENDDATE IS NULL OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')) 
        AND URM.STUDYID IS NOT NULL AND URM.USERID = ' || I_LOGGEDINUSERID;
      END IF;
  ELSE
    FINAL_QRY := 'SELECT URM.STUDYID STUDYID FROM 
        TBL_USERROLEMAP URM 
        WHERE TO_DATE(TO_CHAR(URM.EFFECTIVESTARTDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') <= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') 
        AND (URM.EFFECTIVEENDDATE IS NULL OR TO_DATE(TO_CHAR(URM.EFFECTIVEENDDATE,''dd-MM-yyyy''),''dd-MM-yyyy'') >= TO_DATE(TO_CHAR(SYSDATE,''dd-MM-yyyy''),''dd-MM-yyyy'')) 
        AND URM.STUDYID IS NOT NULL AND URM.USERID = ' || I_LOGGEDINUSERID;
  END IF;
  OPEN REF_STUDYID_RESULTS FOR FINAL_QRY;
  END PR_STUDYID_FOR_USER;
END PKG_DOC_EXCHANGE;
/