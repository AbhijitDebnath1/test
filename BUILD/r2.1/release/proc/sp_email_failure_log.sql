create or replace procedure sp_email_failure_log(
      IP_LOGGEDIN_USER  IN NUMBER,
      IP_EMAIL                    IN VARCHAR2,
      IP_TRANS_USERID             IN VARCHAR2,
      IP_LASTNAME                 IN VARCHAR2,
      IP_STUDY_ID                 IN NUM_ARRAY,
      IP_STUDY_SITE_ID            IN NUM_ARRAY,
      IP_EMAILSUBJECT             IN VARCHAR2,
      IP_EMAIL_FAIL_LOG_STARTDATE IN DATE,
      IP_EMAIL_FAIL_LOG_ENDDATE   IN DATE,
      IP_NOTIFIC_TYPE             IN NUM_ARRAY,
      IP_OFFSET                   IN NUMBER,
      IP_LIMIT                    IN NUMBER,
      IP_ORDRBY                   IN VARCHAR2,
      IP_SORTBY                   IN VARCHAR2,
      OP_COUNT                    OUT NUMBER,
      OP_REPORT_DATA              OUT SYS_REFCURSOR)
   -- /*********************************************************************
    --/**
    --/** Procedure:   SP_EMAIL_FAILURE_LOG
    --/** Description: POPULATES 'E-mail Delivery Failure Report' that provide the details of the delivery failed e-mail and the reason of failure if available.
    --/** Author:      Cognizant
    --/** Out:
    --/** In:
    --/*********************************************************************/
  AS
     V_SELECT_PART1          VARCHAR2(32000);
     V_SELECT_PART2          VARCHAR2(32000);
    V_FINAL_QUERY          VARCHAR2(32000);
    V_QUERY_FINAL            VARCHAR2(32000);
    V_DYNMC_SQL_CLAUSE_PART VARCHAR2(32000);
     -- DYNMC_WHR_CLAUSE_PART VARCHAR2(9999 BYTE);
    V_PAG_END_ROW           NUMBER;
    V_COUNT_QUERY         VARCHAR2(32000);
    --  V_ORGID               NUMBER(38);
    V_TEMP_SORTBY            VARCHAR2(32000);
    V_TEMP_ORDRBY              VARCHAR2(32000);
    V_ROLEID                 NUMBER ;
    V_ROLENAME               VARCHAR2(1000);
    V_WHERE_CLAUSE           VARCHAR2(32000);
    V_STUDY_IDS_STR            VARCHAR2(32000);
    V_SITE_IDS_STR             VARCHAR2(32000);
    V_IP_NOTIFIC_TYPE_STR      VARCHAR2(32000);
  --  V_COUNTRYID               VARCHAR2(9999 BYTE);
    V_FROMDATE                DATE;
    V_TODATE                  DATE;
     -- V_FACILITY               VARCHAR2(1000);
   /* type  V_ROLENAME is varray(200) of varchar2(1000);
    L_ROLENAME V_ROLENAME;
     */
     V_ORGID                    NUMBER;
     V_ISSPONSOR                VARCHAR2(1 CHAR);
     V_NOT_EXIST                VARCHAR2(32000);

 BEGIN
    V_TEMP_ORDRBY := '';

    --P_OFFSET :=I_OFFSET+1;
    IF IP_SORTBY    = 'STUDYID' THEN
    V_TEMP_SORTBY := 'UPPER(TRIM(STUDYID))';
      ELSIF
       IP_SORTBY    = 'EMAIL' THEN
    V_TEMP_SORTBY := 'UPPER(TRIM(EMAIL))';
      ELSIF
       IP_SORTBY    = 'TRANSCELERATEUSERID' THEN
    V_TEMP_SORTBY := 'UPPER(TRIM(TRANSCELERATEUSERID))';
     ELSIF
       IP_SORTBY    = 'FIRSTNAME' THEN
    V_TEMP_SORTBY := 'UPPER(TRIM(FIRSTNAME))';
      ELSIF
       IP_SORTBY    = 'LASTNAME' THEN
    V_TEMP_SORTBY := 'UPPER(TRIM(LASTNAME))';
      ELSIF
       IP_SORTBY    = 'SITEID' THEN
    V_TEMP_SORTBY := 'UPPER(TRIM(SITEID))';
     ELSIF
       IP_SORTBY    = 'SUBJECT' THEN
    V_TEMP_SORTBY := 'UPPER(TRIM(SUBJECT))';

      ELSIF
       IP_SORTBY    = 'TITLE' THEN
    V_TEMP_SORTBY := 'UPPER(TRIM(TITLE))';

      ELSIF
       IP_SORTBY    = 'TYPEDESC' THEN
    V_TEMP_SORTBY := 'UPPER(TRIM(TYPEDESC))';

       ELSIF
       IP_SORTBY    = 'SENTDATE' THEN
     V_TEMP_SORTBY := 'SENTDATE';

       ELSE
    V_TEMP_SORTBY := 'SENTDATE';
    --INSERT INTO temp_table VALUES (V_TEMP_SORTBY);
    END IF;

  SELECT ORGID INTO V_ORGID FROM TBL_USERPROFILES WHERE USERID=IP_LOGGEDIN_USER;
  SELECT ISSPONSOR INTO V_ISSPONSOR FROM TBL_USERPROFILES WHERE USERID=IP_LOGGEDIN_USER;

  V_SELECT_PART1 :=
     ' SELECT DISTINCT PKG_ENCRYPT.FN_DECRYPT(UP.FIRSTNAME) FIRSTNAME,
      PKG_ENCRYPT.FN_DECRYPT(UP.LASTNAME) LASTNAME,
      UP.TRANSCELERATEUSERID TRANSCELERATEUSERID,
      UP.ACTUALTRANSCELERATEUSERID ACTUALTRANSCELERATEUSERID,
      PKG_ENCRYPT.FN_DECRYPT(ELOG.EMAILID) EMAIL,
      PKG_ENCRYPT.FN_DECRYPT(ELOG.EMAILSUBJECT) SUBJECT,
      PKG_ENCRYPT.FN_DECRYPT(ELOG.EMAILSUBJECT) TITLE,
      EFAILOG.SENTDATE SENTDATE,
      EFAILOG.FAILUREREASON,
      ALRTNOTF.ALERTNOTIFICATIONID,
      (SELECT STUDYNAME FROM TBL_STUDY WHERE STUDYID=ALRTSTDYSITE.STUDYID)STUDY,
      ALRTSTDYSITE.STUDYID STUDYID,
     (SELECT LISTAGG(TSI.SITENAME,'','') WITHIN GROUP (ORDER BY TSI.SITEID)
        FROM TBL_ALERTNOTIFSTUDYSITEMAP ANSS, TBL_SITE TSI
       WHERE ANSS.SITEID = TSI.SITEID
        AND ANSS.STUDYID = ALRTSTDYSITE.STUDYID
        AND ANSS.ALERTNOTIFID = ALRTSTDYSITE.ALERTNOTIFID
      ) SITE,
     (SELECT LISTAGG(TSI.siteid,'','') WITHIN GROUP (ORDER BY TSI.SITEID)
        FROM TBL_ALERTNOTIFSTUDYSITEMAP ANSS, TBL_SITE TSI
       WHERE ANSS.SITEID = TSI.SITEID
        AND ANSS.STUDYID = ALRTSTDYSITE.STUDYID
        AND ANSS.ALERTNOTIFID = ALRTSTDYSITE.ALERTNOTIFID
      ) SITEID,
      ALRTNOTF.TEMPLATECODE ALERT_TEMP_CODE,
      TMPL.TEMPLATECODE,
      PKG_ENCRYPT.FN_DECRYPT(ALRTNOTF.TITLEJSON) TITLEJSON,
      PKG_ENCRYPT.FN_DECRYPT(TMPL.TITLETEMPLATE) TITLETEMPLATE,
      ALRTNOTF.ALERTNOTIFICATIONTYPEID,
      ALRTNOTFTYPE.TYPEDESC
    FROM TBL_EMAILFAILURELOG EFAILOG
      JOIN TBL_EMAILLOG ELOG
      ON EFAILOG.REFID=ELOG.REFID
      LEFT JOIN TBL_USERPROFILES UP
      ON UP.USERID= ELOG.USERID
      LEFT JOIN TBL_ALERTSANDNOTIFICATIONS ALRTNOTF
      ON ELOG.EMAILLOGID=ALRTNOTF.EMAILLOGID
      LEFT JOIN TBL_ALERTNOTIFSTUDYSITEMAP ALRTSTDYSITE
      ON ALRTNOTF.ALERTNOTIFICATIONID=ALRTSTDYSITE.ALERTNOTIFID
      LEFT JOIN TBL_ALERTANDNOTIFICATIONTYPE ALRTNOTFTYPE
      ON ALRTNOTF.ALERTNOTIFICATIONTYPEID=ALRTNOTFTYPE.ALERTNOTIFICATIONTYPEID
      LEFT JOIN TBL_TEMPLATE TMPL
      ON TMPL.TEMPLATECODE=ALRTNOTF.TEMPLATECODE ';

      V_SELECT_PART2 :=
      'SELECT DISTINCT PKG_ENCRYPT.FN_DECRYPT(UP.FIRSTNAME) FIRSTNAME,
      PKG_ENCRYPT.FN_DECRYPT(UP.LASTNAME) LASTNAME,
      UP.TRANSCELERATEUSERID TRANSCELERATEUSERID,
      UP.ACTUALTRANSCELERATEUSERID ACTUALTRANSCELERATEUSERID,
      PKG_ENCRYPT.FN_DECRYPT(ELOG.EMAILID) EMAIL,
      PKG_ENCRYPT.FN_DECRYPT(ELOG.EMAILSUBJECT) SUBJECT,
      PKG_ENCRYPT.FN_DECRYPT(ELOG.EMAILSUBJECT) TITLE,
      EFAILOG.SENTDATE SENTDATE,
      EFAILOG.FAILUREREASON,
      ALRTNOTF.ALERTNOTIFICATIONID,
      (SELECT STUDYNAME FROM TBL_STUDY WHERE STUDYID=ALRTNOTF.STUDYID)STUDYNAME,
      ALRTNOTF.STUDYID STUDYID,
      (SELECT SITENAME FROM TBL_SITE WHERE SITEID=ALRTNOTF.SITEID),
      TO_CHAR(ALRTNOTF.SITEID) SITEID,
      ALRTNOTF.TEMPLATECODE ALERT_TEMP_CODE,
      TMPL.TEMPLATECODE,
      PKG_ENCRYPT.FN_DECRYPT(ALRTNOTF.TITLEJSON) TITLEJSON,
      PKG_ENCRYPT.FN_DECRYPT(TMPL.TITLETEMPLATE) TITLETEMPLATE,
      ALRTNOTF.ALERTNOTIFICATIONTYPEID,
      ALRTNOTFTYPE.TYPEDESC
     FROM TBL_EMAILFAILURELOG EFAILOG
      JOIN TBL_EMAILLOG ELOG
      ON EFAILOG.REFID=ELOG.REFID
      LEFT JOIN TBL_USERPROFILES UP
      ON UP.USERID= ELOG.USERID
    LEFT JOIN TBL_ALERTSANDNOTIFICATIONS ALRTNOTF
      ON ELOG.EMAILLOGID=ALRTNOTF.EMAILLOGID
      LEFT JOIN TBL_ALERTANDNOTIFICATIONTYPE ALRTNOTFTYPE
      ON ALRTNOTF.ALERTNOTIFICATIONTYPEID=ALRTNOTFTYPE.ALERTNOTIFICATIONTYPEID
       LEFT JOIN TBL_ALERTNOTIFSTUDYSITEMAP ALRTSTDYSITE
      ON ALRTNOTF.ALERTNOTIFICATIONID=ALRTSTDYSITE.ALERTNOTIFID
      LEFT JOIN TBL_TEMPLATE TMPL
      ON TMPL.TEMPLATECODE=ALRTNOTF.TEMPLATECODE ';


    IF IP_STUDY_ID  IS NOT NULL AND IP_STUDY_ID.count >0 THEN
    FOR i IN 1..IP_STUDY_ID.count
    LOOP
      EXIT
    WHEN IP_STUDY_ID(i) = -1;
      IF i             = 1 THEN
      V_STUDY_IDS_STR := IP_STUDY_ID(i);
      ELSE
      V_STUDY_IDS_STR := V_STUDY_IDS_STR || ',' || IP_STUDY_ID(i);
      END IF;

    END LOOP;

    END IF;

     IF IP_STUDY_SITE_ID IS NOT NULL AND IP_STUDY_SITE_ID.count >0 THEN
    FOR i IN 1..IP_STUDY_SITE_ID.count
    LOOP
      EXIT
    WHEN IP_STUDY_SITE_ID(i) = -1;
      IF i            = 1 THEN
      V_SITE_IDS_STR := IP_STUDY_SITE_ID(i);
      ELSE
      V_SITE_IDS_STR := V_SITE_IDS_STR || ',' || IP_STUDY_SITE_ID(i);
      END IF;
    END LOOP;


    END IF;

  IF IP_LOGGEDIN_USER              IS NOT NULL AND V_ISSPONSOR='N' THEN
      V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART || ' WHERE up.USERID IN (SELECT SITESTAFFUSERID FROM TBL_ORGSITESTAFFMAP A WHERE A.ORGID= ' || V_ORGID ||')' ;
    ELSE
    V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART || ' WHERE ((up.USERID IN (SELECT USERID FROM TBL_USERPROFILES A WHERE A.ORGID= ' || V_ORGID ||') OR up.USERID IN (SELECT USERID FROM TBL_USERROLEMAP WHERE STUDYID IN (SELECT STUDYID FROM TBL_STUDY WHERE ORGID= '||V_ORGID||'))) OR (PKG_ENCRYPT.FN_DECRYPT(ELOG.EMAILID) IN (SELECT PKG_ENCRYPT.FN_DECRYPT(RECIEPIENTEMAIL) FROM TBL_REGISTRATIONINVITE WHERE SENTBYORGANIZATION = '||V_ORGID||')))' ;
    END IF;

  IF IP_LASTNAME IS NOT NULL THEN
    V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART || ' AND LOWER(pkg_encrypt.fn_decrypt(up.LASTNAME)) LIKE LOWER(''%' || (TRIM(IP_LASTNAME)) ||'%'')';
  END IF;

    IF IP_EMAIL IS NOT NULL THEN
    V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART || ' AND LOWER(pkg_encrypt.fn_decrypt(ELOG.EMAILID))LIKE LOWER(''%'||lower(TRIM(IP_EMAIL))||'%'')' ;
    END IF;

    IF IP_EMAILSUBJECT IS NOT NULL THEN
    V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART || ' AND LOWER(pkg_encrypt.fn_decrypt(elog.EMAILSUBJECT)) LIKE LOWER(''%'|| IP_EMAILSUBJECT||'%'')' ;
    END IF;

    IF IP_EMAIL_FAIL_LOG_STARTDATE  IS NOT NULL THEN

     V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART || ' AND efailog.sentdate  >= TO_DATE('''|| IP_EMAIL_FAIL_LOG_STARTDATE ||

  ''', ''dd-mon-yy HH24:MI:SS'')';
    END IF;

    IF IP_EMAIL_FAIL_LOG_ENDDATE  IS NOT NULL THEN

     V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART || ' AND efailog.sentdate  <= TO_DATE('''|| IP_EMAIL_FAIL_LOG_ENDDATE ||' 23:59:59'||

  ''', ''dd-mon-yy HH24:MI:SS'')';
    END IF;

    IF IP_TRANS_USERID IS NOT NULL THEN
     V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART || ' AND LOWER(UP.ACTUALTRANSCELERATEUSERID) =LOWER('''||IP_TRANS_USERID||''')';
    END IF;

    IF IP_NOTIFIC_TYPE IS NOT NULL AND IP_NOTIFIC_TYPE.count >0 THEN
      FOR i IN 1..IP_NOTIFIC_TYPE.count
      LOOP
      EXIT
      WHEN IP_NOTIFIC_TYPE(i) = -1;
      IF i             = 1 THEN
        V_IP_NOTIFIC_TYPE_STR := IP_NOTIFIC_TYPE(i);
      ELSE
        V_IP_NOTIFIC_TYPE_STR := V_IP_NOTIFIC_TYPE_STR || ',' || IP_NOTIFIC_TYPE(i);
      END IF;
      END LOOP;
      end if;
      if V_IP_NOTIFIC_TYPE_STR is not null then
     V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART || ' AND alrtnotf.ALERTNOTIFICATIONTYPEID in ('|| V_IP_NOTIFIC_TYPE_STR||')';
  END IF;



  IF V_STUDY_IDS_STR IS NOT NULL THEN
     IF V_DYNMC_SQL_CLAUSE_PART IS NOT NULL THEN
      V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART; --|| ' AND ';
     END IF;
      if V_SITE_IDS_STR is not null then
     V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART || ' and  ( SELECT LISTAGG(STD.STUDYID,'','') WITHIN GROUP (ORDER BY ALRTNOTF.ALERTNOTIFICATIONTYPEID )  FROM TBL_STUDY STD WHERE  (ALRTSTDYSITE.STUDYID =STD.STUDYID   OR ALRTNOTF.STUDYID=STD.STUDYID)) in ('||V_STUDY_IDS_STR ||')';
      elsif V_SITE_IDS_STR is null then
    V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART || ' and  ( SELECT LISTAGG(STD.STUDYID,'','') WITHIN GROUP (ORDER BY ALRTNOTF.ALERTNOTIFICATIONTYPEID )  FROM TBL_STUDY STD WHERE  (ALRTSTDYSITE.STUDYID =STD.STUDYID   OR ALRTNOTF.STUDYID=STD.STUDYID)) in ('||V_STUDY_IDS_STR ||')';
      end if;
   END IF;


  IF V_SITE_IDS_STR IS NOT NULL THEN
      IF V_DYNMC_SQL_CLAUSE_PART IS NOT NULL THEN
      V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART;-- || ' AND ';
      END IF;
      V_DYNMC_SQL_CLAUSE_PART := V_DYNMC_SQL_CLAUSE_PART || ' AND ( SELECT LISTAGG(SIT.SITEID,'','') WITHIN GROUP (ORDER BY ALRTNOTF.ALERTNOTIFICATIONTYPEID )  FROM TBL_SITE SIT WHERE  (ALRTSTDYSITE.SITEID=SIT.SITEID  OR ALRTNOTF.SITEID=SIT.SITEID)) in ('||V_SITE_IDS_STR||')';
  END IF;


  V_TEMP_ORDRBY := ' ORDER BY ' || V_TEMP_SORTBY || ' ' || IP_ORDRBY;

  V_NOT_EXIST := ' AND NOT EXISTS (SELECT 1 FROM TBL_ALERTNOTIFSTUDYSITEMAP alertmaps where alertmaps.ALERTNOTIFID= ALRTNOTF.ALERTNOTIFICATIONID)';

  V_QUERY_FINAL := '('||V_SELECT_PART1  || V_DYNMC_SQL_CLAUSE_PART || ')  UNION ('|| V_SELECT_PART2 || V_DYNMC_SQL_CLAUSE_PART || V_NOT_EXIST ||')';

    V_COUNT_QUERY := 'select count(1) from (' || V_QUERY_FINAL || ')';
   -- INSERT INTO temp_table VALUES (V_COUNT_QUERY);
   -- commit;

    dbms_output.put_line(V_COUNT_QUERY);
    EXECUTE IMMEDIATE V_COUNT_QUERY INTO OP_COUNT;
    V_PAG_END_ROW           := IP_OFFSET + IP_LIMIT;

    V_FINAL_QUERY          := 'SELECT * FROM (SELECT ROWNUM RNUM , TEMP.* FROM (' || V_QUERY_FINAL  ||  V_TEMP_ORDRBY ||' ) TEMP  WHERE ROWNUM < ' || TO_CHAR(V_PAG_END_ROW) || ' ) WHERE RNUM >='|| TO_CHAR(IP_OFFSET);
    dbms_output.put_line(V_FINAL_QUERY);
    --INSERT INTO temp_table VALUES (V_FINAL_QUERY);
    --commit;

   OPEN OP_REPORT_DATA FOR V_FINAL_QUERY ;

  END sp_email_failure_log;
/